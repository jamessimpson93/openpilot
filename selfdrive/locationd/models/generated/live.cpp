#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8519043703690293172) {
   out_8519043703690293172[0] = 0;
   out_8519043703690293172[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8519043703690293172[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8519043703690293172[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8519043703690293172[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8519043703690293172[5] = -sin(in_vec[1]);
   out_8519043703690293172[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8519043703690293172[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8519043703690293172[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8519043703690293172[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8519043703690293172[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8519043703690293172[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8519043703690293172[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8519043703690293172[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8519043703690293172[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8519043703690293172[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8519043703690293172[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8519043703690293172[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3680497765668344875) {
   out_3680497765668344875[0] = delta_x[0] + nom_x[0];
   out_3680497765668344875[1] = delta_x[1] + nom_x[1];
   out_3680497765668344875[2] = delta_x[2] + nom_x[2];
   out_3680497765668344875[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3680497765668344875[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3680497765668344875[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3680497765668344875[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3680497765668344875[7] = delta_x[6] + nom_x[7];
   out_3680497765668344875[8] = delta_x[7] + nom_x[8];
   out_3680497765668344875[9] = delta_x[8] + nom_x[9];
   out_3680497765668344875[10] = delta_x[9] + nom_x[10];
   out_3680497765668344875[11] = delta_x[10] + nom_x[11];
   out_3680497765668344875[12] = delta_x[11] + nom_x[12];
   out_3680497765668344875[13] = delta_x[12] + nom_x[13];
   out_3680497765668344875[14] = delta_x[13] + nom_x[14];
   out_3680497765668344875[15] = delta_x[14] + nom_x[15];
   out_3680497765668344875[16] = delta_x[15] + nom_x[16];
   out_3680497765668344875[17] = delta_x[16] + nom_x[17];
   out_3680497765668344875[18] = delta_x[17] + nom_x[18];
   out_3680497765668344875[19] = delta_x[18] + nom_x[19];
   out_3680497765668344875[20] = delta_x[19] + nom_x[20];
   out_3680497765668344875[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_490859156954727028) {
   out_490859156954727028[0] = -nom_x[0] + true_x[0];
   out_490859156954727028[1] = -nom_x[1] + true_x[1];
   out_490859156954727028[2] = -nom_x[2] + true_x[2];
   out_490859156954727028[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_490859156954727028[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_490859156954727028[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_490859156954727028[6] = -nom_x[7] + true_x[7];
   out_490859156954727028[7] = -nom_x[8] + true_x[8];
   out_490859156954727028[8] = -nom_x[9] + true_x[9];
   out_490859156954727028[9] = -nom_x[10] + true_x[10];
   out_490859156954727028[10] = -nom_x[11] + true_x[11];
   out_490859156954727028[11] = -nom_x[12] + true_x[12];
   out_490859156954727028[12] = -nom_x[13] + true_x[13];
   out_490859156954727028[13] = -nom_x[14] + true_x[14];
   out_490859156954727028[14] = -nom_x[15] + true_x[15];
   out_490859156954727028[15] = -nom_x[16] + true_x[16];
   out_490859156954727028[16] = -nom_x[17] + true_x[17];
   out_490859156954727028[17] = -nom_x[18] + true_x[18];
   out_490859156954727028[18] = -nom_x[19] + true_x[19];
   out_490859156954727028[19] = -nom_x[20] + true_x[20];
   out_490859156954727028[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1252192294812973493) {
   out_1252192294812973493[0] = 1.0;
   out_1252192294812973493[1] = 0;
   out_1252192294812973493[2] = 0;
   out_1252192294812973493[3] = 0;
   out_1252192294812973493[4] = 0;
   out_1252192294812973493[5] = 0;
   out_1252192294812973493[6] = 0;
   out_1252192294812973493[7] = 0;
   out_1252192294812973493[8] = 0;
   out_1252192294812973493[9] = 0;
   out_1252192294812973493[10] = 0;
   out_1252192294812973493[11] = 0;
   out_1252192294812973493[12] = 0;
   out_1252192294812973493[13] = 0;
   out_1252192294812973493[14] = 0;
   out_1252192294812973493[15] = 0;
   out_1252192294812973493[16] = 0;
   out_1252192294812973493[17] = 0;
   out_1252192294812973493[18] = 0;
   out_1252192294812973493[19] = 0;
   out_1252192294812973493[20] = 0;
   out_1252192294812973493[21] = 0;
   out_1252192294812973493[22] = 1.0;
   out_1252192294812973493[23] = 0;
   out_1252192294812973493[24] = 0;
   out_1252192294812973493[25] = 0;
   out_1252192294812973493[26] = 0;
   out_1252192294812973493[27] = 0;
   out_1252192294812973493[28] = 0;
   out_1252192294812973493[29] = 0;
   out_1252192294812973493[30] = 0;
   out_1252192294812973493[31] = 0;
   out_1252192294812973493[32] = 0;
   out_1252192294812973493[33] = 0;
   out_1252192294812973493[34] = 0;
   out_1252192294812973493[35] = 0;
   out_1252192294812973493[36] = 0;
   out_1252192294812973493[37] = 0;
   out_1252192294812973493[38] = 0;
   out_1252192294812973493[39] = 0;
   out_1252192294812973493[40] = 0;
   out_1252192294812973493[41] = 0;
   out_1252192294812973493[42] = 0;
   out_1252192294812973493[43] = 0;
   out_1252192294812973493[44] = 1.0;
   out_1252192294812973493[45] = 0;
   out_1252192294812973493[46] = 0;
   out_1252192294812973493[47] = 0;
   out_1252192294812973493[48] = 0;
   out_1252192294812973493[49] = 0;
   out_1252192294812973493[50] = 0;
   out_1252192294812973493[51] = 0;
   out_1252192294812973493[52] = 0;
   out_1252192294812973493[53] = 0;
   out_1252192294812973493[54] = 0;
   out_1252192294812973493[55] = 0;
   out_1252192294812973493[56] = 0;
   out_1252192294812973493[57] = 0;
   out_1252192294812973493[58] = 0;
   out_1252192294812973493[59] = 0;
   out_1252192294812973493[60] = 0;
   out_1252192294812973493[61] = 0;
   out_1252192294812973493[62] = 0;
   out_1252192294812973493[63] = 0;
   out_1252192294812973493[64] = 0;
   out_1252192294812973493[65] = 0;
   out_1252192294812973493[66] = -0.5*state[4];
   out_1252192294812973493[67] = -0.5*state[5];
   out_1252192294812973493[68] = -0.5*state[6];
   out_1252192294812973493[69] = 0;
   out_1252192294812973493[70] = 0;
   out_1252192294812973493[71] = 0;
   out_1252192294812973493[72] = 0;
   out_1252192294812973493[73] = 0;
   out_1252192294812973493[74] = 0;
   out_1252192294812973493[75] = 0;
   out_1252192294812973493[76] = 0;
   out_1252192294812973493[77] = 0;
   out_1252192294812973493[78] = 0;
   out_1252192294812973493[79] = 0;
   out_1252192294812973493[80] = 0;
   out_1252192294812973493[81] = 0;
   out_1252192294812973493[82] = 0;
   out_1252192294812973493[83] = 0;
   out_1252192294812973493[84] = 0;
   out_1252192294812973493[85] = 0;
   out_1252192294812973493[86] = 0;
   out_1252192294812973493[87] = 0.5*state[3];
   out_1252192294812973493[88] = 0.5*state[6];
   out_1252192294812973493[89] = -0.5*state[5];
   out_1252192294812973493[90] = 0;
   out_1252192294812973493[91] = 0;
   out_1252192294812973493[92] = 0;
   out_1252192294812973493[93] = 0;
   out_1252192294812973493[94] = 0;
   out_1252192294812973493[95] = 0;
   out_1252192294812973493[96] = 0;
   out_1252192294812973493[97] = 0;
   out_1252192294812973493[98] = 0;
   out_1252192294812973493[99] = 0;
   out_1252192294812973493[100] = 0;
   out_1252192294812973493[101] = 0;
   out_1252192294812973493[102] = 0;
   out_1252192294812973493[103] = 0;
   out_1252192294812973493[104] = 0;
   out_1252192294812973493[105] = 0;
   out_1252192294812973493[106] = 0;
   out_1252192294812973493[107] = 0;
   out_1252192294812973493[108] = -0.5*state[6];
   out_1252192294812973493[109] = 0.5*state[3];
   out_1252192294812973493[110] = 0.5*state[4];
   out_1252192294812973493[111] = 0;
   out_1252192294812973493[112] = 0;
   out_1252192294812973493[113] = 0;
   out_1252192294812973493[114] = 0;
   out_1252192294812973493[115] = 0;
   out_1252192294812973493[116] = 0;
   out_1252192294812973493[117] = 0;
   out_1252192294812973493[118] = 0;
   out_1252192294812973493[119] = 0;
   out_1252192294812973493[120] = 0;
   out_1252192294812973493[121] = 0;
   out_1252192294812973493[122] = 0;
   out_1252192294812973493[123] = 0;
   out_1252192294812973493[124] = 0;
   out_1252192294812973493[125] = 0;
   out_1252192294812973493[126] = 0;
   out_1252192294812973493[127] = 0;
   out_1252192294812973493[128] = 0;
   out_1252192294812973493[129] = 0.5*state[5];
   out_1252192294812973493[130] = -0.5*state[4];
   out_1252192294812973493[131] = 0.5*state[3];
   out_1252192294812973493[132] = 0;
   out_1252192294812973493[133] = 0;
   out_1252192294812973493[134] = 0;
   out_1252192294812973493[135] = 0;
   out_1252192294812973493[136] = 0;
   out_1252192294812973493[137] = 0;
   out_1252192294812973493[138] = 0;
   out_1252192294812973493[139] = 0;
   out_1252192294812973493[140] = 0;
   out_1252192294812973493[141] = 0;
   out_1252192294812973493[142] = 0;
   out_1252192294812973493[143] = 0;
   out_1252192294812973493[144] = 0;
   out_1252192294812973493[145] = 0;
   out_1252192294812973493[146] = 0;
   out_1252192294812973493[147] = 0;
   out_1252192294812973493[148] = 0;
   out_1252192294812973493[149] = 0;
   out_1252192294812973493[150] = 0;
   out_1252192294812973493[151] = 0;
   out_1252192294812973493[152] = 0;
   out_1252192294812973493[153] = 1.0;
   out_1252192294812973493[154] = 0;
   out_1252192294812973493[155] = 0;
   out_1252192294812973493[156] = 0;
   out_1252192294812973493[157] = 0;
   out_1252192294812973493[158] = 0;
   out_1252192294812973493[159] = 0;
   out_1252192294812973493[160] = 0;
   out_1252192294812973493[161] = 0;
   out_1252192294812973493[162] = 0;
   out_1252192294812973493[163] = 0;
   out_1252192294812973493[164] = 0;
   out_1252192294812973493[165] = 0;
   out_1252192294812973493[166] = 0;
   out_1252192294812973493[167] = 0;
   out_1252192294812973493[168] = 0;
   out_1252192294812973493[169] = 0;
   out_1252192294812973493[170] = 0;
   out_1252192294812973493[171] = 0;
   out_1252192294812973493[172] = 0;
   out_1252192294812973493[173] = 0;
   out_1252192294812973493[174] = 0;
   out_1252192294812973493[175] = 1.0;
   out_1252192294812973493[176] = 0;
   out_1252192294812973493[177] = 0;
   out_1252192294812973493[178] = 0;
   out_1252192294812973493[179] = 0;
   out_1252192294812973493[180] = 0;
   out_1252192294812973493[181] = 0;
   out_1252192294812973493[182] = 0;
   out_1252192294812973493[183] = 0;
   out_1252192294812973493[184] = 0;
   out_1252192294812973493[185] = 0;
   out_1252192294812973493[186] = 0;
   out_1252192294812973493[187] = 0;
   out_1252192294812973493[188] = 0;
   out_1252192294812973493[189] = 0;
   out_1252192294812973493[190] = 0;
   out_1252192294812973493[191] = 0;
   out_1252192294812973493[192] = 0;
   out_1252192294812973493[193] = 0;
   out_1252192294812973493[194] = 0;
   out_1252192294812973493[195] = 0;
   out_1252192294812973493[196] = 0;
   out_1252192294812973493[197] = 1.0;
   out_1252192294812973493[198] = 0;
   out_1252192294812973493[199] = 0;
   out_1252192294812973493[200] = 0;
   out_1252192294812973493[201] = 0;
   out_1252192294812973493[202] = 0;
   out_1252192294812973493[203] = 0;
   out_1252192294812973493[204] = 0;
   out_1252192294812973493[205] = 0;
   out_1252192294812973493[206] = 0;
   out_1252192294812973493[207] = 0;
   out_1252192294812973493[208] = 0;
   out_1252192294812973493[209] = 0;
   out_1252192294812973493[210] = 0;
   out_1252192294812973493[211] = 0;
   out_1252192294812973493[212] = 0;
   out_1252192294812973493[213] = 0;
   out_1252192294812973493[214] = 0;
   out_1252192294812973493[215] = 0;
   out_1252192294812973493[216] = 0;
   out_1252192294812973493[217] = 0;
   out_1252192294812973493[218] = 0;
   out_1252192294812973493[219] = 1.0;
   out_1252192294812973493[220] = 0;
   out_1252192294812973493[221] = 0;
   out_1252192294812973493[222] = 0;
   out_1252192294812973493[223] = 0;
   out_1252192294812973493[224] = 0;
   out_1252192294812973493[225] = 0;
   out_1252192294812973493[226] = 0;
   out_1252192294812973493[227] = 0;
   out_1252192294812973493[228] = 0;
   out_1252192294812973493[229] = 0;
   out_1252192294812973493[230] = 0;
   out_1252192294812973493[231] = 0;
   out_1252192294812973493[232] = 0;
   out_1252192294812973493[233] = 0;
   out_1252192294812973493[234] = 0;
   out_1252192294812973493[235] = 0;
   out_1252192294812973493[236] = 0;
   out_1252192294812973493[237] = 0;
   out_1252192294812973493[238] = 0;
   out_1252192294812973493[239] = 0;
   out_1252192294812973493[240] = 0;
   out_1252192294812973493[241] = 1.0;
   out_1252192294812973493[242] = 0;
   out_1252192294812973493[243] = 0;
   out_1252192294812973493[244] = 0;
   out_1252192294812973493[245] = 0;
   out_1252192294812973493[246] = 0;
   out_1252192294812973493[247] = 0;
   out_1252192294812973493[248] = 0;
   out_1252192294812973493[249] = 0;
   out_1252192294812973493[250] = 0;
   out_1252192294812973493[251] = 0;
   out_1252192294812973493[252] = 0;
   out_1252192294812973493[253] = 0;
   out_1252192294812973493[254] = 0;
   out_1252192294812973493[255] = 0;
   out_1252192294812973493[256] = 0;
   out_1252192294812973493[257] = 0;
   out_1252192294812973493[258] = 0;
   out_1252192294812973493[259] = 0;
   out_1252192294812973493[260] = 0;
   out_1252192294812973493[261] = 0;
   out_1252192294812973493[262] = 0;
   out_1252192294812973493[263] = 1.0;
   out_1252192294812973493[264] = 0;
   out_1252192294812973493[265] = 0;
   out_1252192294812973493[266] = 0;
   out_1252192294812973493[267] = 0;
   out_1252192294812973493[268] = 0;
   out_1252192294812973493[269] = 0;
   out_1252192294812973493[270] = 0;
   out_1252192294812973493[271] = 0;
   out_1252192294812973493[272] = 0;
   out_1252192294812973493[273] = 0;
   out_1252192294812973493[274] = 0;
   out_1252192294812973493[275] = 0;
   out_1252192294812973493[276] = 0;
   out_1252192294812973493[277] = 0;
   out_1252192294812973493[278] = 0;
   out_1252192294812973493[279] = 0;
   out_1252192294812973493[280] = 0;
   out_1252192294812973493[281] = 0;
   out_1252192294812973493[282] = 0;
   out_1252192294812973493[283] = 0;
   out_1252192294812973493[284] = 0;
   out_1252192294812973493[285] = 1.0;
   out_1252192294812973493[286] = 0;
   out_1252192294812973493[287] = 0;
   out_1252192294812973493[288] = 0;
   out_1252192294812973493[289] = 0;
   out_1252192294812973493[290] = 0;
   out_1252192294812973493[291] = 0;
   out_1252192294812973493[292] = 0;
   out_1252192294812973493[293] = 0;
   out_1252192294812973493[294] = 0;
   out_1252192294812973493[295] = 0;
   out_1252192294812973493[296] = 0;
   out_1252192294812973493[297] = 0;
   out_1252192294812973493[298] = 0;
   out_1252192294812973493[299] = 0;
   out_1252192294812973493[300] = 0;
   out_1252192294812973493[301] = 0;
   out_1252192294812973493[302] = 0;
   out_1252192294812973493[303] = 0;
   out_1252192294812973493[304] = 0;
   out_1252192294812973493[305] = 0;
   out_1252192294812973493[306] = 0;
   out_1252192294812973493[307] = 1.0;
   out_1252192294812973493[308] = 0;
   out_1252192294812973493[309] = 0;
   out_1252192294812973493[310] = 0;
   out_1252192294812973493[311] = 0;
   out_1252192294812973493[312] = 0;
   out_1252192294812973493[313] = 0;
   out_1252192294812973493[314] = 0;
   out_1252192294812973493[315] = 0;
   out_1252192294812973493[316] = 0;
   out_1252192294812973493[317] = 0;
   out_1252192294812973493[318] = 0;
   out_1252192294812973493[319] = 0;
   out_1252192294812973493[320] = 0;
   out_1252192294812973493[321] = 0;
   out_1252192294812973493[322] = 0;
   out_1252192294812973493[323] = 0;
   out_1252192294812973493[324] = 0;
   out_1252192294812973493[325] = 0;
   out_1252192294812973493[326] = 0;
   out_1252192294812973493[327] = 0;
   out_1252192294812973493[328] = 0;
   out_1252192294812973493[329] = 1.0;
   out_1252192294812973493[330] = 0;
   out_1252192294812973493[331] = 0;
   out_1252192294812973493[332] = 0;
   out_1252192294812973493[333] = 0;
   out_1252192294812973493[334] = 0;
   out_1252192294812973493[335] = 0;
   out_1252192294812973493[336] = 0;
   out_1252192294812973493[337] = 0;
   out_1252192294812973493[338] = 0;
   out_1252192294812973493[339] = 0;
   out_1252192294812973493[340] = 0;
   out_1252192294812973493[341] = 0;
   out_1252192294812973493[342] = 0;
   out_1252192294812973493[343] = 0;
   out_1252192294812973493[344] = 0;
   out_1252192294812973493[345] = 0;
   out_1252192294812973493[346] = 0;
   out_1252192294812973493[347] = 0;
   out_1252192294812973493[348] = 0;
   out_1252192294812973493[349] = 0;
   out_1252192294812973493[350] = 0;
   out_1252192294812973493[351] = 1.0;
   out_1252192294812973493[352] = 0;
   out_1252192294812973493[353] = 0;
   out_1252192294812973493[354] = 0;
   out_1252192294812973493[355] = 0;
   out_1252192294812973493[356] = 0;
   out_1252192294812973493[357] = 0;
   out_1252192294812973493[358] = 0;
   out_1252192294812973493[359] = 0;
   out_1252192294812973493[360] = 0;
   out_1252192294812973493[361] = 0;
   out_1252192294812973493[362] = 0;
   out_1252192294812973493[363] = 0;
   out_1252192294812973493[364] = 0;
   out_1252192294812973493[365] = 0;
   out_1252192294812973493[366] = 0;
   out_1252192294812973493[367] = 0;
   out_1252192294812973493[368] = 0;
   out_1252192294812973493[369] = 0;
   out_1252192294812973493[370] = 0;
   out_1252192294812973493[371] = 0;
   out_1252192294812973493[372] = 0;
   out_1252192294812973493[373] = 1.0;
   out_1252192294812973493[374] = 0;
   out_1252192294812973493[375] = 0;
   out_1252192294812973493[376] = 0;
   out_1252192294812973493[377] = 0;
   out_1252192294812973493[378] = 0;
   out_1252192294812973493[379] = 0;
   out_1252192294812973493[380] = 0;
   out_1252192294812973493[381] = 0;
   out_1252192294812973493[382] = 0;
   out_1252192294812973493[383] = 0;
   out_1252192294812973493[384] = 0;
   out_1252192294812973493[385] = 0;
   out_1252192294812973493[386] = 0;
   out_1252192294812973493[387] = 0;
   out_1252192294812973493[388] = 0;
   out_1252192294812973493[389] = 0;
   out_1252192294812973493[390] = 0;
   out_1252192294812973493[391] = 0;
   out_1252192294812973493[392] = 0;
   out_1252192294812973493[393] = 0;
   out_1252192294812973493[394] = 0;
   out_1252192294812973493[395] = 1.0;
   out_1252192294812973493[396] = 0;
   out_1252192294812973493[397] = 0;
   out_1252192294812973493[398] = 0;
   out_1252192294812973493[399] = 0;
   out_1252192294812973493[400] = 0;
   out_1252192294812973493[401] = 0;
   out_1252192294812973493[402] = 0;
   out_1252192294812973493[403] = 0;
   out_1252192294812973493[404] = 0;
   out_1252192294812973493[405] = 0;
   out_1252192294812973493[406] = 0;
   out_1252192294812973493[407] = 0;
   out_1252192294812973493[408] = 0;
   out_1252192294812973493[409] = 0;
   out_1252192294812973493[410] = 0;
   out_1252192294812973493[411] = 0;
   out_1252192294812973493[412] = 0;
   out_1252192294812973493[413] = 0;
   out_1252192294812973493[414] = 0;
   out_1252192294812973493[415] = 0;
   out_1252192294812973493[416] = 0;
   out_1252192294812973493[417] = 1.0;
   out_1252192294812973493[418] = 0;
   out_1252192294812973493[419] = 0;
   out_1252192294812973493[420] = 0;
   out_1252192294812973493[421] = 0;
   out_1252192294812973493[422] = 0;
   out_1252192294812973493[423] = 0;
   out_1252192294812973493[424] = 0;
   out_1252192294812973493[425] = 0;
   out_1252192294812973493[426] = 0;
   out_1252192294812973493[427] = 0;
   out_1252192294812973493[428] = 0;
   out_1252192294812973493[429] = 0;
   out_1252192294812973493[430] = 0;
   out_1252192294812973493[431] = 0;
   out_1252192294812973493[432] = 0;
   out_1252192294812973493[433] = 0;
   out_1252192294812973493[434] = 0;
   out_1252192294812973493[435] = 0;
   out_1252192294812973493[436] = 0;
   out_1252192294812973493[437] = 0;
   out_1252192294812973493[438] = 0;
   out_1252192294812973493[439] = 1.0;
   out_1252192294812973493[440] = 0;
   out_1252192294812973493[441] = 0;
   out_1252192294812973493[442] = 0;
   out_1252192294812973493[443] = 0;
   out_1252192294812973493[444] = 0;
   out_1252192294812973493[445] = 0;
   out_1252192294812973493[446] = 0;
   out_1252192294812973493[447] = 0;
   out_1252192294812973493[448] = 0;
   out_1252192294812973493[449] = 0;
   out_1252192294812973493[450] = 0;
   out_1252192294812973493[451] = 0;
   out_1252192294812973493[452] = 0;
   out_1252192294812973493[453] = 0;
   out_1252192294812973493[454] = 0;
   out_1252192294812973493[455] = 0;
   out_1252192294812973493[456] = 0;
   out_1252192294812973493[457] = 0;
   out_1252192294812973493[458] = 0;
   out_1252192294812973493[459] = 0;
   out_1252192294812973493[460] = 0;
   out_1252192294812973493[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_474865800768300853) {
   out_474865800768300853[0] = dt*state[7] + state[0];
   out_474865800768300853[1] = dt*state[8] + state[1];
   out_474865800768300853[2] = dt*state[9] + state[2];
   out_474865800768300853[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_474865800768300853[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_474865800768300853[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_474865800768300853[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_474865800768300853[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_474865800768300853[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_474865800768300853[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_474865800768300853[10] = state[10];
   out_474865800768300853[11] = state[11];
   out_474865800768300853[12] = state[12];
   out_474865800768300853[13] = state[13];
   out_474865800768300853[14] = state[14];
   out_474865800768300853[15] = state[15];
   out_474865800768300853[16] = state[16];
   out_474865800768300853[17] = state[17];
   out_474865800768300853[18] = state[18];
   out_474865800768300853[19] = state[19];
   out_474865800768300853[20] = state[20];
   out_474865800768300853[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5017497839438550032) {
   out_5017497839438550032[0] = 1;
   out_5017497839438550032[1] = 0;
   out_5017497839438550032[2] = 0;
   out_5017497839438550032[3] = 0;
   out_5017497839438550032[4] = 0;
   out_5017497839438550032[5] = 0;
   out_5017497839438550032[6] = dt;
   out_5017497839438550032[7] = 0;
   out_5017497839438550032[8] = 0;
   out_5017497839438550032[9] = 0;
   out_5017497839438550032[10] = 0;
   out_5017497839438550032[11] = 0;
   out_5017497839438550032[12] = 0;
   out_5017497839438550032[13] = 0;
   out_5017497839438550032[14] = 0;
   out_5017497839438550032[15] = 0;
   out_5017497839438550032[16] = 0;
   out_5017497839438550032[17] = 0;
   out_5017497839438550032[18] = 0;
   out_5017497839438550032[19] = 0;
   out_5017497839438550032[20] = 0;
   out_5017497839438550032[21] = 0;
   out_5017497839438550032[22] = 1;
   out_5017497839438550032[23] = 0;
   out_5017497839438550032[24] = 0;
   out_5017497839438550032[25] = 0;
   out_5017497839438550032[26] = 0;
   out_5017497839438550032[27] = 0;
   out_5017497839438550032[28] = dt;
   out_5017497839438550032[29] = 0;
   out_5017497839438550032[30] = 0;
   out_5017497839438550032[31] = 0;
   out_5017497839438550032[32] = 0;
   out_5017497839438550032[33] = 0;
   out_5017497839438550032[34] = 0;
   out_5017497839438550032[35] = 0;
   out_5017497839438550032[36] = 0;
   out_5017497839438550032[37] = 0;
   out_5017497839438550032[38] = 0;
   out_5017497839438550032[39] = 0;
   out_5017497839438550032[40] = 0;
   out_5017497839438550032[41] = 0;
   out_5017497839438550032[42] = 0;
   out_5017497839438550032[43] = 0;
   out_5017497839438550032[44] = 1;
   out_5017497839438550032[45] = 0;
   out_5017497839438550032[46] = 0;
   out_5017497839438550032[47] = 0;
   out_5017497839438550032[48] = 0;
   out_5017497839438550032[49] = 0;
   out_5017497839438550032[50] = dt;
   out_5017497839438550032[51] = 0;
   out_5017497839438550032[52] = 0;
   out_5017497839438550032[53] = 0;
   out_5017497839438550032[54] = 0;
   out_5017497839438550032[55] = 0;
   out_5017497839438550032[56] = 0;
   out_5017497839438550032[57] = 0;
   out_5017497839438550032[58] = 0;
   out_5017497839438550032[59] = 0;
   out_5017497839438550032[60] = 0;
   out_5017497839438550032[61] = 0;
   out_5017497839438550032[62] = 0;
   out_5017497839438550032[63] = 0;
   out_5017497839438550032[64] = 0;
   out_5017497839438550032[65] = 0;
   out_5017497839438550032[66] = 1;
   out_5017497839438550032[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5017497839438550032[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5017497839438550032[69] = 0;
   out_5017497839438550032[70] = 0;
   out_5017497839438550032[71] = 0;
   out_5017497839438550032[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5017497839438550032[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5017497839438550032[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5017497839438550032[75] = 0;
   out_5017497839438550032[76] = 0;
   out_5017497839438550032[77] = 0;
   out_5017497839438550032[78] = 0;
   out_5017497839438550032[79] = 0;
   out_5017497839438550032[80] = 0;
   out_5017497839438550032[81] = 0;
   out_5017497839438550032[82] = 0;
   out_5017497839438550032[83] = 0;
   out_5017497839438550032[84] = 0;
   out_5017497839438550032[85] = 0;
   out_5017497839438550032[86] = 0;
   out_5017497839438550032[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5017497839438550032[88] = 1;
   out_5017497839438550032[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5017497839438550032[90] = 0;
   out_5017497839438550032[91] = 0;
   out_5017497839438550032[92] = 0;
   out_5017497839438550032[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5017497839438550032[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5017497839438550032[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5017497839438550032[96] = 0;
   out_5017497839438550032[97] = 0;
   out_5017497839438550032[98] = 0;
   out_5017497839438550032[99] = 0;
   out_5017497839438550032[100] = 0;
   out_5017497839438550032[101] = 0;
   out_5017497839438550032[102] = 0;
   out_5017497839438550032[103] = 0;
   out_5017497839438550032[104] = 0;
   out_5017497839438550032[105] = 0;
   out_5017497839438550032[106] = 0;
   out_5017497839438550032[107] = 0;
   out_5017497839438550032[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5017497839438550032[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5017497839438550032[110] = 1;
   out_5017497839438550032[111] = 0;
   out_5017497839438550032[112] = 0;
   out_5017497839438550032[113] = 0;
   out_5017497839438550032[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5017497839438550032[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5017497839438550032[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5017497839438550032[117] = 0;
   out_5017497839438550032[118] = 0;
   out_5017497839438550032[119] = 0;
   out_5017497839438550032[120] = 0;
   out_5017497839438550032[121] = 0;
   out_5017497839438550032[122] = 0;
   out_5017497839438550032[123] = 0;
   out_5017497839438550032[124] = 0;
   out_5017497839438550032[125] = 0;
   out_5017497839438550032[126] = 0;
   out_5017497839438550032[127] = 0;
   out_5017497839438550032[128] = 0;
   out_5017497839438550032[129] = 0;
   out_5017497839438550032[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5017497839438550032[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5017497839438550032[132] = 1;
   out_5017497839438550032[133] = 0;
   out_5017497839438550032[134] = 0;
   out_5017497839438550032[135] = 0;
   out_5017497839438550032[136] = 0;
   out_5017497839438550032[137] = 0;
   out_5017497839438550032[138] = 0;
   out_5017497839438550032[139] = 0;
   out_5017497839438550032[140] = 0;
   out_5017497839438550032[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5017497839438550032[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5017497839438550032[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5017497839438550032[144] = 0;
   out_5017497839438550032[145] = 0;
   out_5017497839438550032[146] = 0;
   out_5017497839438550032[147] = 0;
   out_5017497839438550032[148] = 0;
   out_5017497839438550032[149] = 0;
   out_5017497839438550032[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5017497839438550032[151] = 0;
   out_5017497839438550032[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5017497839438550032[153] = 0;
   out_5017497839438550032[154] = 1;
   out_5017497839438550032[155] = 0;
   out_5017497839438550032[156] = 0;
   out_5017497839438550032[157] = 0;
   out_5017497839438550032[158] = 0;
   out_5017497839438550032[159] = 0;
   out_5017497839438550032[160] = 0;
   out_5017497839438550032[161] = 0;
   out_5017497839438550032[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5017497839438550032[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5017497839438550032[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5017497839438550032[165] = 0;
   out_5017497839438550032[166] = 0;
   out_5017497839438550032[167] = 0;
   out_5017497839438550032[168] = 0;
   out_5017497839438550032[169] = 0;
   out_5017497839438550032[170] = 0;
   out_5017497839438550032[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5017497839438550032[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5017497839438550032[173] = 0;
   out_5017497839438550032[174] = 0;
   out_5017497839438550032[175] = 0;
   out_5017497839438550032[176] = 1;
   out_5017497839438550032[177] = 0;
   out_5017497839438550032[178] = 0;
   out_5017497839438550032[179] = 0;
   out_5017497839438550032[180] = 0;
   out_5017497839438550032[181] = 0;
   out_5017497839438550032[182] = 0;
   out_5017497839438550032[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5017497839438550032[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5017497839438550032[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5017497839438550032[186] = 0;
   out_5017497839438550032[187] = 0;
   out_5017497839438550032[188] = 0;
   out_5017497839438550032[189] = 0;
   out_5017497839438550032[190] = 0;
   out_5017497839438550032[191] = 0;
   out_5017497839438550032[192] = 0;
   out_5017497839438550032[193] = 0;
   out_5017497839438550032[194] = 0;
   out_5017497839438550032[195] = 0;
   out_5017497839438550032[196] = 0;
   out_5017497839438550032[197] = 0;
   out_5017497839438550032[198] = 1;
   out_5017497839438550032[199] = 0;
   out_5017497839438550032[200] = 0;
   out_5017497839438550032[201] = 0;
   out_5017497839438550032[202] = 0;
   out_5017497839438550032[203] = 0;
   out_5017497839438550032[204] = 0;
   out_5017497839438550032[205] = 0;
   out_5017497839438550032[206] = 0;
   out_5017497839438550032[207] = 0;
   out_5017497839438550032[208] = 0;
   out_5017497839438550032[209] = 0;
   out_5017497839438550032[210] = 0;
   out_5017497839438550032[211] = 0;
   out_5017497839438550032[212] = 0;
   out_5017497839438550032[213] = 0;
   out_5017497839438550032[214] = 0;
   out_5017497839438550032[215] = 0;
   out_5017497839438550032[216] = 0;
   out_5017497839438550032[217] = 0;
   out_5017497839438550032[218] = 0;
   out_5017497839438550032[219] = 0;
   out_5017497839438550032[220] = 1;
   out_5017497839438550032[221] = 0;
   out_5017497839438550032[222] = 0;
   out_5017497839438550032[223] = 0;
   out_5017497839438550032[224] = 0;
   out_5017497839438550032[225] = 0;
   out_5017497839438550032[226] = 0;
   out_5017497839438550032[227] = 0;
   out_5017497839438550032[228] = 0;
   out_5017497839438550032[229] = 0;
   out_5017497839438550032[230] = 0;
   out_5017497839438550032[231] = 0;
   out_5017497839438550032[232] = 0;
   out_5017497839438550032[233] = 0;
   out_5017497839438550032[234] = 0;
   out_5017497839438550032[235] = 0;
   out_5017497839438550032[236] = 0;
   out_5017497839438550032[237] = 0;
   out_5017497839438550032[238] = 0;
   out_5017497839438550032[239] = 0;
   out_5017497839438550032[240] = 0;
   out_5017497839438550032[241] = 0;
   out_5017497839438550032[242] = 1;
   out_5017497839438550032[243] = 0;
   out_5017497839438550032[244] = 0;
   out_5017497839438550032[245] = 0;
   out_5017497839438550032[246] = 0;
   out_5017497839438550032[247] = 0;
   out_5017497839438550032[248] = 0;
   out_5017497839438550032[249] = 0;
   out_5017497839438550032[250] = 0;
   out_5017497839438550032[251] = 0;
   out_5017497839438550032[252] = 0;
   out_5017497839438550032[253] = 0;
   out_5017497839438550032[254] = 0;
   out_5017497839438550032[255] = 0;
   out_5017497839438550032[256] = 0;
   out_5017497839438550032[257] = 0;
   out_5017497839438550032[258] = 0;
   out_5017497839438550032[259] = 0;
   out_5017497839438550032[260] = 0;
   out_5017497839438550032[261] = 0;
   out_5017497839438550032[262] = 0;
   out_5017497839438550032[263] = 0;
   out_5017497839438550032[264] = 1;
   out_5017497839438550032[265] = 0;
   out_5017497839438550032[266] = 0;
   out_5017497839438550032[267] = 0;
   out_5017497839438550032[268] = 0;
   out_5017497839438550032[269] = 0;
   out_5017497839438550032[270] = 0;
   out_5017497839438550032[271] = 0;
   out_5017497839438550032[272] = 0;
   out_5017497839438550032[273] = 0;
   out_5017497839438550032[274] = 0;
   out_5017497839438550032[275] = 0;
   out_5017497839438550032[276] = 0;
   out_5017497839438550032[277] = 0;
   out_5017497839438550032[278] = 0;
   out_5017497839438550032[279] = 0;
   out_5017497839438550032[280] = 0;
   out_5017497839438550032[281] = 0;
   out_5017497839438550032[282] = 0;
   out_5017497839438550032[283] = 0;
   out_5017497839438550032[284] = 0;
   out_5017497839438550032[285] = 0;
   out_5017497839438550032[286] = 1;
   out_5017497839438550032[287] = 0;
   out_5017497839438550032[288] = 0;
   out_5017497839438550032[289] = 0;
   out_5017497839438550032[290] = 0;
   out_5017497839438550032[291] = 0;
   out_5017497839438550032[292] = 0;
   out_5017497839438550032[293] = 0;
   out_5017497839438550032[294] = 0;
   out_5017497839438550032[295] = 0;
   out_5017497839438550032[296] = 0;
   out_5017497839438550032[297] = 0;
   out_5017497839438550032[298] = 0;
   out_5017497839438550032[299] = 0;
   out_5017497839438550032[300] = 0;
   out_5017497839438550032[301] = 0;
   out_5017497839438550032[302] = 0;
   out_5017497839438550032[303] = 0;
   out_5017497839438550032[304] = 0;
   out_5017497839438550032[305] = 0;
   out_5017497839438550032[306] = 0;
   out_5017497839438550032[307] = 0;
   out_5017497839438550032[308] = 1;
   out_5017497839438550032[309] = 0;
   out_5017497839438550032[310] = 0;
   out_5017497839438550032[311] = 0;
   out_5017497839438550032[312] = 0;
   out_5017497839438550032[313] = 0;
   out_5017497839438550032[314] = 0;
   out_5017497839438550032[315] = 0;
   out_5017497839438550032[316] = 0;
   out_5017497839438550032[317] = 0;
   out_5017497839438550032[318] = 0;
   out_5017497839438550032[319] = 0;
   out_5017497839438550032[320] = 0;
   out_5017497839438550032[321] = 0;
   out_5017497839438550032[322] = 0;
   out_5017497839438550032[323] = 0;
   out_5017497839438550032[324] = 0;
   out_5017497839438550032[325] = 0;
   out_5017497839438550032[326] = 0;
   out_5017497839438550032[327] = 0;
   out_5017497839438550032[328] = 0;
   out_5017497839438550032[329] = 0;
   out_5017497839438550032[330] = 1;
   out_5017497839438550032[331] = 0;
   out_5017497839438550032[332] = 0;
   out_5017497839438550032[333] = 0;
   out_5017497839438550032[334] = 0;
   out_5017497839438550032[335] = 0;
   out_5017497839438550032[336] = 0;
   out_5017497839438550032[337] = 0;
   out_5017497839438550032[338] = 0;
   out_5017497839438550032[339] = 0;
   out_5017497839438550032[340] = 0;
   out_5017497839438550032[341] = 0;
   out_5017497839438550032[342] = 0;
   out_5017497839438550032[343] = 0;
   out_5017497839438550032[344] = 0;
   out_5017497839438550032[345] = 0;
   out_5017497839438550032[346] = 0;
   out_5017497839438550032[347] = 0;
   out_5017497839438550032[348] = 0;
   out_5017497839438550032[349] = 0;
   out_5017497839438550032[350] = 0;
   out_5017497839438550032[351] = 0;
   out_5017497839438550032[352] = 1;
   out_5017497839438550032[353] = 0;
   out_5017497839438550032[354] = 0;
   out_5017497839438550032[355] = 0;
   out_5017497839438550032[356] = 0;
   out_5017497839438550032[357] = 0;
   out_5017497839438550032[358] = 0;
   out_5017497839438550032[359] = 0;
   out_5017497839438550032[360] = 0;
   out_5017497839438550032[361] = 0;
   out_5017497839438550032[362] = 0;
   out_5017497839438550032[363] = 0;
   out_5017497839438550032[364] = 0;
   out_5017497839438550032[365] = 0;
   out_5017497839438550032[366] = 0;
   out_5017497839438550032[367] = 0;
   out_5017497839438550032[368] = 0;
   out_5017497839438550032[369] = 0;
   out_5017497839438550032[370] = 0;
   out_5017497839438550032[371] = 0;
   out_5017497839438550032[372] = 0;
   out_5017497839438550032[373] = 0;
   out_5017497839438550032[374] = 1;
   out_5017497839438550032[375] = 0;
   out_5017497839438550032[376] = 0;
   out_5017497839438550032[377] = 0;
   out_5017497839438550032[378] = 0;
   out_5017497839438550032[379] = 0;
   out_5017497839438550032[380] = 0;
   out_5017497839438550032[381] = 0;
   out_5017497839438550032[382] = 0;
   out_5017497839438550032[383] = 0;
   out_5017497839438550032[384] = 0;
   out_5017497839438550032[385] = 0;
   out_5017497839438550032[386] = 0;
   out_5017497839438550032[387] = 0;
   out_5017497839438550032[388] = 0;
   out_5017497839438550032[389] = 0;
   out_5017497839438550032[390] = 0;
   out_5017497839438550032[391] = 0;
   out_5017497839438550032[392] = 0;
   out_5017497839438550032[393] = 0;
   out_5017497839438550032[394] = 0;
   out_5017497839438550032[395] = 0;
   out_5017497839438550032[396] = 1;
   out_5017497839438550032[397] = 0;
   out_5017497839438550032[398] = 0;
   out_5017497839438550032[399] = 0;
   out_5017497839438550032[400] = 0;
   out_5017497839438550032[401] = 0;
   out_5017497839438550032[402] = 0;
   out_5017497839438550032[403] = 0;
   out_5017497839438550032[404] = 0;
   out_5017497839438550032[405] = 0;
   out_5017497839438550032[406] = 0;
   out_5017497839438550032[407] = 0;
   out_5017497839438550032[408] = 0;
   out_5017497839438550032[409] = 0;
   out_5017497839438550032[410] = 0;
   out_5017497839438550032[411] = 0;
   out_5017497839438550032[412] = 0;
   out_5017497839438550032[413] = 0;
   out_5017497839438550032[414] = 0;
   out_5017497839438550032[415] = 0;
   out_5017497839438550032[416] = 0;
   out_5017497839438550032[417] = 0;
   out_5017497839438550032[418] = 1;
   out_5017497839438550032[419] = 0;
   out_5017497839438550032[420] = 0;
   out_5017497839438550032[421] = 0;
   out_5017497839438550032[422] = 0;
   out_5017497839438550032[423] = 0;
   out_5017497839438550032[424] = 0;
   out_5017497839438550032[425] = 0;
   out_5017497839438550032[426] = 0;
   out_5017497839438550032[427] = 0;
   out_5017497839438550032[428] = 0;
   out_5017497839438550032[429] = 0;
   out_5017497839438550032[430] = 0;
   out_5017497839438550032[431] = 0;
   out_5017497839438550032[432] = 0;
   out_5017497839438550032[433] = 0;
   out_5017497839438550032[434] = 0;
   out_5017497839438550032[435] = 0;
   out_5017497839438550032[436] = 0;
   out_5017497839438550032[437] = 0;
   out_5017497839438550032[438] = 0;
   out_5017497839438550032[439] = 0;
   out_5017497839438550032[440] = 1;
}
void h_4(double *state, double *unused, double *out_7949008646907126126) {
   out_7949008646907126126[0] = state[10] + state[13];
   out_7949008646907126126[1] = state[11] + state[14];
   out_7949008646907126126[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6964111654991874231) {
   out_6964111654991874231[0] = 0;
   out_6964111654991874231[1] = 0;
   out_6964111654991874231[2] = 0;
   out_6964111654991874231[3] = 0;
   out_6964111654991874231[4] = 0;
   out_6964111654991874231[5] = 0;
   out_6964111654991874231[6] = 0;
   out_6964111654991874231[7] = 0;
   out_6964111654991874231[8] = 0;
   out_6964111654991874231[9] = 0;
   out_6964111654991874231[10] = 1;
   out_6964111654991874231[11] = 0;
   out_6964111654991874231[12] = 0;
   out_6964111654991874231[13] = 1;
   out_6964111654991874231[14] = 0;
   out_6964111654991874231[15] = 0;
   out_6964111654991874231[16] = 0;
   out_6964111654991874231[17] = 0;
   out_6964111654991874231[18] = 0;
   out_6964111654991874231[19] = 0;
   out_6964111654991874231[20] = 0;
   out_6964111654991874231[21] = 0;
   out_6964111654991874231[22] = 0;
   out_6964111654991874231[23] = 0;
   out_6964111654991874231[24] = 0;
   out_6964111654991874231[25] = 0;
   out_6964111654991874231[26] = 0;
   out_6964111654991874231[27] = 0;
   out_6964111654991874231[28] = 0;
   out_6964111654991874231[29] = 0;
   out_6964111654991874231[30] = 0;
   out_6964111654991874231[31] = 0;
   out_6964111654991874231[32] = 0;
   out_6964111654991874231[33] = 1;
   out_6964111654991874231[34] = 0;
   out_6964111654991874231[35] = 0;
   out_6964111654991874231[36] = 1;
   out_6964111654991874231[37] = 0;
   out_6964111654991874231[38] = 0;
   out_6964111654991874231[39] = 0;
   out_6964111654991874231[40] = 0;
   out_6964111654991874231[41] = 0;
   out_6964111654991874231[42] = 0;
   out_6964111654991874231[43] = 0;
   out_6964111654991874231[44] = 0;
   out_6964111654991874231[45] = 0;
   out_6964111654991874231[46] = 0;
   out_6964111654991874231[47] = 0;
   out_6964111654991874231[48] = 0;
   out_6964111654991874231[49] = 0;
   out_6964111654991874231[50] = 0;
   out_6964111654991874231[51] = 0;
   out_6964111654991874231[52] = 0;
   out_6964111654991874231[53] = 0;
   out_6964111654991874231[54] = 0;
   out_6964111654991874231[55] = 0;
   out_6964111654991874231[56] = 1;
   out_6964111654991874231[57] = 0;
   out_6964111654991874231[58] = 0;
   out_6964111654991874231[59] = 1;
   out_6964111654991874231[60] = 0;
   out_6964111654991874231[61] = 0;
   out_6964111654991874231[62] = 0;
   out_6964111654991874231[63] = 0;
   out_6964111654991874231[64] = 0;
   out_6964111654991874231[65] = 0;
}
void h_9(double *state, double *unused, double *out_3344885598970166155) {
   out_3344885598970166155[0] = state[10];
   out_3344885598970166155[1] = state[11];
   out_3344885598970166155[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7205301301621464876) {
   out_7205301301621464876[0] = 0;
   out_7205301301621464876[1] = 0;
   out_7205301301621464876[2] = 0;
   out_7205301301621464876[3] = 0;
   out_7205301301621464876[4] = 0;
   out_7205301301621464876[5] = 0;
   out_7205301301621464876[6] = 0;
   out_7205301301621464876[7] = 0;
   out_7205301301621464876[8] = 0;
   out_7205301301621464876[9] = 0;
   out_7205301301621464876[10] = 1;
   out_7205301301621464876[11] = 0;
   out_7205301301621464876[12] = 0;
   out_7205301301621464876[13] = 0;
   out_7205301301621464876[14] = 0;
   out_7205301301621464876[15] = 0;
   out_7205301301621464876[16] = 0;
   out_7205301301621464876[17] = 0;
   out_7205301301621464876[18] = 0;
   out_7205301301621464876[19] = 0;
   out_7205301301621464876[20] = 0;
   out_7205301301621464876[21] = 0;
   out_7205301301621464876[22] = 0;
   out_7205301301621464876[23] = 0;
   out_7205301301621464876[24] = 0;
   out_7205301301621464876[25] = 0;
   out_7205301301621464876[26] = 0;
   out_7205301301621464876[27] = 0;
   out_7205301301621464876[28] = 0;
   out_7205301301621464876[29] = 0;
   out_7205301301621464876[30] = 0;
   out_7205301301621464876[31] = 0;
   out_7205301301621464876[32] = 0;
   out_7205301301621464876[33] = 1;
   out_7205301301621464876[34] = 0;
   out_7205301301621464876[35] = 0;
   out_7205301301621464876[36] = 0;
   out_7205301301621464876[37] = 0;
   out_7205301301621464876[38] = 0;
   out_7205301301621464876[39] = 0;
   out_7205301301621464876[40] = 0;
   out_7205301301621464876[41] = 0;
   out_7205301301621464876[42] = 0;
   out_7205301301621464876[43] = 0;
   out_7205301301621464876[44] = 0;
   out_7205301301621464876[45] = 0;
   out_7205301301621464876[46] = 0;
   out_7205301301621464876[47] = 0;
   out_7205301301621464876[48] = 0;
   out_7205301301621464876[49] = 0;
   out_7205301301621464876[50] = 0;
   out_7205301301621464876[51] = 0;
   out_7205301301621464876[52] = 0;
   out_7205301301621464876[53] = 0;
   out_7205301301621464876[54] = 0;
   out_7205301301621464876[55] = 0;
   out_7205301301621464876[56] = 1;
   out_7205301301621464876[57] = 0;
   out_7205301301621464876[58] = 0;
   out_7205301301621464876[59] = 0;
   out_7205301301621464876[60] = 0;
   out_7205301301621464876[61] = 0;
   out_7205301301621464876[62] = 0;
   out_7205301301621464876[63] = 0;
   out_7205301301621464876[64] = 0;
   out_7205301301621464876[65] = 0;
}
void h_10(double *state, double *unused, double *out_2861810977634033663) {
   out_2861810977634033663[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2861810977634033663[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2861810977634033663[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_9187903489143333369) {
   out_9187903489143333369[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9187903489143333369[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9187903489143333369[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_9187903489143333369[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9187903489143333369[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9187903489143333369[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9187903489143333369[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9187903489143333369[7] = 0;
   out_9187903489143333369[8] = 0;
   out_9187903489143333369[9] = 0;
   out_9187903489143333369[10] = 0;
   out_9187903489143333369[11] = 0;
   out_9187903489143333369[12] = 0;
   out_9187903489143333369[13] = 0;
   out_9187903489143333369[14] = 0;
   out_9187903489143333369[15] = 0;
   out_9187903489143333369[16] = 1;
   out_9187903489143333369[17] = 0;
   out_9187903489143333369[18] = 0;
   out_9187903489143333369[19] = 1;
   out_9187903489143333369[20] = 0;
   out_9187903489143333369[21] = 0;
   out_9187903489143333369[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9187903489143333369[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9187903489143333369[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_9187903489143333369[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9187903489143333369[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9187903489143333369[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9187903489143333369[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9187903489143333369[29] = 0;
   out_9187903489143333369[30] = 0;
   out_9187903489143333369[31] = 0;
   out_9187903489143333369[32] = 0;
   out_9187903489143333369[33] = 0;
   out_9187903489143333369[34] = 0;
   out_9187903489143333369[35] = 0;
   out_9187903489143333369[36] = 0;
   out_9187903489143333369[37] = 0;
   out_9187903489143333369[38] = 0;
   out_9187903489143333369[39] = 1;
   out_9187903489143333369[40] = 0;
   out_9187903489143333369[41] = 0;
   out_9187903489143333369[42] = 1;
   out_9187903489143333369[43] = 0;
   out_9187903489143333369[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_9187903489143333369[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_9187903489143333369[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9187903489143333369[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9187903489143333369[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9187903489143333369[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9187903489143333369[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9187903489143333369[51] = 0;
   out_9187903489143333369[52] = 0;
   out_9187903489143333369[53] = 0;
   out_9187903489143333369[54] = 0;
   out_9187903489143333369[55] = 0;
   out_9187903489143333369[56] = 0;
   out_9187903489143333369[57] = 0;
   out_9187903489143333369[58] = 0;
   out_9187903489143333369[59] = 0;
   out_9187903489143333369[60] = 0;
   out_9187903489143333369[61] = 0;
   out_9187903489143333369[62] = 1;
   out_9187903489143333369[63] = 0;
   out_9187903489143333369[64] = 0;
   out_9187903489143333369[65] = 1;
}
void h_12(double *state, double *unused, double *out_1782214676500418139) {
   out_1782214676500418139[0] = state[0];
   out_1782214676500418139[1] = state[1];
   out_1782214676500418139[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7585210680039467898) {
   out_7585210680039467898[0] = 1;
   out_7585210680039467898[1] = 0;
   out_7585210680039467898[2] = 0;
   out_7585210680039467898[3] = 0;
   out_7585210680039467898[4] = 0;
   out_7585210680039467898[5] = 0;
   out_7585210680039467898[6] = 0;
   out_7585210680039467898[7] = 0;
   out_7585210680039467898[8] = 0;
   out_7585210680039467898[9] = 0;
   out_7585210680039467898[10] = 0;
   out_7585210680039467898[11] = 0;
   out_7585210680039467898[12] = 0;
   out_7585210680039467898[13] = 0;
   out_7585210680039467898[14] = 0;
   out_7585210680039467898[15] = 0;
   out_7585210680039467898[16] = 0;
   out_7585210680039467898[17] = 0;
   out_7585210680039467898[18] = 0;
   out_7585210680039467898[19] = 0;
   out_7585210680039467898[20] = 0;
   out_7585210680039467898[21] = 0;
   out_7585210680039467898[22] = 0;
   out_7585210680039467898[23] = 1;
   out_7585210680039467898[24] = 0;
   out_7585210680039467898[25] = 0;
   out_7585210680039467898[26] = 0;
   out_7585210680039467898[27] = 0;
   out_7585210680039467898[28] = 0;
   out_7585210680039467898[29] = 0;
   out_7585210680039467898[30] = 0;
   out_7585210680039467898[31] = 0;
   out_7585210680039467898[32] = 0;
   out_7585210680039467898[33] = 0;
   out_7585210680039467898[34] = 0;
   out_7585210680039467898[35] = 0;
   out_7585210680039467898[36] = 0;
   out_7585210680039467898[37] = 0;
   out_7585210680039467898[38] = 0;
   out_7585210680039467898[39] = 0;
   out_7585210680039467898[40] = 0;
   out_7585210680039467898[41] = 0;
   out_7585210680039467898[42] = 0;
   out_7585210680039467898[43] = 0;
   out_7585210680039467898[44] = 0;
   out_7585210680039467898[45] = 0;
   out_7585210680039467898[46] = 1;
   out_7585210680039467898[47] = 0;
   out_7585210680039467898[48] = 0;
   out_7585210680039467898[49] = 0;
   out_7585210680039467898[50] = 0;
   out_7585210680039467898[51] = 0;
   out_7585210680039467898[52] = 0;
   out_7585210680039467898[53] = 0;
   out_7585210680039467898[54] = 0;
   out_7585210680039467898[55] = 0;
   out_7585210680039467898[56] = 0;
   out_7585210680039467898[57] = 0;
   out_7585210680039467898[58] = 0;
   out_7585210680039467898[59] = 0;
   out_7585210680039467898[60] = 0;
   out_7585210680039467898[61] = 0;
   out_7585210680039467898[62] = 0;
   out_7585210680039467898[63] = 0;
   out_7585210680039467898[64] = 0;
   out_7585210680039467898[65] = 0;
}
void h_35(double *state, double *unused, double *out_7515623329853509537) {
   out_7515623329853509537[0] = state[7];
   out_7515623329853509537[1] = state[8];
   out_7515623329853509537[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8115970361345070009) {
   out_8115970361345070009[0] = 0;
   out_8115970361345070009[1] = 0;
   out_8115970361345070009[2] = 0;
   out_8115970361345070009[3] = 0;
   out_8115970361345070009[4] = 0;
   out_8115970361345070009[5] = 0;
   out_8115970361345070009[6] = 0;
   out_8115970361345070009[7] = 1;
   out_8115970361345070009[8] = 0;
   out_8115970361345070009[9] = 0;
   out_8115970361345070009[10] = 0;
   out_8115970361345070009[11] = 0;
   out_8115970361345070009[12] = 0;
   out_8115970361345070009[13] = 0;
   out_8115970361345070009[14] = 0;
   out_8115970361345070009[15] = 0;
   out_8115970361345070009[16] = 0;
   out_8115970361345070009[17] = 0;
   out_8115970361345070009[18] = 0;
   out_8115970361345070009[19] = 0;
   out_8115970361345070009[20] = 0;
   out_8115970361345070009[21] = 0;
   out_8115970361345070009[22] = 0;
   out_8115970361345070009[23] = 0;
   out_8115970361345070009[24] = 0;
   out_8115970361345070009[25] = 0;
   out_8115970361345070009[26] = 0;
   out_8115970361345070009[27] = 0;
   out_8115970361345070009[28] = 0;
   out_8115970361345070009[29] = 0;
   out_8115970361345070009[30] = 1;
   out_8115970361345070009[31] = 0;
   out_8115970361345070009[32] = 0;
   out_8115970361345070009[33] = 0;
   out_8115970361345070009[34] = 0;
   out_8115970361345070009[35] = 0;
   out_8115970361345070009[36] = 0;
   out_8115970361345070009[37] = 0;
   out_8115970361345070009[38] = 0;
   out_8115970361345070009[39] = 0;
   out_8115970361345070009[40] = 0;
   out_8115970361345070009[41] = 0;
   out_8115970361345070009[42] = 0;
   out_8115970361345070009[43] = 0;
   out_8115970361345070009[44] = 0;
   out_8115970361345070009[45] = 0;
   out_8115970361345070009[46] = 0;
   out_8115970361345070009[47] = 0;
   out_8115970361345070009[48] = 0;
   out_8115970361345070009[49] = 0;
   out_8115970361345070009[50] = 0;
   out_8115970361345070009[51] = 0;
   out_8115970361345070009[52] = 0;
   out_8115970361345070009[53] = 1;
   out_8115970361345070009[54] = 0;
   out_8115970361345070009[55] = 0;
   out_8115970361345070009[56] = 0;
   out_8115970361345070009[57] = 0;
   out_8115970361345070009[58] = 0;
   out_8115970361345070009[59] = 0;
   out_8115970361345070009[60] = 0;
   out_8115970361345070009[61] = 0;
   out_8115970361345070009[62] = 0;
   out_8115970361345070009[63] = 0;
   out_8115970361345070009[64] = 0;
   out_8115970361345070009[65] = 0;
}
void h_32(double *state, double *unused, double *out_1599319830146521781) {
   out_1599319830146521781[0] = state[3];
   out_1599319830146521781[1] = state[4];
   out_1599319830146521781[2] = state[5];
   out_1599319830146521781[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3415909208670365251) {
   out_3415909208670365251[0] = 0;
   out_3415909208670365251[1] = 0;
   out_3415909208670365251[2] = 0;
   out_3415909208670365251[3] = 1;
   out_3415909208670365251[4] = 0;
   out_3415909208670365251[5] = 0;
   out_3415909208670365251[6] = 0;
   out_3415909208670365251[7] = 0;
   out_3415909208670365251[8] = 0;
   out_3415909208670365251[9] = 0;
   out_3415909208670365251[10] = 0;
   out_3415909208670365251[11] = 0;
   out_3415909208670365251[12] = 0;
   out_3415909208670365251[13] = 0;
   out_3415909208670365251[14] = 0;
   out_3415909208670365251[15] = 0;
   out_3415909208670365251[16] = 0;
   out_3415909208670365251[17] = 0;
   out_3415909208670365251[18] = 0;
   out_3415909208670365251[19] = 0;
   out_3415909208670365251[20] = 0;
   out_3415909208670365251[21] = 0;
   out_3415909208670365251[22] = 0;
   out_3415909208670365251[23] = 0;
   out_3415909208670365251[24] = 0;
   out_3415909208670365251[25] = 0;
   out_3415909208670365251[26] = 1;
   out_3415909208670365251[27] = 0;
   out_3415909208670365251[28] = 0;
   out_3415909208670365251[29] = 0;
   out_3415909208670365251[30] = 0;
   out_3415909208670365251[31] = 0;
   out_3415909208670365251[32] = 0;
   out_3415909208670365251[33] = 0;
   out_3415909208670365251[34] = 0;
   out_3415909208670365251[35] = 0;
   out_3415909208670365251[36] = 0;
   out_3415909208670365251[37] = 0;
   out_3415909208670365251[38] = 0;
   out_3415909208670365251[39] = 0;
   out_3415909208670365251[40] = 0;
   out_3415909208670365251[41] = 0;
   out_3415909208670365251[42] = 0;
   out_3415909208670365251[43] = 0;
   out_3415909208670365251[44] = 0;
   out_3415909208670365251[45] = 0;
   out_3415909208670365251[46] = 0;
   out_3415909208670365251[47] = 0;
   out_3415909208670365251[48] = 0;
   out_3415909208670365251[49] = 1;
   out_3415909208670365251[50] = 0;
   out_3415909208670365251[51] = 0;
   out_3415909208670365251[52] = 0;
   out_3415909208670365251[53] = 0;
   out_3415909208670365251[54] = 0;
   out_3415909208670365251[55] = 0;
   out_3415909208670365251[56] = 0;
   out_3415909208670365251[57] = 0;
   out_3415909208670365251[58] = 0;
   out_3415909208670365251[59] = 0;
   out_3415909208670365251[60] = 0;
   out_3415909208670365251[61] = 0;
   out_3415909208670365251[62] = 0;
   out_3415909208670365251[63] = 0;
   out_3415909208670365251[64] = 0;
   out_3415909208670365251[65] = 0;
   out_3415909208670365251[66] = 0;
   out_3415909208670365251[67] = 0;
   out_3415909208670365251[68] = 0;
   out_3415909208670365251[69] = 0;
   out_3415909208670365251[70] = 0;
   out_3415909208670365251[71] = 0;
   out_3415909208670365251[72] = 1;
   out_3415909208670365251[73] = 0;
   out_3415909208670365251[74] = 0;
   out_3415909208670365251[75] = 0;
   out_3415909208670365251[76] = 0;
   out_3415909208670365251[77] = 0;
   out_3415909208670365251[78] = 0;
   out_3415909208670365251[79] = 0;
   out_3415909208670365251[80] = 0;
   out_3415909208670365251[81] = 0;
   out_3415909208670365251[82] = 0;
   out_3415909208670365251[83] = 0;
   out_3415909208670365251[84] = 0;
   out_3415909208670365251[85] = 0;
   out_3415909208670365251[86] = 0;
   out_3415909208670365251[87] = 0;
}
void h_13(double *state, double *unused, double *out_8458160363789135668) {
   out_8458160363789135668[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8458160363789135668[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8458160363789135668[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4639420343340967437) {
   out_4639420343340967437[0] = 0;
   out_4639420343340967437[1] = 0;
   out_4639420343340967437[2] = 0;
   out_4639420343340967437[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4639420343340967437[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4639420343340967437[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4639420343340967437[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4639420343340967437[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4639420343340967437[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4639420343340967437[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4639420343340967437[10] = 0;
   out_4639420343340967437[11] = 0;
   out_4639420343340967437[12] = 0;
   out_4639420343340967437[13] = 0;
   out_4639420343340967437[14] = 0;
   out_4639420343340967437[15] = 0;
   out_4639420343340967437[16] = 0;
   out_4639420343340967437[17] = 0;
   out_4639420343340967437[18] = 0;
   out_4639420343340967437[19] = 0;
   out_4639420343340967437[20] = 0;
   out_4639420343340967437[21] = 0;
   out_4639420343340967437[22] = 0;
   out_4639420343340967437[23] = 0;
   out_4639420343340967437[24] = 0;
   out_4639420343340967437[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4639420343340967437[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4639420343340967437[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4639420343340967437[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4639420343340967437[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4639420343340967437[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4639420343340967437[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4639420343340967437[32] = 0;
   out_4639420343340967437[33] = 0;
   out_4639420343340967437[34] = 0;
   out_4639420343340967437[35] = 0;
   out_4639420343340967437[36] = 0;
   out_4639420343340967437[37] = 0;
   out_4639420343340967437[38] = 0;
   out_4639420343340967437[39] = 0;
   out_4639420343340967437[40] = 0;
   out_4639420343340967437[41] = 0;
   out_4639420343340967437[42] = 0;
   out_4639420343340967437[43] = 0;
   out_4639420343340967437[44] = 0;
   out_4639420343340967437[45] = 0;
   out_4639420343340967437[46] = 0;
   out_4639420343340967437[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4639420343340967437[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4639420343340967437[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4639420343340967437[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4639420343340967437[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4639420343340967437[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4639420343340967437[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4639420343340967437[54] = 0;
   out_4639420343340967437[55] = 0;
   out_4639420343340967437[56] = 0;
   out_4639420343340967437[57] = 0;
   out_4639420343340967437[58] = 0;
   out_4639420343340967437[59] = 0;
   out_4639420343340967437[60] = 0;
   out_4639420343340967437[61] = 0;
   out_4639420343340967437[62] = 0;
   out_4639420343340967437[63] = 0;
   out_4639420343340967437[64] = 0;
   out_4639420343340967437[65] = 0;
}
void h_14(double *state, double *unused, double *out_3344885598970166155) {
   out_3344885598970166155[0] = state[10];
   out_3344885598970166155[1] = state[11];
   out_3344885598970166155[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7205301301621464876) {
   out_7205301301621464876[0] = 0;
   out_7205301301621464876[1] = 0;
   out_7205301301621464876[2] = 0;
   out_7205301301621464876[3] = 0;
   out_7205301301621464876[4] = 0;
   out_7205301301621464876[5] = 0;
   out_7205301301621464876[6] = 0;
   out_7205301301621464876[7] = 0;
   out_7205301301621464876[8] = 0;
   out_7205301301621464876[9] = 0;
   out_7205301301621464876[10] = 1;
   out_7205301301621464876[11] = 0;
   out_7205301301621464876[12] = 0;
   out_7205301301621464876[13] = 0;
   out_7205301301621464876[14] = 0;
   out_7205301301621464876[15] = 0;
   out_7205301301621464876[16] = 0;
   out_7205301301621464876[17] = 0;
   out_7205301301621464876[18] = 0;
   out_7205301301621464876[19] = 0;
   out_7205301301621464876[20] = 0;
   out_7205301301621464876[21] = 0;
   out_7205301301621464876[22] = 0;
   out_7205301301621464876[23] = 0;
   out_7205301301621464876[24] = 0;
   out_7205301301621464876[25] = 0;
   out_7205301301621464876[26] = 0;
   out_7205301301621464876[27] = 0;
   out_7205301301621464876[28] = 0;
   out_7205301301621464876[29] = 0;
   out_7205301301621464876[30] = 0;
   out_7205301301621464876[31] = 0;
   out_7205301301621464876[32] = 0;
   out_7205301301621464876[33] = 1;
   out_7205301301621464876[34] = 0;
   out_7205301301621464876[35] = 0;
   out_7205301301621464876[36] = 0;
   out_7205301301621464876[37] = 0;
   out_7205301301621464876[38] = 0;
   out_7205301301621464876[39] = 0;
   out_7205301301621464876[40] = 0;
   out_7205301301621464876[41] = 0;
   out_7205301301621464876[42] = 0;
   out_7205301301621464876[43] = 0;
   out_7205301301621464876[44] = 0;
   out_7205301301621464876[45] = 0;
   out_7205301301621464876[46] = 0;
   out_7205301301621464876[47] = 0;
   out_7205301301621464876[48] = 0;
   out_7205301301621464876[49] = 0;
   out_7205301301621464876[50] = 0;
   out_7205301301621464876[51] = 0;
   out_7205301301621464876[52] = 0;
   out_7205301301621464876[53] = 0;
   out_7205301301621464876[54] = 0;
   out_7205301301621464876[55] = 0;
   out_7205301301621464876[56] = 1;
   out_7205301301621464876[57] = 0;
   out_7205301301621464876[58] = 0;
   out_7205301301621464876[59] = 0;
   out_7205301301621464876[60] = 0;
   out_7205301301621464876[61] = 0;
   out_7205301301621464876[62] = 0;
   out_7205301301621464876[63] = 0;
   out_7205301301621464876[64] = 0;
   out_7205301301621464876[65] = 0;
}
void h_33(double *state, double *unused, double *out_5558343595682314927) {
   out_5558343595682314927[0] = state[16];
   out_5558343595682314927[1] = state[17];
   out_5558343595682314927[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4965413356706212405) {
   out_4965413356706212405[0] = 0;
   out_4965413356706212405[1] = 0;
   out_4965413356706212405[2] = 0;
   out_4965413356706212405[3] = 0;
   out_4965413356706212405[4] = 0;
   out_4965413356706212405[5] = 0;
   out_4965413356706212405[6] = 0;
   out_4965413356706212405[7] = 0;
   out_4965413356706212405[8] = 0;
   out_4965413356706212405[9] = 0;
   out_4965413356706212405[10] = 0;
   out_4965413356706212405[11] = 0;
   out_4965413356706212405[12] = 0;
   out_4965413356706212405[13] = 0;
   out_4965413356706212405[14] = 0;
   out_4965413356706212405[15] = 0;
   out_4965413356706212405[16] = 1;
   out_4965413356706212405[17] = 0;
   out_4965413356706212405[18] = 0;
   out_4965413356706212405[19] = 0;
   out_4965413356706212405[20] = 0;
   out_4965413356706212405[21] = 0;
   out_4965413356706212405[22] = 0;
   out_4965413356706212405[23] = 0;
   out_4965413356706212405[24] = 0;
   out_4965413356706212405[25] = 0;
   out_4965413356706212405[26] = 0;
   out_4965413356706212405[27] = 0;
   out_4965413356706212405[28] = 0;
   out_4965413356706212405[29] = 0;
   out_4965413356706212405[30] = 0;
   out_4965413356706212405[31] = 0;
   out_4965413356706212405[32] = 0;
   out_4965413356706212405[33] = 0;
   out_4965413356706212405[34] = 0;
   out_4965413356706212405[35] = 0;
   out_4965413356706212405[36] = 0;
   out_4965413356706212405[37] = 0;
   out_4965413356706212405[38] = 0;
   out_4965413356706212405[39] = 1;
   out_4965413356706212405[40] = 0;
   out_4965413356706212405[41] = 0;
   out_4965413356706212405[42] = 0;
   out_4965413356706212405[43] = 0;
   out_4965413356706212405[44] = 0;
   out_4965413356706212405[45] = 0;
   out_4965413356706212405[46] = 0;
   out_4965413356706212405[47] = 0;
   out_4965413356706212405[48] = 0;
   out_4965413356706212405[49] = 0;
   out_4965413356706212405[50] = 0;
   out_4965413356706212405[51] = 0;
   out_4965413356706212405[52] = 0;
   out_4965413356706212405[53] = 0;
   out_4965413356706212405[54] = 0;
   out_4965413356706212405[55] = 0;
   out_4965413356706212405[56] = 0;
   out_4965413356706212405[57] = 0;
   out_4965413356706212405[58] = 0;
   out_4965413356706212405[59] = 0;
   out_4965413356706212405[60] = 0;
   out_4965413356706212405[61] = 0;
   out_4965413356706212405[62] = 1;
   out_4965413356706212405[63] = 0;
   out_4965413356706212405[64] = 0;
   out_4965413356706212405[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8519043703690293172) {
  H(in_vec, out_8519043703690293172);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3680497765668344875) {
  err_fun(nom_x, delta_x, out_3680497765668344875);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_490859156954727028) {
  inv_err_fun(nom_x, true_x, out_490859156954727028);
}
void live_H_mod_fun(double *state, double *out_1252192294812973493) {
  H_mod_fun(state, out_1252192294812973493);
}
void live_f_fun(double *state, double dt, double *out_474865800768300853) {
  f_fun(state,  dt, out_474865800768300853);
}
void live_F_fun(double *state, double dt, double *out_5017497839438550032) {
  F_fun(state,  dt, out_5017497839438550032);
}
void live_h_4(double *state, double *unused, double *out_7949008646907126126) {
  h_4(state, unused, out_7949008646907126126);
}
void live_H_4(double *state, double *unused, double *out_6964111654991874231) {
  H_4(state, unused, out_6964111654991874231);
}
void live_h_9(double *state, double *unused, double *out_3344885598970166155) {
  h_9(state, unused, out_3344885598970166155);
}
void live_H_9(double *state, double *unused, double *out_7205301301621464876) {
  H_9(state, unused, out_7205301301621464876);
}
void live_h_10(double *state, double *unused, double *out_2861810977634033663) {
  h_10(state, unused, out_2861810977634033663);
}
void live_H_10(double *state, double *unused, double *out_9187903489143333369) {
  H_10(state, unused, out_9187903489143333369);
}
void live_h_12(double *state, double *unused, double *out_1782214676500418139) {
  h_12(state, unused, out_1782214676500418139);
}
void live_H_12(double *state, double *unused, double *out_7585210680039467898) {
  H_12(state, unused, out_7585210680039467898);
}
void live_h_35(double *state, double *unused, double *out_7515623329853509537) {
  h_35(state, unused, out_7515623329853509537);
}
void live_H_35(double *state, double *unused, double *out_8115970361345070009) {
  H_35(state, unused, out_8115970361345070009);
}
void live_h_32(double *state, double *unused, double *out_1599319830146521781) {
  h_32(state, unused, out_1599319830146521781);
}
void live_H_32(double *state, double *unused, double *out_3415909208670365251) {
  H_32(state, unused, out_3415909208670365251);
}
void live_h_13(double *state, double *unused, double *out_8458160363789135668) {
  h_13(state, unused, out_8458160363789135668);
}
void live_H_13(double *state, double *unused, double *out_4639420343340967437) {
  H_13(state, unused, out_4639420343340967437);
}
void live_h_14(double *state, double *unused, double *out_3344885598970166155) {
  h_14(state, unused, out_3344885598970166155);
}
void live_H_14(double *state, double *unused, double *out_7205301301621464876) {
  H_14(state, unused, out_7205301301621464876);
}
void live_h_33(double *state, double *unused, double *out_5558343595682314927) {
  h_33(state, unused, out_5558343595682314927);
}
void live_H_33(double *state, double *unused, double *out_4965413356706212405) {
  H_33(state, unused, out_4965413356706212405);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
