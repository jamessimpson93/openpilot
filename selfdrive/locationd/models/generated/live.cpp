#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7991541939242048212) {
   out_7991541939242048212[0] = 0;
   out_7991541939242048212[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7991541939242048212[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7991541939242048212[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7991541939242048212[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7991541939242048212[5] = -sin(in_vec[1]);
   out_7991541939242048212[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7991541939242048212[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7991541939242048212[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7991541939242048212[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7991541939242048212[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7991541939242048212[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7991541939242048212[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7991541939242048212[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7991541939242048212[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7991541939242048212[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7991541939242048212[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7991541939242048212[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9165175297852018824) {
   out_9165175297852018824[0] = delta_x[0] + nom_x[0];
   out_9165175297852018824[1] = delta_x[1] + nom_x[1];
   out_9165175297852018824[2] = delta_x[2] + nom_x[2];
   out_9165175297852018824[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9165175297852018824[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9165175297852018824[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9165175297852018824[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9165175297852018824[7] = delta_x[6] + nom_x[7];
   out_9165175297852018824[8] = delta_x[7] + nom_x[8];
   out_9165175297852018824[9] = delta_x[8] + nom_x[9];
   out_9165175297852018824[10] = delta_x[9] + nom_x[10];
   out_9165175297852018824[11] = delta_x[10] + nom_x[11];
   out_9165175297852018824[12] = delta_x[11] + nom_x[12];
   out_9165175297852018824[13] = delta_x[12] + nom_x[13];
   out_9165175297852018824[14] = delta_x[13] + nom_x[14];
   out_9165175297852018824[15] = delta_x[14] + nom_x[15];
   out_9165175297852018824[16] = delta_x[15] + nom_x[16];
   out_9165175297852018824[17] = delta_x[16] + nom_x[17];
   out_9165175297852018824[18] = delta_x[17] + nom_x[18];
   out_9165175297852018824[19] = delta_x[18] + nom_x[19];
   out_9165175297852018824[20] = delta_x[19] + nom_x[20];
   out_9165175297852018824[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8840460989217465937) {
   out_8840460989217465937[0] = -nom_x[0] + true_x[0];
   out_8840460989217465937[1] = -nom_x[1] + true_x[1];
   out_8840460989217465937[2] = -nom_x[2] + true_x[2];
   out_8840460989217465937[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8840460989217465937[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8840460989217465937[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8840460989217465937[6] = -nom_x[7] + true_x[7];
   out_8840460989217465937[7] = -nom_x[8] + true_x[8];
   out_8840460989217465937[8] = -nom_x[9] + true_x[9];
   out_8840460989217465937[9] = -nom_x[10] + true_x[10];
   out_8840460989217465937[10] = -nom_x[11] + true_x[11];
   out_8840460989217465937[11] = -nom_x[12] + true_x[12];
   out_8840460989217465937[12] = -nom_x[13] + true_x[13];
   out_8840460989217465937[13] = -nom_x[14] + true_x[14];
   out_8840460989217465937[14] = -nom_x[15] + true_x[15];
   out_8840460989217465937[15] = -nom_x[16] + true_x[16];
   out_8840460989217465937[16] = -nom_x[17] + true_x[17];
   out_8840460989217465937[17] = -nom_x[18] + true_x[18];
   out_8840460989217465937[18] = -nom_x[19] + true_x[19];
   out_8840460989217465937[19] = -nom_x[20] + true_x[20];
   out_8840460989217465937[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2323407358908051241) {
   out_2323407358908051241[0] = 1.0;
   out_2323407358908051241[1] = 0;
   out_2323407358908051241[2] = 0;
   out_2323407358908051241[3] = 0;
   out_2323407358908051241[4] = 0;
   out_2323407358908051241[5] = 0;
   out_2323407358908051241[6] = 0;
   out_2323407358908051241[7] = 0;
   out_2323407358908051241[8] = 0;
   out_2323407358908051241[9] = 0;
   out_2323407358908051241[10] = 0;
   out_2323407358908051241[11] = 0;
   out_2323407358908051241[12] = 0;
   out_2323407358908051241[13] = 0;
   out_2323407358908051241[14] = 0;
   out_2323407358908051241[15] = 0;
   out_2323407358908051241[16] = 0;
   out_2323407358908051241[17] = 0;
   out_2323407358908051241[18] = 0;
   out_2323407358908051241[19] = 0;
   out_2323407358908051241[20] = 0;
   out_2323407358908051241[21] = 0;
   out_2323407358908051241[22] = 1.0;
   out_2323407358908051241[23] = 0;
   out_2323407358908051241[24] = 0;
   out_2323407358908051241[25] = 0;
   out_2323407358908051241[26] = 0;
   out_2323407358908051241[27] = 0;
   out_2323407358908051241[28] = 0;
   out_2323407358908051241[29] = 0;
   out_2323407358908051241[30] = 0;
   out_2323407358908051241[31] = 0;
   out_2323407358908051241[32] = 0;
   out_2323407358908051241[33] = 0;
   out_2323407358908051241[34] = 0;
   out_2323407358908051241[35] = 0;
   out_2323407358908051241[36] = 0;
   out_2323407358908051241[37] = 0;
   out_2323407358908051241[38] = 0;
   out_2323407358908051241[39] = 0;
   out_2323407358908051241[40] = 0;
   out_2323407358908051241[41] = 0;
   out_2323407358908051241[42] = 0;
   out_2323407358908051241[43] = 0;
   out_2323407358908051241[44] = 1.0;
   out_2323407358908051241[45] = 0;
   out_2323407358908051241[46] = 0;
   out_2323407358908051241[47] = 0;
   out_2323407358908051241[48] = 0;
   out_2323407358908051241[49] = 0;
   out_2323407358908051241[50] = 0;
   out_2323407358908051241[51] = 0;
   out_2323407358908051241[52] = 0;
   out_2323407358908051241[53] = 0;
   out_2323407358908051241[54] = 0;
   out_2323407358908051241[55] = 0;
   out_2323407358908051241[56] = 0;
   out_2323407358908051241[57] = 0;
   out_2323407358908051241[58] = 0;
   out_2323407358908051241[59] = 0;
   out_2323407358908051241[60] = 0;
   out_2323407358908051241[61] = 0;
   out_2323407358908051241[62] = 0;
   out_2323407358908051241[63] = 0;
   out_2323407358908051241[64] = 0;
   out_2323407358908051241[65] = 0;
   out_2323407358908051241[66] = -0.5*state[4];
   out_2323407358908051241[67] = -0.5*state[5];
   out_2323407358908051241[68] = -0.5*state[6];
   out_2323407358908051241[69] = 0;
   out_2323407358908051241[70] = 0;
   out_2323407358908051241[71] = 0;
   out_2323407358908051241[72] = 0;
   out_2323407358908051241[73] = 0;
   out_2323407358908051241[74] = 0;
   out_2323407358908051241[75] = 0;
   out_2323407358908051241[76] = 0;
   out_2323407358908051241[77] = 0;
   out_2323407358908051241[78] = 0;
   out_2323407358908051241[79] = 0;
   out_2323407358908051241[80] = 0;
   out_2323407358908051241[81] = 0;
   out_2323407358908051241[82] = 0;
   out_2323407358908051241[83] = 0;
   out_2323407358908051241[84] = 0;
   out_2323407358908051241[85] = 0;
   out_2323407358908051241[86] = 0;
   out_2323407358908051241[87] = 0.5*state[3];
   out_2323407358908051241[88] = 0.5*state[6];
   out_2323407358908051241[89] = -0.5*state[5];
   out_2323407358908051241[90] = 0;
   out_2323407358908051241[91] = 0;
   out_2323407358908051241[92] = 0;
   out_2323407358908051241[93] = 0;
   out_2323407358908051241[94] = 0;
   out_2323407358908051241[95] = 0;
   out_2323407358908051241[96] = 0;
   out_2323407358908051241[97] = 0;
   out_2323407358908051241[98] = 0;
   out_2323407358908051241[99] = 0;
   out_2323407358908051241[100] = 0;
   out_2323407358908051241[101] = 0;
   out_2323407358908051241[102] = 0;
   out_2323407358908051241[103] = 0;
   out_2323407358908051241[104] = 0;
   out_2323407358908051241[105] = 0;
   out_2323407358908051241[106] = 0;
   out_2323407358908051241[107] = 0;
   out_2323407358908051241[108] = -0.5*state[6];
   out_2323407358908051241[109] = 0.5*state[3];
   out_2323407358908051241[110] = 0.5*state[4];
   out_2323407358908051241[111] = 0;
   out_2323407358908051241[112] = 0;
   out_2323407358908051241[113] = 0;
   out_2323407358908051241[114] = 0;
   out_2323407358908051241[115] = 0;
   out_2323407358908051241[116] = 0;
   out_2323407358908051241[117] = 0;
   out_2323407358908051241[118] = 0;
   out_2323407358908051241[119] = 0;
   out_2323407358908051241[120] = 0;
   out_2323407358908051241[121] = 0;
   out_2323407358908051241[122] = 0;
   out_2323407358908051241[123] = 0;
   out_2323407358908051241[124] = 0;
   out_2323407358908051241[125] = 0;
   out_2323407358908051241[126] = 0;
   out_2323407358908051241[127] = 0;
   out_2323407358908051241[128] = 0;
   out_2323407358908051241[129] = 0.5*state[5];
   out_2323407358908051241[130] = -0.5*state[4];
   out_2323407358908051241[131] = 0.5*state[3];
   out_2323407358908051241[132] = 0;
   out_2323407358908051241[133] = 0;
   out_2323407358908051241[134] = 0;
   out_2323407358908051241[135] = 0;
   out_2323407358908051241[136] = 0;
   out_2323407358908051241[137] = 0;
   out_2323407358908051241[138] = 0;
   out_2323407358908051241[139] = 0;
   out_2323407358908051241[140] = 0;
   out_2323407358908051241[141] = 0;
   out_2323407358908051241[142] = 0;
   out_2323407358908051241[143] = 0;
   out_2323407358908051241[144] = 0;
   out_2323407358908051241[145] = 0;
   out_2323407358908051241[146] = 0;
   out_2323407358908051241[147] = 0;
   out_2323407358908051241[148] = 0;
   out_2323407358908051241[149] = 0;
   out_2323407358908051241[150] = 0;
   out_2323407358908051241[151] = 0;
   out_2323407358908051241[152] = 0;
   out_2323407358908051241[153] = 1.0;
   out_2323407358908051241[154] = 0;
   out_2323407358908051241[155] = 0;
   out_2323407358908051241[156] = 0;
   out_2323407358908051241[157] = 0;
   out_2323407358908051241[158] = 0;
   out_2323407358908051241[159] = 0;
   out_2323407358908051241[160] = 0;
   out_2323407358908051241[161] = 0;
   out_2323407358908051241[162] = 0;
   out_2323407358908051241[163] = 0;
   out_2323407358908051241[164] = 0;
   out_2323407358908051241[165] = 0;
   out_2323407358908051241[166] = 0;
   out_2323407358908051241[167] = 0;
   out_2323407358908051241[168] = 0;
   out_2323407358908051241[169] = 0;
   out_2323407358908051241[170] = 0;
   out_2323407358908051241[171] = 0;
   out_2323407358908051241[172] = 0;
   out_2323407358908051241[173] = 0;
   out_2323407358908051241[174] = 0;
   out_2323407358908051241[175] = 1.0;
   out_2323407358908051241[176] = 0;
   out_2323407358908051241[177] = 0;
   out_2323407358908051241[178] = 0;
   out_2323407358908051241[179] = 0;
   out_2323407358908051241[180] = 0;
   out_2323407358908051241[181] = 0;
   out_2323407358908051241[182] = 0;
   out_2323407358908051241[183] = 0;
   out_2323407358908051241[184] = 0;
   out_2323407358908051241[185] = 0;
   out_2323407358908051241[186] = 0;
   out_2323407358908051241[187] = 0;
   out_2323407358908051241[188] = 0;
   out_2323407358908051241[189] = 0;
   out_2323407358908051241[190] = 0;
   out_2323407358908051241[191] = 0;
   out_2323407358908051241[192] = 0;
   out_2323407358908051241[193] = 0;
   out_2323407358908051241[194] = 0;
   out_2323407358908051241[195] = 0;
   out_2323407358908051241[196] = 0;
   out_2323407358908051241[197] = 1.0;
   out_2323407358908051241[198] = 0;
   out_2323407358908051241[199] = 0;
   out_2323407358908051241[200] = 0;
   out_2323407358908051241[201] = 0;
   out_2323407358908051241[202] = 0;
   out_2323407358908051241[203] = 0;
   out_2323407358908051241[204] = 0;
   out_2323407358908051241[205] = 0;
   out_2323407358908051241[206] = 0;
   out_2323407358908051241[207] = 0;
   out_2323407358908051241[208] = 0;
   out_2323407358908051241[209] = 0;
   out_2323407358908051241[210] = 0;
   out_2323407358908051241[211] = 0;
   out_2323407358908051241[212] = 0;
   out_2323407358908051241[213] = 0;
   out_2323407358908051241[214] = 0;
   out_2323407358908051241[215] = 0;
   out_2323407358908051241[216] = 0;
   out_2323407358908051241[217] = 0;
   out_2323407358908051241[218] = 0;
   out_2323407358908051241[219] = 1.0;
   out_2323407358908051241[220] = 0;
   out_2323407358908051241[221] = 0;
   out_2323407358908051241[222] = 0;
   out_2323407358908051241[223] = 0;
   out_2323407358908051241[224] = 0;
   out_2323407358908051241[225] = 0;
   out_2323407358908051241[226] = 0;
   out_2323407358908051241[227] = 0;
   out_2323407358908051241[228] = 0;
   out_2323407358908051241[229] = 0;
   out_2323407358908051241[230] = 0;
   out_2323407358908051241[231] = 0;
   out_2323407358908051241[232] = 0;
   out_2323407358908051241[233] = 0;
   out_2323407358908051241[234] = 0;
   out_2323407358908051241[235] = 0;
   out_2323407358908051241[236] = 0;
   out_2323407358908051241[237] = 0;
   out_2323407358908051241[238] = 0;
   out_2323407358908051241[239] = 0;
   out_2323407358908051241[240] = 0;
   out_2323407358908051241[241] = 1.0;
   out_2323407358908051241[242] = 0;
   out_2323407358908051241[243] = 0;
   out_2323407358908051241[244] = 0;
   out_2323407358908051241[245] = 0;
   out_2323407358908051241[246] = 0;
   out_2323407358908051241[247] = 0;
   out_2323407358908051241[248] = 0;
   out_2323407358908051241[249] = 0;
   out_2323407358908051241[250] = 0;
   out_2323407358908051241[251] = 0;
   out_2323407358908051241[252] = 0;
   out_2323407358908051241[253] = 0;
   out_2323407358908051241[254] = 0;
   out_2323407358908051241[255] = 0;
   out_2323407358908051241[256] = 0;
   out_2323407358908051241[257] = 0;
   out_2323407358908051241[258] = 0;
   out_2323407358908051241[259] = 0;
   out_2323407358908051241[260] = 0;
   out_2323407358908051241[261] = 0;
   out_2323407358908051241[262] = 0;
   out_2323407358908051241[263] = 1.0;
   out_2323407358908051241[264] = 0;
   out_2323407358908051241[265] = 0;
   out_2323407358908051241[266] = 0;
   out_2323407358908051241[267] = 0;
   out_2323407358908051241[268] = 0;
   out_2323407358908051241[269] = 0;
   out_2323407358908051241[270] = 0;
   out_2323407358908051241[271] = 0;
   out_2323407358908051241[272] = 0;
   out_2323407358908051241[273] = 0;
   out_2323407358908051241[274] = 0;
   out_2323407358908051241[275] = 0;
   out_2323407358908051241[276] = 0;
   out_2323407358908051241[277] = 0;
   out_2323407358908051241[278] = 0;
   out_2323407358908051241[279] = 0;
   out_2323407358908051241[280] = 0;
   out_2323407358908051241[281] = 0;
   out_2323407358908051241[282] = 0;
   out_2323407358908051241[283] = 0;
   out_2323407358908051241[284] = 0;
   out_2323407358908051241[285] = 1.0;
   out_2323407358908051241[286] = 0;
   out_2323407358908051241[287] = 0;
   out_2323407358908051241[288] = 0;
   out_2323407358908051241[289] = 0;
   out_2323407358908051241[290] = 0;
   out_2323407358908051241[291] = 0;
   out_2323407358908051241[292] = 0;
   out_2323407358908051241[293] = 0;
   out_2323407358908051241[294] = 0;
   out_2323407358908051241[295] = 0;
   out_2323407358908051241[296] = 0;
   out_2323407358908051241[297] = 0;
   out_2323407358908051241[298] = 0;
   out_2323407358908051241[299] = 0;
   out_2323407358908051241[300] = 0;
   out_2323407358908051241[301] = 0;
   out_2323407358908051241[302] = 0;
   out_2323407358908051241[303] = 0;
   out_2323407358908051241[304] = 0;
   out_2323407358908051241[305] = 0;
   out_2323407358908051241[306] = 0;
   out_2323407358908051241[307] = 1.0;
   out_2323407358908051241[308] = 0;
   out_2323407358908051241[309] = 0;
   out_2323407358908051241[310] = 0;
   out_2323407358908051241[311] = 0;
   out_2323407358908051241[312] = 0;
   out_2323407358908051241[313] = 0;
   out_2323407358908051241[314] = 0;
   out_2323407358908051241[315] = 0;
   out_2323407358908051241[316] = 0;
   out_2323407358908051241[317] = 0;
   out_2323407358908051241[318] = 0;
   out_2323407358908051241[319] = 0;
   out_2323407358908051241[320] = 0;
   out_2323407358908051241[321] = 0;
   out_2323407358908051241[322] = 0;
   out_2323407358908051241[323] = 0;
   out_2323407358908051241[324] = 0;
   out_2323407358908051241[325] = 0;
   out_2323407358908051241[326] = 0;
   out_2323407358908051241[327] = 0;
   out_2323407358908051241[328] = 0;
   out_2323407358908051241[329] = 1.0;
   out_2323407358908051241[330] = 0;
   out_2323407358908051241[331] = 0;
   out_2323407358908051241[332] = 0;
   out_2323407358908051241[333] = 0;
   out_2323407358908051241[334] = 0;
   out_2323407358908051241[335] = 0;
   out_2323407358908051241[336] = 0;
   out_2323407358908051241[337] = 0;
   out_2323407358908051241[338] = 0;
   out_2323407358908051241[339] = 0;
   out_2323407358908051241[340] = 0;
   out_2323407358908051241[341] = 0;
   out_2323407358908051241[342] = 0;
   out_2323407358908051241[343] = 0;
   out_2323407358908051241[344] = 0;
   out_2323407358908051241[345] = 0;
   out_2323407358908051241[346] = 0;
   out_2323407358908051241[347] = 0;
   out_2323407358908051241[348] = 0;
   out_2323407358908051241[349] = 0;
   out_2323407358908051241[350] = 0;
   out_2323407358908051241[351] = 1.0;
   out_2323407358908051241[352] = 0;
   out_2323407358908051241[353] = 0;
   out_2323407358908051241[354] = 0;
   out_2323407358908051241[355] = 0;
   out_2323407358908051241[356] = 0;
   out_2323407358908051241[357] = 0;
   out_2323407358908051241[358] = 0;
   out_2323407358908051241[359] = 0;
   out_2323407358908051241[360] = 0;
   out_2323407358908051241[361] = 0;
   out_2323407358908051241[362] = 0;
   out_2323407358908051241[363] = 0;
   out_2323407358908051241[364] = 0;
   out_2323407358908051241[365] = 0;
   out_2323407358908051241[366] = 0;
   out_2323407358908051241[367] = 0;
   out_2323407358908051241[368] = 0;
   out_2323407358908051241[369] = 0;
   out_2323407358908051241[370] = 0;
   out_2323407358908051241[371] = 0;
   out_2323407358908051241[372] = 0;
   out_2323407358908051241[373] = 1.0;
   out_2323407358908051241[374] = 0;
   out_2323407358908051241[375] = 0;
   out_2323407358908051241[376] = 0;
   out_2323407358908051241[377] = 0;
   out_2323407358908051241[378] = 0;
   out_2323407358908051241[379] = 0;
   out_2323407358908051241[380] = 0;
   out_2323407358908051241[381] = 0;
   out_2323407358908051241[382] = 0;
   out_2323407358908051241[383] = 0;
   out_2323407358908051241[384] = 0;
   out_2323407358908051241[385] = 0;
   out_2323407358908051241[386] = 0;
   out_2323407358908051241[387] = 0;
   out_2323407358908051241[388] = 0;
   out_2323407358908051241[389] = 0;
   out_2323407358908051241[390] = 0;
   out_2323407358908051241[391] = 0;
   out_2323407358908051241[392] = 0;
   out_2323407358908051241[393] = 0;
   out_2323407358908051241[394] = 0;
   out_2323407358908051241[395] = 1.0;
   out_2323407358908051241[396] = 0;
   out_2323407358908051241[397] = 0;
   out_2323407358908051241[398] = 0;
   out_2323407358908051241[399] = 0;
   out_2323407358908051241[400] = 0;
   out_2323407358908051241[401] = 0;
   out_2323407358908051241[402] = 0;
   out_2323407358908051241[403] = 0;
   out_2323407358908051241[404] = 0;
   out_2323407358908051241[405] = 0;
   out_2323407358908051241[406] = 0;
   out_2323407358908051241[407] = 0;
   out_2323407358908051241[408] = 0;
   out_2323407358908051241[409] = 0;
   out_2323407358908051241[410] = 0;
   out_2323407358908051241[411] = 0;
   out_2323407358908051241[412] = 0;
   out_2323407358908051241[413] = 0;
   out_2323407358908051241[414] = 0;
   out_2323407358908051241[415] = 0;
   out_2323407358908051241[416] = 0;
   out_2323407358908051241[417] = 1.0;
   out_2323407358908051241[418] = 0;
   out_2323407358908051241[419] = 0;
   out_2323407358908051241[420] = 0;
   out_2323407358908051241[421] = 0;
   out_2323407358908051241[422] = 0;
   out_2323407358908051241[423] = 0;
   out_2323407358908051241[424] = 0;
   out_2323407358908051241[425] = 0;
   out_2323407358908051241[426] = 0;
   out_2323407358908051241[427] = 0;
   out_2323407358908051241[428] = 0;
   out_2323407358908051241[429] = 0;
   out_2323407358908051241[430] = 0;
   out_2323407358908051241[431] = 0;
   out_2323407358908051241[432] = 0;
   out_2323407358908051241[433] = 0;
   out_2323407358908051241[434] = 0;
   out_2323407358908051241[435] = 0;
   out_2323407358908051241[436] = 0;
   out_2323407358908051241[437] = 0;
   out_2323407358908051241[438] = 0;
   out_2323407358908051241[439] = 1.0;
   out_2323407358908051241[440] = 0;
   out_2323407358908051241[441] = 0;
   out_2323407358908051241[442] = 0;
   out_2323407358908051241[443] = 0;
   out_2323407358908051241[444] = 0;
   out_2323407358908051241[445] = 0;
   out_2323407358908051241[446] = 0;
   out_2323407358908051241[447] = 0;
   out_2323407358908051241[448] = 0;
   out_2323407358908051241[449] = 0;
   out_2323407358908051241[450] = 0;
   out_2323407358908051241[451] = 0;
   out_2323407358908051241[452] = 0;
   out_2323407358908051241[453] = 0;
   out_2323407358908051241[454] = 0;
   out_2323407358908051241[455] = 0;
   out_2323407358908051241[456] = 0;
   out_2323407358908051241[457] = 0;
   out_2323407358908051241[458] = 0;
   out_2323407358908051241[459] = 0;
   out_2323407358908051241[460] = 0;
   out_2323407358908051241[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7679666672239594573) {
   out_7679666672239594573[0] = dt*state[7] + state[0];
   out_7679666672239594573[1] = dt*state[8] + state[1];
   out_7679666672239594573[2] = dt*state[9] + state[2];
   out_7679666672239594573[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7679666672239594573[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7679666672239594573[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7679666672239594573[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7679666672239594573[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7679666672239594573[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7679666672239594573[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7679666672239594573[10] = state[10];
   out_7679666672239594573[11] = state[11];
   out_7679666672239594573[12] = state[12];
   out_7679666672239594573[13] = state[13];
   out_7679666672239594573[14] = state[14];
   out_7679666672239594573[15] = state[15];
   out_7679666672239594573[16] = state[16];
   out_7679666672239594573[17] = state[17];
   out_7679666672239594573[18] = state[18];
   out_7679666672239594573[19] = state[19];
   out_7679666672239594573[20] = state[20];
   out_7679666672239594573[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6529899552359769468) {
   out_6529899552359769468[0] = 1;
   out_6529899552359769468[1] = 0;
   out_6529899552359769468[2] = 0;
   out_6529899552359769468[3] = 0;
   out_6529899552359769468[4] = 0;
   out_6529899552359769468[5] = 0;
   out_6529899552359769468[6] = dt;
   out_6529899552359769468[7] = 0;
   out_6529899552359769468[8] = 0;
   out_6529899552359769468[9] = 0;
   out_6529899552359769468[10] = 0;
   out_6529899552359769468[11] = 0;
   out_6529899552359769468[12] = 0;
   out_6529899552359769468[13] = 0;
   out_6529899552359769468[14] = 0;
   out_6529899552359769468[15] = 0;
   out_6529899552359769468[16] = 0;
   out_6529899552359769468[17] = 0;
   out_6529899552359769468[18] = 0;
   out_6529899552359769468[19] = 0;
   out_6529899552359769468[20] = 0;
   out_6529899552359769468[21] = 0;
   out_6529899552359769468[22] = 1;
   out_6529899552359769468[23] = 0;
   out_6529899552359769468[24] = 0;
   out_6529899552359769468[25] = 0;
   out_6529899552359769468[26] = 0;
   out_6529899552359769468[27] = 0;
   out_6529899552359769468[28] = dt;
   out_6529899552359769468[29] = 0;
   out_6529899552359769468[30] = 0;
   out_6529899552359769468[31] = 0;
   out_6529899552359769468[32] = 0;
   out_6529899552359769468[33] = 0;
   out_6529899552359769468[34] = 0;
   out_6529899552359769468[35] = 0;
   out_6529899552359769468[36] = 0;
   out_6529899552359769468[37] = 0;
   out_6529899552359769468[38] = 0;
   out_6529899552359769468[39] = 0;
   out_6529899552359769468[40] = 0;
   out_6529899552359769468[41] = 0;
   out_6529899552359769468[42] = 0;
   out_6529899552359769468[43] = 0;
   out_6529899552359769468[44] = 1;
   out_6529899552359769468[45] = 0;
   out_6529899552359769468[46] = 0;
   out_6529899552359769468[47] = 0;
   out_6529899552359769468[48] = 0;
   out_6529899552359769468[49] = 0;
   out_6529899552359769468[50] = dt;
   out_6529899552359769468[51] = 0;
   out_6529899552359769468[52] = 0;
   out_6529899552359769468[53] = 0;
   out_6529899552359769468[54] = 0;
   out_6529899552359769468[55] = 0;
   out_6529899552359769468[56] = 0;
   out_6529899552359769468[57] = 0;
   out_6529899552359769468[58] = 0;
   out_6529899552359769468[59] = 0;
   out_6529899552359769468[60] = 0;
   out_6529899552359769468[61] = 0;
   out_6529899552359769468[62] = 0;
   out_6529899552359769468[63] = 0;
   out_6529899552359769468[64] = 0;
   out_6529899552359769468[65] = 0;
   out_6529899552359769468[66] = 1;
   out_6529899552359769468[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6529899552359769468[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6529899552359769468[69] = 0;
   out_6529899552359769468[70] = 0;
   out_6529899552359769468[71] = 0;
   out_6529899552359769468[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6529899552359769468[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6529899552359769468[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6529899552359769468[75] = 0;
   out_6529899552359769468[76] = 0;
   out_6529899552359769468[77] = 0;
   out_6529899552359769468[78] = 0;
   out_6529899552359769468[79] = 0;
   out_6529899552359769468[80] = 0;
   out_6529899552359769468[81] = 0;
   out_6529899552359769468[82] = 0;
   out_6529899552359769468[83] = 0;
   out_6529899552359769468[84] = 0;
   out_6529899552359769468[85] = 0;
   out_6529899552359769468[86] = 0;
   out_6529899552359769468[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6529899552359769468[88] = 1;
   out_6529899552359769468[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6529899552359769468[90] = 0;
   out_6529899552359769468[91] = 0;
   out_6529899552359769468[92] = 0;
   out_6529899552359769468[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6529899552359769468[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6529899552359769468[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6529899552359769468[96] = 0;
   out_6529899552359769468[97] = 0;
   out_6529899552359769468[98] = 0;
   out_6529899552359769468[99] = 0;
   out_6529899552359769468[100] = 0;
   out_6529899552359769468[101] = 0;
   out_6529899552359769468[102] = 0;
   out_6529899552359769468[103] = 0;
   out_6529899552359769468[104] = 0;
   out_6529899552359769468[105] = 0;
   out_6529899552359769468[106] = 0;
   out_6529899552359769468[107] = 0;
   out_6529899552359769468[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6529899552359769468[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6529899552359769468[110] = 1;
   out_6529899552359769468[111] = 0;
   out_6529899552359769468[112] = 0;
   out_6529899552359769468[113] = 0;
   out_6529899552359769468[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6529899552359769468[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6529899552359769468[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6529899552359769468[117] = 0;
   out_6529899552359769468[118] = 0;
   out_6529899552359769468[119] = 0;
   out_6529899552359769468[120] = 0;
   out_6529899552359769468[121] = 0;
   out_6529899552359769468[122] = 0;
   out_6529899552359769468[123] = 0;
   out_6529899552359769468[124] = 0;
   out_6529899552359769468[125] = 0;
   out_6529899552359769468[126] = 0;
   out_6529899552359769468[127] = 0;
   out_6529899552359769468[128] = 0;
   out_6529899552359769468[129] = 0;
   out_6529899552359769468[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6529899552359769468[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6529899552359769468[132] = 1;
   out_6529899552359769468[133] = 0;
   out_6529899552359769468[134] = 0;
   out_6529899552359769468[135] = 0;
   out_6529899552359769468[136] = 0;
   out_6529899552359769468[137] = 0;
   out_6529899552359769468[138] = 0;
   out_6529899552359769468[139] = 0;
   out_6529899552359769468[140] = 0;
   out_6529899552359769468[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6529899552359769468[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6529899552359769468[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6529899552359769468[144] = 0;
   out_6529899552359769468[145] = 0;
   out_6529899552359769468[146] = 0;
   out_6529899552359769468[147] = 0;
   out_6529899552359769468[148] = 0;
   out_6529899552359769468[149] = 0;
   out_6529899552359769468[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6529899552359769468[151] = 0;
   out_6529899552359769468[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6529899552359769468[153] = 0;
   out_6529899552359769468[154] = 1;
   out_6529899552359769468[155] = 0;
   out_6529899552359769468[156] = 0;
   out_6529899552359769468[157] = 0;
   out_6529899552359769468[158] = 0;
   out_6529899552359769468[159] = 0;
   out_6529899552359769468[160] = 0;
   out_6529899552359769468[161] = 0;
   out_6529899552359769468[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6529899552359769468[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6529899552359769468[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6529899552359769468[165] = 0;
   out_6529899552359769468[166] = 0;
   out_6529899552359769468[167] = 0;
   out_6529899552359769468[168] = 0;
   out_6529899552359769468[169] = 0;
   out_6529899552359769468[170] = 0;
   out_6529899552359769468[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6529899552359769468[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6529899552359769468[173] = 0;
   out_6529899552359769468[174] = 0;
   out_6529899552359769468[175] = 0;
   out_6529899552359769468[176] = 1;
   out_6529899552359769468[177] = 0;
   out_6529899552359769468[178] = 0;
   out_6529899552359769468[179] = 0;
   out_6529899552359769468[180] = 0;
   out_6529899552359769468[181] = 0;
   out_6529899552359769468[182] = 0;
   out_6529899552359769468[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6529899552359769468[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6529899552359769468[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6529899552359769468[186] = 0;
   out_6529899552359769468[187] = 0;
   out_6529899552359769468[188] = 0;
   out_6529899552359769468[189] = 0;
   out_6529899552359769468[190] = 0;
   out_6529899552359769468[191] = 0;
   out_6529899552359769468[192] = 0;
   out_6529899552359769468[193] = 0;
   out_6529899552359769468[194] = 0;
   out_6529899552359769468[195] = 0;
   out_6529899552359769468[196] = 0;
   out_6529899552359769468[197] = 0;
   out_6529899552359769468[198] = 1;
   out_6529899552359769468[199] = 0;
   out_6529899552359769468[200] = 0;
   out_6529899552359769468[201] = 0;
   out_6529899552359769468[202] = 0;
   out_6529899552359769468[203] = 0;
   out_6529899552359769468[204] = 0;
   out_6529899552359769468[205] = 0;
   out_6529899552359769468[206] = 0;
   out_6529899552359769468[207] = 0;
   out_6529899552359769468[208] = 0;
   out_6529899552359769468[209] = 0;
   out_6529899552359769468[210] = 0;
   out_6529899552359769468[211] = 0;
   out_6529899552359769468[212] = 0;
   out_6529899552359769468[213] = 0;
   out_6529899552359769468[214] = 0;
   out_6529899552359769468[215] = 0;
   out_6529899552359769468[216] = 0;
   out_6529899552359769468[217] = 0;
   out_6529899552359769468[218] = 0;
   out_6529899552359769468[219] = 0;
   out_6529899552359769468[220] = 1;
   out_6529899552359769468[221] = 0;
   out_6529899552359769468[222] = 0;
   out_6529899552359769468[223] = 0;
   out_6529899552359769468[224] = 0;
   out_6529899552359769468[225] = 0;
   out_6529899552359769468[226] = 0;
   out_6529899552359769468[227] = 0;
   out_6529899552359769468[228] = 0;
   out_6529899552359769468[229] = 0;
   out_6529899552359769468[230] = 0;
   out_6529899552359769468[231] = 0;
   out_6529899552359769468[232] = 0;
   out_6529899552359769468[233] = 0;
   out_6529899552359769468[234] = 0;
   out_6529899552359769468[235] = 0;
   out_6529899552359769468[236] = 0;
   out_6529899552359769468[237] = 0;
   out_6529899552359769468[238] = 0;
   out_6529899552359769468[239] = 0;
   out_6529899552359769468[240] = 0;
   out_6529899552359769468[241] = 0;
   out_6529899552359769468[242] = 1;
   out_6529899552359769468[243] = 0;
   out_6529899552359769468[244] = 0;
   out_6529899552359769468[245] = 0;
   out_6529899552359769468[246] = 0;
   out_6529899552359769468[247] = 0;
   out_6529899552359769468[248] = 0;
   out_6529899552359769468[249] = 0;
   out_6529899552359769468[250] = 0;
   out_6529899552359769468[251] = 0;
   out_6529899552359769468[252] = 0;
   out_6529899552359769468[253] = 0;
   out_6529899552359769468[254] = 0;
   out_6529899552359769468[255] = 0;
   out_6529899552359769468[256] = 0;
   out_6529899552359769468[257] = 0;
   out_6529899552359769468[258] = 0;
   out_6529899552359769468[259] = 0;
   out_6529899552359769468[260] = 0;
   out_6529899552359769468[261] = 0;
   out_6529899552359769468[262] = 0;
   out_6529899552359769468[263] = 0;
   out_6529899552359769468[264] = 1;
   out_6529899552359769468[265] = 0;
   out_6529899552359769468[266] = 0;
   out_6529899552359769468[267] = 0;
   out_6529899552359769468[268] = 0;
   out_6529899552359769468[269] = 0;
   out_6529899552359769468[270] = 0;
   out_6529899552359769468[271] = 0;
   out_6529899552359769468[272] = 0;
   out_6529899552359769468[273] = 0;
   out_6529899552359769468[274] = 0;
   out_6529899552359769468[275] = 0;
   out_6529899552359769468[276] = 0;
   out_6529899552359769468[277] = 0;
   out_6529899552359769468[278] = 0;
   out_6529899552359769468[279] = 0;
   out_6529899552359769468[280] = 0;
   out_6529899552359769468[281] = 0;
   out_6529899552359769468[282] = 0;
   out_6529899552359769468[283] = 0;
   out_6529899552359769468[284] = 0;
   out_6529899552359769468[285] = 0;
   out_6529899552359769468[286] = 1;
   out_6529899552359769468[287] = 0;
   out_6529899552359769468[288] = 0;
   out_6529899552359769468[289] = 0;
   out_6529899552359769468[290] = 0;
   out_6529899552359769468[291] = 0;
   out_6529899552359769468[292] = 0;
   out_6529899552359769468[293] = 0;
   out_6529899552359769468[294] = 0;
   out_6529899552359769468[295] = 0;
   out_6529899552359769468[296] = 0;
   out_6529899552359769468[297] = 0;
   out_6529899552359769468[298] = 0;
   out_6529899552359769468[299] = 0;
   out_6529899552359769468[300] = 0;
   out_6529899552359769468[301] = 0;
   out_6529899552359769468[302] = 0;
   out_6529899552359769468[303] = 0;
   out_6529899552359769468[304] = 0;
   out_6529899552359769468[305] = 0;
   out_6529899552359769468[306] = 0;
   out_6529899552359769468[307] = 0;
   out_6529899552359769468[308] = 1;
   out_6529899552359769468[309] = 0;
   out_6529899552359769468[310] = 0;
   out_6529899552359769468[311] = 0;
   out_6529899552359769468[312] = 0;
   out_6529899552359769468[313] = 0;
   out_6529899552359769468[314] = 0;
   out_6529899552359769468[315] = 0;
   out_6529899552359769468[316] = 0;
   out_6529899552359769468[317] = 0;
   out_6529899552359769468[318] = 0;
   out_6529899552359769468[319] = 0;
   out_6529899552359769468[320] = 0;
   out_6529899552359769468[321] = 0;
   out_6529899552359769468[322] = 0;
   out_6529899552359769468[323] = 0;
   out_6529899552359769468[324] = 0;
   out_6529899552359769468[325] = 0;
   out_6529899552359769468[326] = 0;
   out_6529899552359769468[327] = 0;
   out_6529899552359769468[328] = 0;
   out_6529899552359769468[329] = 0;
   out_6529899552359769468[330] = 1;
   out_6529899552359769468[331] = 0;
   out_6529899552359769468[332] = 0;
   out_6529899552359769468[333] = 0;
   out_6529899552359769468[334] = 0;
   out_6529899552359769468[335] = 0;
   out_6529899552359769468[336] = 0;
   out_6529899552359769468[337] = 0;
   out_6529899552359769468[338] = 0;
   out_6529899552359769468[339] = 0;
   out_6529899552359769468[340] = 0;
   out_6529899552359769468[341] = 0;
   out_6529899552359769468[342] = 0;
   out_6529899552359769468[343] = 0;
   out_6529899552359769468[344] = 0;
   out_6529899552359769468[345] = 0;
   out_6529899552359769468[346] = 0;
   out_6529899552359769468[347] = 0;
   out_6529899552359769468[348] = 0;
   out_6529899552359769468[349] = 0;
   out_6529899552359769468[350] = 0;
   out_6529899552359769468[351] = 0;
   out_6529899552359769468[352] = 1;
   out_6529899552359769468[353] = 0;
   out_6529899552359769468[354] = 0;
   out_6529899552359769468[355] = 0;
   out_6529899552359769468[356] = 0;
   out_6529899552359769468[357] = 0;
   out_6529899552359769468[358] = 0;
   out_6529899552359769468[359] = 0;
   out_6529899552359769468[360] = 0;
   out_6529899552359769468[361] = 0;
   out_6529899552359769468[362] = 0;
   out_6529899552359769468[363] = 0;
   out_6529899552359769468[364] = 0;
   out_6529899552359769468[365] = 0;
   out_6529899552359769468[366] = 0;
   out_6529899552359769468[367] = 0;
   out_6529899552359769468[368] = 0;
   out_6529899552359769468[369] = 0;
   out_6529899552359769468[370] = 0;
   out_6529899552359769468[371] = 0;
   out_6529899552359769468[372] = 0;
   out_6529899552359769468[373] = 0;
   out_6529899552359769468[374] = 1;
   out_6529899552359769468[375] = 0;
   out_6529899552359769468[376] = 0;
   out_6529899552359769468[377] = 0;
   out_6529899552359769468[378] = 0;
   out_6529899552359769468[379] = 0;
   out_6529899552359769468[380] = 0;
   out_6529899552359769468[381] = 0;
   out_6529899552359769468[382] = 0;
   out_6529899552359769468[383] = 0;
   out_6529899552359769468[384] = 0;
   out_6529899552359769468[385] = 0;
   out_6529899552359769468[386] = 0;
   out_6529899552359769468[387] = 0;
   out_6529899552359769468[388] = 0;
   out_6529899552359769468[389] = 0;
   out_6529899552359769468[390] = 0;
   out_6529899552359769468[391] = 0;
   out_6529899552359769468[392] = 0;
   out_6529899552359769468[393] = 0;
   out_6529899552359769468[394] = 0;
   out_6529899552359769468[395] = 0;
   out_6529899552359769468[396] = 1;
   out_6529899552359769468[397] = 0;
   out_6529899552359769468[398] = 0;
   out_6529899552359769468[399] = 0;
   out_6529899552359769468[400] = 0;
   out_6529899552359769468[401] = 0;
   out_6529899552359769468[402] = 0;
   out_6529899552359769468[403] = 0;
   out_6529899552359769468[404] = 0;
   out_6529899552359769468[405] = 0;
   out_6529899552359769468[406] = 0;
   out_6529899552359769468[407] = 0;
   out_6529899552359769468[408] = 0;
   out_6529899552359769468[409] = 0;
   out_6529899552359769468[410] = 0;
   out_6529899552359769468[411] = 0;
   out_6529899552359769468[412] = 0;
   out_6529899552359769468[413] = 0;
   out_6529899552359769468[414] = 0;
   out_6529899552359769468[415] = 0;
   out_6529899552359769468[416] = 0;
   out_6529899552359769468[417] = 0;
   out_6529899552359769468[418] = 1;
   out_6529899552359769468[419] = 0;
   out_6529899552359769468[420] = 0;
   out_6529899552359769468[421] = 0;
   out_6529899552359769468[422] = 0;
   out_6529899552359769468[423] = 0;
   out_6529899552359769468[424] = 0;
   out_6529899552359769468[425] = 0;
   out_6529899552359769468[426] = 0;
   out_6529899552359769468[427] = 0;
   out_6529899552359769468[428] = 0;
   out_6529899552359769468[429] = 0;
   out_6529899552359769468[430] = 0;
   out_6529899552359769468[431] = 0;
   out_6529899552359769468[432] = 0;
   out_6529899552359769468[433] = 0;
   out_6529899552359769468[434] = 0;
   out_6529899552359769468[435] = 0;
   out_6529899552359769468[436] = 0;
   out_6529899552359769468[437] = 0;
   out_6529899552359769468[438] = 0;
   out_6529899552359769468[439] = 0;
   out_6529899552359769468[440] = 1;
}
void h_4(double *state, double *unused, double *out_3869304003052469608) {
   out_3869304003052469608[0] = state[10] + state[13];
   out_3869304003052469608[1] = state[11] + state[14];
   out_3869304003052469608[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1451348106210356524) {
   out_1451348106210356524[0] = 0;
   out_1451348106210356524[1] = 0;
   out_1451348106210356524[2] = 0;
   out_1451348106210356524[3] = 0;
   out_1451348106210356524[4] = 0;
   out_1451348106210356524[5] = 0;
   out_1451348106210356524[6] = 0;
   out_1451348106210356524[7] = 0;
   out_1451348106210356524[8] = 0;
   out_1451348106210356524[9] = 0;
   out_1451348106210356524[10] = 1;
   out_1451348106210356524[11] = 0;
   out_1451348106210356524[12] = 0;
   out_1451348106210356524[13] = 1;
   out_1451348106210356524[14] = 0;
   out_1451348106210356524[15] = 0;
   out_1451348106210356524[16] = 0;
   out_1451348106210356524[17] = 0;
   out_1451348106210356524[18] = 0;
   out_1451348106210356524[19] = 0;
   out_1451348106210356524[20] = 0;
   out_1451348106210356524[21] = 0;
   out_1451348106210356524[22] = 0;
   out_1451348106210356524[23] = 0;
   out_1451348106210356524[24] = 0;
   out_1451348106210356524[25] = 0;
   out_1451348106210356524[26] = 0;
   out_1451348106210356524[27] = 0;
   out_1451348106210356524[28] = 0;
   out_1451348106210356524[29] = 0;
   out_1451348106210356524[30] = 0;
   out_1451348106210356524[31] = 0;
   out_1451348106210356524[32] = 0;
   out_1451348106210356524[33] = 1;
   out_1451348106210356524[34] = 0;
   out_1451348106210356524[35] = 0;
   out_1451348106210356524[36] = 1;
   out_1451348106210356524[37] = 0;
   out_1451348106210356524[38] = 0;
   out_1451348106210356524[39] = 0;
   out_1451348106210356524[40] = 0;
   out_1451348106210356524[41] = 0;
   out_1451348106210356524[42] = 0;
   out_1451348106210356524[43] = 0;
   out_1451348106210356524[44] = 0;
   out_1451348106210356524[45] = 0;
   out_1451348106210356524[46] = 0;
   out_1451348106210356524[47] = 0;
   out_1451348106210356524[48] = 0;
   out_1451348106210356524[49] = 0;
   out_1451348106210356524[50] = 0;
   out_1451348106210356524[51] = 0;
   out_1451348106210356524[52] = 0;
   out_1451348106210356524[53] = 0;
   out_1451348106210356524[54] = 0;
   out_1451348106210356524[55] = 0;
   out_1451348106210356524[56] = 1;
   out_1451348106210356524[57] = 0;
   out_1451348106210356524[58] = 0;
   out_1451348106210356524[59] = 1;
   out_1451348106210356524[60] = 0;
   out_1451348106210356524[61] = 0;
   out_1451348106210356524[62] = 0;
   out_1451348106210356524[63] = 0;
   out_1451348106210356524[64] = 0;
   out_1451348106210356524[65] = 0;
}
void h_9(double *state, double *unused, double *out_2177619537968645471) {
   out_2177619537968645471[0] = state[10];
   out_2177619537968645471[1] = state[11];
   out_2177619537968645471[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1692537752839947169) {
   out_1692537752839947169[0] = 0;
   out_1692537752839947169[1] = 0;
   out_1692537752839947169[2] = 0;
   out_1692537752839947169[3] = 0;
   out_1692537752839947169[4] = 0;
   out_1692537752839947169[5] = 0;
   out_1692537752839947169[6] = 0;
   out_1692537752839947169[7] = 0;
   out_1692537752839947169[8] = 0;
   out_1692537752839947169[9] = 0;
   out_1692537752839947169[10] = 1;
   out_1692537752839947169[11] = 0;
   out_1692537752839947169[12] = 0;
   out_1692537752839947169[13] = 0;
   out_1692537752839947169[14] = 0;
   out_1692537752839947169[15] = 0;
   out_1692537752839947169[16] = 0;
   out_1692537752839947169[17] = 0;
   out_1692537752839947169[18] = 0;
   out_1692537752839947169[19] = 0;
   out_1692537752839947169[20] = 0;
   out_1692537752839947169[21] = 0;
   out_1692537752839947169[22] = 0;
   out_1692537752839947169[23] = 0;
   out_1692537752839947169[24] = 0;
   out_1692537752839947169[25] = 0;
   out_1692537752839947169[26] = 0;
   out_1692537752839947169[27] = 0;
   out_1692537752839947169[28] = 0;
   out_1692537752839947169[29] = 0;
   out_1692537752839947169[30] = 0;
   out_1692537752839947169[31] = 0;
   out_1692537752839947169[32] = 0;
   out_1692537752839947169[33] = 1;
   out_1692537752839947169[34] = 0;
   out_1692537752839947169[35] = 0;
   out_1692537752839947169[36] = 0;
   out_1692537752839947169[37] = 0;
   out_1692537752839947169[38] = 0;
   out_1692537752839947169[39] = 0;
   out_1692537752839947169[40] = 0;
   out_1692537752839947169[41] = 0;
   out_1692537752839947169[42] = 0;
   out_1692537752839947169[43] = 0;
   out_1692537752839947169[44] = 0;
   out_1692537752839947169[45] = 0;
   out_1692537752839947169[46] = 0;
   out_1692537752839947169[47] = 0;
   out_1692537752839947169[48] = 0;
   out_1692537752839947169[49] = 0;
   out_1692537752839947169[50] = 0;
   out_1692537752839947169[51] = 0;
   out_1692537752839947169[52] = 0;
   out_1692537752839947169[53] = 0;
   out_1692537752839947169[54] = 0;
   out_1692537752839947169[55] = 0;
   out_1692537752839947169[56] = 1;
   out_1692537752839947169[57] = 0;
   out_1692537752839947169[58] = 0;
   out_1692537752839947169[59] = 0;
   out_1692537752839947169[60] = 0;
   out_1692537752839947169[61] = 0;
   out_1692537752839947169[62] = 0;
   out_1692537752839947169[63] = 0;
   out_1692537752839947169[64] = 0;
   out_1692537752839947169[65] = 0;
}
void h_10(double *state, double *unused, double *out_7579447694123810588) {
   out_7579447694123810588[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7579447694123810588[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7579447694123810588[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5136410709345790733) {
   out_5136410709345790733[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5136410709345790733[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5136410709345790733[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5136410709345790733[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5136410709345790733[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5136410709345790733[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5136410709345790733[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5136410709345790733[7] = 0;
   out_5136410709345790733[8] = 0;
   out_5136410709345790733[9] = 0;
   out_5136410709345790733[10] = 0;
   out_5136410709345790733[11] = 0;
   out_5136410709345790733[12] = 0;
   out_5136410709345790733[13] = 0;
   out_5136410709345790733[14] = 0;
   out_5136410709345790733[15] = 0;
   out_5136410709345790733[16] = 1;
   out_5136410709345790733[17] = 0;
   out_5136410709345790733[18] = 0;
   out_5136410709345790733[19] = 1;
   out_5136410709345790733[20] = 0;
   out_5136410709345790733[21] = 0;
   out_5136410709345790733[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5136410709345790733[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5136410709345790733[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5136410709345790733[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5136410709345790733[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5136410709345790733[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5136410709345790733[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5136410709345790733[29] = 0;
   out_5136410709345790733[30] = 0;
   out_5136410709345790733[31] = 0;
   out_5136410709345790733[32] = 0;
   out_5136410709345790733[33] = 0;
   out_5136410709345790733[34] = 0;
   out_5136410709345790733[35] = 0;
   out_5136410709345790733[36] = 0;
   out_5136410709345790733[37] = 0;
   out_5136410709345790733[38] = 0;
   out_5136410709345790733[39] = 1;
   out_5136410709345790733[40] = 0;
   out_5136410709345790733[41] = 0;
   out_5136410709345790733[42] = 1;
   out_5136410709345790733[43] = 0;
   out_5136410709345790733[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5136410709345790733[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5136410709345790733[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5136410709345790733[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5136410709345790733[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5136410709345790733[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5136410709345790733[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5136410709345790733[51] = 0;
   out_5136410709345790733[52] = 0;
   out_5136410709345790733[53] = 0;
   out_5136410709345790733[54] = 0;
   out_5136410709345790733[55] = 0;
   out_5136410709345790733[56] = 0;
   out_5136410709345790733[57] = 0;
   out_5136410709345790733[58] = 0;
   out_5136410709345790733[59] = 0;
   out_5136410709345790733[60] = 0;
   out_5136410709345790733[61] = 0;
   out_5136410709345790733[62] = 1;
   out_5136410709345790733[63] = 0;
   out_5136410709345790733[64] = 0;
   out_5136410709345790733[65] = 1;
}
void h_12(double *state, double *unused, double *out_1960893434720126470) {
   out_1960893434720126470[0] = state[0];
   out_1960893434720126470[1] = state[1];
   out_1960893434720126470[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6470804514242318319) {
   out_6470804514242318319[0] = 1;
   out_6470804514242318319[1] = 0;
   out_6470804514242318319[2] = 0;
   out_6470804514242318319[3] = 0;
   out_6470804514242318319[4] = 0;
   out_6470804514242318319[5] = 0;
   out_6470804514242318319[6] = 0;
   out_6470804514242318319[7] = 0;
   out_6470804514242318319[8] = 0;
   out_6470804514242318319[9] = 0;
   out_6470804514242318319[10] = 0;
   out_6470804514242318319[11] = 0;
   out_6470804514242318319[12] = 0;
   out_6470804514242318319[13] = 0;
   out_6470804514242318319[14] = 0;
   out_6470804514242318319[15] = 0;
   out_6470804514242318319[16] = 0;
   out_6470804514242318319[17] = 0;
   out_6470804514242318319[18] = 0;
   out_6470804514242318319[19] = 0;
   out_6470804514242318319[20] = 0;
   out_6470804514242318319[21] = 0;
   out_6470804514242318319[22] = 0;
   out_6470804514242318319[23] = 1;
   out_6470804514242318319[24] = 0;
   out_6470804514242318319[25] = 0;
   out_6470804514242318319[26] = 0;
   out_6470804514242318319[27] = 0;
   out_6470804514242318319[28] = 0;
   out_6470804514242318319[29] = 0;
   out_6470804514242318319[30] = 0;
   out_6470804514242318319[31] = 0;
   out_6470804514242318319[32] = 0;
   out_6470804514242318319[33] = 0;
   out_6470804514242318319[34] = 0;
   out_6470804514242318319[35] = 0;
   out_6470804514242318319[36] = 0;
   out_6470804514242318319[37] = 0;
   out_6470804514242318319[38] = 0;
   out_6470804514242318319[39] = 0;
   out_6470804514242318319[40] = 0;
   out_6470804514242318319[41] = 0;
   out_6470804514242318319[42] = 0;
   out_6470804514242318319[43] = 0;
   out_6470804514242318319[44] = 0;
   out_6470804514242318319[45] = 0;
   out_6470804514242318319[46] = 1;
   out_6470804514242318319[47] = 0;
   out_6470804514242318319[48] = 0;
   out_6470804514242318319[49] = 0;
   out_6470804514242318319[50] = 0;
   out_6470804514242318319[51] = 0;
   out_6470804514242318319[52] = 0;
   out_6470804514242318319[53] = 0;
   out_6470804514242318319[54] = 0;
   out_6470804514242318319[55] = 0;
   out_6470804514242318319[56] = 0;
   out_6470804514242318319[57] = 0;
   out_6470804514242318319[58] = 0;
   out_6470804514242318319[59] = 0;
   out_6470804514242318319[60] = 0;
   out_6470804514242318319[61] = 0;
   out_6470804514242318319[62] = 0;
   out_6470804514242318319[63] = 0;
   out_6470804514242318319[64] = 0;
   out_6470804514242318319[65] = 0;
}
void h_35(double *state, double *unused, double *out_4281719968276769877) {
   out_4281719968276769877[0] = state[7];
   out_4281719968276769877[1] = state[8];
   out_4281719968276769877[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9216367546567332028) {
   out_9216367546567332028[0] = 0;
   out_9216367546567332028[1] = 0;
   out_9216367546567332028[2] = 0;
   out_9216367546567332028[3] = 0;
   out_9216367546567332028[4] = 0;
   out_9216367546567332028[5] = 0;
   out_9216367546567332028[6] = 0;
   out_9216367546567332028[7] = 1;
   out_9216367546567332028[8] = 0;
   out_9216367546567332028[9] = 0;
   out_9216367546567332028[10] = 0;
   out_9216367546567332028[11] = 0;
   out_9216367546567332028[12] = 0;
   out_9216367546567332028[13] = 0;
   out_9216367546567332028[14] = 0;
   out_9216367546567332028[15] = 0;
   out_9216367546567332028[16] = 0;
   out_9216367546567332028[17] = 0;
   out_9216367546567332028[18] = 0;
   out_9216367546567332028[19] = 0;
   out_9216367546567332028[20] = 0;
   out_9216367546567332028[21] = 0;
   out_9216367546567332028[22] = 0;
   out_9216367546567332028[23] = 0;
   out_9216367546567332028[24] = 0;
   out_9216367546567332028[25] = 0;
   out_9216367546567332028[26] = 0;
   out_9216367546567332028[27] = 0;
   out_9216367546567332028[28] = 0;
   out_9216367546567332028[29] = 0;
   out_9216367546567332028[30] = 1;
   out_9216367546567332028[31] = 0;
   out_9216367546567332028[32] = 0;
   out_9216367546567332028[33] = 0;
   out_9216367546567332028[34] = 0;
   out_9216367546567332028[35] = 0;
   out_9216367546567332028[36] = 0;
   out_9216367546567332028[37] = 0;
   out_9216367546567332028[38] = 0;
   out_9216367546567332028[39] = 0;
   out_9216367546567332028[40] = 0;
   out_9216367546567332028[41] = 0;
   out_9216367546567332028[42] = 0;
   out_9216367546567332028[43] = 0;
   out_9216367546567332028[44] = 0;
   out_9216367546567332028[45] = 0;
   out_9216367546567332028[46] = 0;
   out_9216367546567332028[47] = 0;
   out_9216367546567332028[48] = 0;
   out_9216367546567332028[49] = 0;
   out_9216367546567332028[50] = 0;
   out_9216367546567332028[51] = 0;
   out_9216367546567332028[52] = 0;
   out_9216367546567332028[53] = 1;
   out_9216367546567332028[54] = 0;
   out_9216367546567332028[55] = 0;
   out_9216367546567332028[56] = 0;
   out_9216367546567332028[57] = 0;
   out_9216367546567332028[58] = 0;
   out_9216367546567332028[59] = 0;
   out_9216367546567332028[60] = 0;
   out_9216367546567332028[61] = 0;
   out_9216367546567332028[62] = 0;
   out_9216367546567332028[63] = 0;
   out_9216367546567332028[64] = 0;
   out_9216367546567332028[65] = 0;
}
void h_32(double *state, double *unused, double *out_1943421361472635268) {
   out_1943421361472635268[0] = state[3];
   out_1943421361472635268[1] = state[4];
   out_1943421361472635268[2] = state[5];
   out_1943421361472635268[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7289538189809210787) {
   out_7289538189809210787[0] = 0;
   out_7289538189809210787[1] = 0;
   out_7289538189809210787[2] = 0;
   out_7289538189809210787[3] = 1;
   out_7289538189809210787[4] = 0;
   out_7289538189809210787[5] = 0;
   out_7289538189809210787[6] = 0;
   out_7289538189809210787[7] = 0;
   out_7289538189809210787[8] = 0;
   out_7289538189809210787[9] = 0;
   out_7289538189809210787[10] = 0;
   out_7289538189809210787[11] = 0;
   out_7289538189809210787[12] = 0;
   out_7289538189809210787[13] = 0;
   out_7289538189809210787[14] = 0;
   out_7289538189809210787[15] = 0;
   out_7289538189809210787[16] = 0;
   out_7289538189809210787[17] = 0;
   out_7289538189809210787[18] = 0;
   out_7289538189809210787[19] = 0;
   out_7289538189809210787[20] = 0;
   out_7289538189809210787[21] = 0;
   out_7289538189809210787[22] = 0;
   out_7289538189809210787[23] = 0;
   out_7289538189809210787[24] = 0;
   out_7289538189809210787[25] = 0;
   out_7289538189809210787[26] = 1;
   out_7289538189809210787[27] = 0;
   out_7289538189809210787[28] = 0;
   out_7289538189809210787[29] = 0;
   out_7289538189809210787[30] = 0;
   out_7289538189809210787[31] = 0;
   out_7289538189809210787[32] = 0;
   out_7289538189809210787[33] = 0;
   out_7289538189809210787[34] = 0;
   out_7289538189809210787[35] = 0;
   out_7289538189809210787[36] = 0;
   out_7289538189809210787[37] = 0;
   out_7289538189809210787[38] = 0;
   out_7289538189809210787[39] = 0;
   out_7289538189809210787[40] = 0;
   out_7289538189809210787[41] = 0;
   out_7289538189809210787[42] = 0;
   out_7289538189809210787[43] = 0;
   out_7289538189809210787[44] = 0;
   out_7289538189809210787[45] = 0;
   out_7289538189809210787[46] = 0;
   out_7289538189809210787[47] = 0;
   out_7289538189809210787[48] = 0;
   out_7289538189809210787[49] = 1;
   out_7289538189809210787[50] = 0;
   out_7289538189809210787[51] = 0;
   out_7289538189809210787[52] = 0;
   out_7289538189809210787[53] = 0;
   out_7289538189809210787[54] = 0;
   out_7289538189809210787[55] = 0;
   out_7289538189809210787[56] = 0;
   out_7289538189809210787[57] = 0;
   out_7289538189809210787[58] = 0;
   out_7289538189809210787[59] = 0;
   out_7289538189809210787[60] = 0;
   out_7289538189809210787[61] = 0;
   out_7289538189809210787[62] = 0;
   out_7289538189809210787[63] = 0;
   out_7289538189809210787[64] = 0;
   out_7289538189809210787[65] = 0;
   out_7289538189809210787[66] = 0;
   out_7289538189809210787[67] = 0;
   out_7289538189809210787[68] = 0;
   out_7289538189809210787[69] = 0;
   out_7289538189809210787[70] = 0;
   out_7289538189809210787[71] = 0;
   out_7289538189809210787[72] = 1;
   out_7289538189809210787[73] = 0;
   out_7289538189809210787[74] = 0;
   out_7289538189809210787[75] = 0;
   out_7289538189809210787[76] = 0;
   out_7289538189809210787[77] = 0;
   out_7289538189809210787[78] = 0;
   out_7289538189809210787[79] = 0;
   out_7289538189809210787[80] = 0;
   out_7289538189809210787[81] = 0;
   out_7289538189809210787[82] = 0;
   out_7289538189809210787[83] = 0;
   out_7289538189809210787[84] = 0;
   out_7289538189809210787[85] = 0;
   out_7289538189809210787[86] = 0;
   out_7289538189809210787[87] = 0;
}
void h_13(double *state, double *unused, double *out_1922592336643947345) {
   out_1922592336643947345[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1922592336643947345[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1922592336643947345[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4134273078622778629) {
   out_4134273078622778629[0] = 0;
   out_4134273078622778629[1] = 0;
   out_4134273078622778629[2] = 0;
   out_4134273078622778629[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4134273078622778629[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4134273078622778629[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4134273078622778629[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4134273078622778629[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4134273078622778629[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4134273078622778629[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4134273078622778629[10] = 0;
   out_4134273078622778629[11] = 0;
   out_4134273078622778629[12] = 0;
   out_4134273078622778629[13] = 0;
   out_4134273078622778629[14] = 0;
   out_4134273078622778629[15] = 0;
   out_4134273078622778629[16] = 0;
   out_4134273078622778629[17] = 0;
   out_4134273078622778629[18] = 0;
   out_4134273078622778629[19] = 0;
   out_4134273078622778629[20] = 0;
   out_4134273078622778629[21] = 0;
   out_4134273078622778629[22] = 0;
   out_4134273078622778629[23] = 0;
   out_4134273078622778629[24] = 0;
   out_4134273078622778629[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4134273078622778629[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4134273078622778629[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4134273078622778629[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4134273078622778629[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4134273078622778629[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4134273078622778629[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4134273078622778629[32] = 0;
   out_4134273078622778629[33] = 0;
   out_4134273078622778629[34] = 0;
   out_4134273078622778629[35] = 0;
   out_4134273078622778629[36] = 0;
   out_4134273078622778629[37] = 0;
   out_4134273078622778629[38] = 0;
   out_4134273078622778629[39] = 0;
   out_4134273078622778629[40] = 0;
   out_4134273078622778629[41] = 0;
   out_4134273078622778629[42] = 0;
   out_4134273078622778629[43] = 0;
   out_4134273078622778629[44] = 0;
   out_4134273078622778629[45] = 0;
   out_4134273078622778629[46] = 0;
   out_4134273078622778629[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4134273078622778629[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4134273078622778629[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4134273078622778629[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4134273078622778629[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4134273078622778629[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4134273078622778629[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4134273078622778629[54] = 0;
   out_4134273078622778629[55] = 0;
   out_4134273078622778629[56] = 0;
   out_4134273078622778629[57] = 0;
   out_4134273078622778629[58] = 0;
   out_4134273078622778629[59] = 0;
   out_4134273078622778629[60] = 0;
   out_4134273078622778629[61] = 0;
   out_4134273078622778629[62] = 0;
   out_4134273078622778629[63] = 0;
   out_4134273078622778629[64] = 0;
   out_4134273078622778629[65] = 0;
}
void h_14(double *state, double *unused, double *out_2177619537968645471) {
   out_2177619537968645471[0] = state[10];
   out_2177619537968645471[1] = state[11];
   out_2177619537968645471[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1692537752839947169) {
   out_1692537752839947169[0] = 0;
   out_1692537752839947169[1] = 0;
   out_1692537752839947169[2] = 0;
   out_1692537752839947169[3] = 0;
   out_1692537752839947169[4] = 0;
   out_1692537752839947169[5] = 0;
   out_1692537752839947169[6] = 0;
   out_1692537752839947169[7] = 0;
   out_1692537752839947169[8] = 0;
   out_1692537752839947169[9] = 0;
   out_1692537752839947169[10] = 1;
   out_1692537752839947169[11] = 0;
   out_1692537752839947169[12] = 0;
   out_1692537752839947169[13] = 0;
   out_1692537752839947169[14] = 0;
   out_1692537752839947169[15] = 0;
   out_1692537752839947169[16] = 0;
   out_1692537752839947169[17] = 0;
   out_1692537752839947169[18] = 0;
   out_1692537752839947169[19] = 0;
   out_1692537752839947169[20] = 0;
   out_1692537752839947169[21] = 0;
   out_1692537752839947169[22] = 0;
   out_1692537752839947169[23] = 0;
   out_1692537752839947169[24] = 0;
   out_1692537752839947169[25] = 0;
   out_1692537752839947169[26] = 0;
   out_1692537752839947169[27] = 0;
   out_1692537752839947169[28] = 0;
   out_1692537752839947169[29] = 0;
   out_1692537752839947169[30] = 0;
   out_1692537752839947169[31] = 0;
   out_1692537752839947169[32] = 0;
   out_1692537752839947169[33] = 1;
   out_1692537752839947169[34] = 0;
   out_1692537752839947169[35] = 0;
   out_1692537752839947169[36] = 0;
   out_1692537752839947169[37] = 0;
   out_1692537752839947169[38] = 0;
   out_1692537752839947169[39] = 0;
   out_1692537752839947169[40] = 0;
   out_1692537752839947169[41] = 0;
   out_1692537752839947169[42] = 0;
   out_1692537752839947169[43] = 0;
   out_1692537752839947169[44] = 0;
   out_1692537752839947169[45] = 0;
   out_1692537752839947169[46] = 0;
   out_1692537752839947169[47] = 0;
   out_1692537752839947169[48] = 0;
   out_1692537752839947169[49] = 0;
   out_1692537752839947169[50] = 0;
   out_1692537752839947169[51] = 0;
   out_1692537752839947169[52] = 0;
   out_1692537752839947169[53] = 0;
   out_1692537752839947169[54] = 0;
   out_1692537752839947169[55] = 0;
   out_1692537752839947169[56] = 1;
   out_1692537752839947169[57] = 0;
   out_1692537752839947169[58] = 0;
   out_1692537752839947169[59] = 0;
   out_1692537752839947169[60] = 0;
   out_1692537752839947169[61] = 0;
   out_1692537752839947169[62] = 0;
   out_1692537752839947169[63] = 0;
   out_1692537752839947169[64] = 0;
   out_1692537752839947169[65] = 0;
}
void h_33(double *state, double *unused, double *out_8025325674593916277) {
   out_8025325674593916277[0] = state[16];
   out_8025325674593916277[1] = state[17];
   out_8025325674593916277[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6079819522503361984) {
   out_6079819522503361984[0] = 0;
   out_6079819522503361984[1] = 0;
   out_6079819522503361984[2] = 0;
   out_6079819522503361984[3] = 0;
   out_6079819522503361984[4] = 0;
   out_6079819522503361984[5] = 0;
   out_6079819522503361984[6] = 0;
   out_6079819522503361984[7] = 0;
   out_6079819522503361984[8] = 0;
   out_6079819522503361984[9] = 0;
   out_6079819522503361984[10] = 0;
   out_6079819522503361984[11] = 0;
   out_6079819522503361984[12] = 0;
   out_6079819522503361984[13] = 0;
   out_6079819522503361984[14] = 0;
   out_6079819522503361984[15] = 0;
   out_6079819522503361984[16] = 1;
   out_6079819522503361984[17] = 0;
   out_6079819522503361984[18] = 0;
   out_6079819522503361984[19] = 0;
   out_6079819522503361984[20] = 0;
   out_6079819522503361984[21] = 0;
   out_6079819522503361984[22] = 0;
   out_6079819522503361984[23] = 0;
   out_6079819522503361984[24] = 0;
   out_6079819522503361984[25] = 0;
   out_6079819522503361984[26] = 0;
   out_6079819522503361984[27] = 0;
   out_6079819522503361984[28] = 0;
   out_6079819522503361984[29] = 0;
   out_6079819522503361984[30] = 0;
   out_6079819522503361984[31] = 0;
   out_6079819522503361984[32] = 0;
   out_6079819522503361984[33] = 0;
   out_6079819522503361984[34] = 0;
   out_6079819522503361984[35] = 0;
   out_6079819522503361984[36] = 0;
   out_6079819522503361984[37] = 0;
   out_6079819522503361984[38] = 0;
   out_6079819522503361984[39] = 1;
   out_6079819522503361984[40] = 0;
   out_6079819522503361984[41] = 0;
   out_6079819522503361984[42] = 0;
   out_6079819522503361984[43] = 0;
   out_6079819522503361984[44] = 0;
   out_6079819522503361984[45] = 0;
   out_6079819522503361984[46] = 0;
   out_6079819522503361984[47] = 0;
   out_6079819522503361984[48] = 0;
   out_6079819522503361984[49] = 0;
   out_6079819522503361984[50] = 0;
   out_6079819522503361984[51] = 0;
   out_6079819522503361984[52] = 0;
   out_6079819522503361984[53] = 0;
   out_6079819522503361984[54] = 0;
   out_6079819522503361984[55] = 0;
   out_6079819522503361984[56] = 0;
   out_6079819522503361984[57] = 0;
   out_6079819522503361984[58] = 0;
   out_6079819522503361984[59] = 0;
   out_6079819522503361984[60] = 0;
   out_6079819522503361984[61] = 0;
   out_6079819522503361984[62] = 1;
   out_6079819522503361984[63] = 0;
   out_6079819522503361984[64] = 0;
   out_6079819522503361984[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7991541939242048212) {
  H(in_vec, out_7991541939242048212);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9165175297852018824) {
  err_fun(nom_x, delta_x, out_9165175297852018824);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8840460989217465937) {
  inv_err_fun(nom_x, true_x, out_8840460989217465937);
}
void live_H_mod_fun(double *state, double *out_2323407358908051241) {
  H_mod_fun(state, out_2323407358908051241);
}
void live_f_fun(double *state, double dt, double *out_7679666672239594573) {
  f_fun(state,  dt, out_7679666672239594573);
}
void live_F_fun(double *state, double dt, double *out_6529899552359769468) {
  F_fun(state,  dt, out_6529899552359769468);
}
void live_h_4(double *state, double *unused, double *out_3869304003052469608) {
  h_4(state, unused, out_3869304003052469608);
}
void live_H_4(double *state, double *unused, double *out_1451348106210356524) {
  H_4(state, unused, out_1451348106210356524);
}
void live_h_9(double *state, double *unused, double *out_2177619537968645471) {
  h_9(state, unused, out_2177619537968645471);
}
void live_H_9(double *state, double *unused, double *out_1692537752839947169) {
  H_9(state, unused, out_1692537752839947169);
}
void live_h_10(double *state, double *unused, double *out_7579447694123810588) {
  h_10(state, unused, out_7579447694123810588);
}
void live_H_10(double *state, double *unused, double *out_5136410709345790733) {
  H_10(state, unused, out_5136410709345790733);
}
void live_h_12(double *state, double *unused, double *out_1960893434720126470) {
  h_12(state, unused, out_1960893434720126470);
}
void live_H_12(double *state, double *unused, double *out_6470804514242318319) {
  H_12(state, unused, out_6470804514242318319);
}
void live_h_35(double *state, double *unused, double *out_4281719968276769877) {
  h_35(state, unused, out_4281719968276769877);
}
void live_H_35(double *state, double *unused, double *out_9216367546567332028) {
  H_35(state, unused, out_9216367546567332028);
}
void live_h_32(double *state, double *unused, double *out_1943421361472635268) {
  h_32(state, unused, out_1943421361472635268);
}
void live_H_32(double *state, double *unused, double *out_7289538189809210787) {
  H_32(state, unused, out_7289538189809210787);
}
void live_h_13(double *state, double *unused, double *out_1922592336643947345) {
  h_13(state, unused, out_1922592336643947345);
}
void live_H_13(double *state, double *unused, double *out_4134273078622778629) {
  H_13(state, unused, out_4134273078622778629);
}
void live_h_14(double *state, double *unused, double *out_2177619537968645471) {
  h_14(state, unused, out_2177619537968645471);
}
void live_H_14(double *state, double *unused, double *out_1692537752839947169) {
  H_14(state, unused, out_1692537752839947169);
}
void live_h_33(double *state, double *unused, double *out_8025325674593916277) {
  h_33(state, unused, out_8025325674593916277);
}
void live_H_33(double *state, double *unused, double *out_6079819522503361984) {
  H_33(state, unused, out_6079819522503361984);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
