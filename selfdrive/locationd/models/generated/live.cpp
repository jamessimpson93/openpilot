#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3237850412590264377) {
   out_3237850412590264377[0] = 0;
   out_3237850412590264377[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3237850412590264377[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3237850412590264377[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3237850412590264377[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3237850412590264377[5] = -sin(in_vec[1]);
   out_3237850412590264377[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3237850412590264377[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3237850412590264377[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3237850412590264377[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3237850412590264377[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3237850412590264377[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3237850412590264377[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3237850412590264377[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3237850412590264377[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3237850412590264377[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3237850412590264377[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3237850412590264377[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_786389705708054918) {
   out_786389705708054918[0] = delta_x[0] + nom_x[0];
   out_786389705708054918[1] = delta_x[1] + nom_x[1];
   out_786389705708054918[2] = delta_x[2] + nom_x[2];
   out_786389705708054918[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_786389705708054918[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_786389705708054918[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_786389705708054918[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_786389705708054918[7] = delta_x[6] + nom_x[7];
   out_786389705708054918[8] = delta_x[7] + nom_x[8];
   out_786389705708054918[9] = delta_x[8] + nom_x[9];
   out_786389705708054918[10] = delta_x[9] + nom_x[10];
   out_786389705708054918[11] = delta_x[10] + nom_x[11];
   out_786389705708054918[12] = delta_x[11] + nom_x[12];
   out_786389705708054918[13] = delta_x[12] + nom_x[13];
   out_786389705708054918[14] = delta_x[13] + nom_x[14];
   out_786389705708054918[15] = delta_x[14] + nom_x[15];
   out_786389705708054918[16] = delta_x[15] + nom_x[16];
   out_786389705708054918[17] = delta_x[16] + nom_x[17];
   out_786389705708054918[18] = delta_x[17] + nom_x[18];
   out_786389705708054918[19] = delta_x[18] + nom_x[19];
   out_786389705708054918[20] = delta_x[19] + nom_x[20];
   out_786389705708054918[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2061415588084110731) {
   out_2061415588084110731[0] = -nom_x[0] + true_x[0];
   out_2061415588084110731[1] = -nom_x[1] + true_x[1];
   out_2061415588084110731[2] = -nom_x[2] + true_x[2];
   out_2061415588084110731[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2061415588084110731[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2061415588084110731[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2061415588084110731[6] = -nom_x[7] + true_x[7];
   out_2061415588084110731[7] = -nom_x[8] + true_x[8];
   out_2061415588084110731[8] = -nom_x[9] + true_x[9];
   out_2061415588084110731[9] = -nom_x[10] + true_x[10];
   out_2061415588084110731[10] = -nom_x[11] + true_x[11];
   out_2061415588084110731[11] = -nom_x[12] + true_x[12];
   out_2061415588084110731[12] = -nom_x[13] + true_x[13];
   out_2061415588084110731[13] = -nom_x[14] + true_x[14];
   out_2061415588084110731[14] = -nom_x[15] + true_x[15];
   out_2061415588084110731[15] = -nom_x[16] + true_x[16];
   out_2061415588084110731[16] = -nom_x[17] + true_x[17];
   out_2061415588084110731[17] = -nom_x[18] + true_x[18];
   out_2061415588084110731[18] = -nom_x[19] + true_x[19];
   out_2061415588084110731[19] = -nom_x[20] + true_x[20];
   out_2061415588084110731[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8608232382931709485) {
   out_8608232382931709485[0] = 1.0;
   out_8608232382931709485[1] = 0;
   out_8608232382931709485[2] = 0;
   out_8608232382931709485[3] = 0;
   out_8608232382931709485[4] = 0;
   out_8608232382931709485[5] = 0;
   out_8608232382931709485[6] = 0;
   out_8608232382931709485[7] = 0;
   out_8608232382931709485[8] = 0;
   out_8608232382931709485[9] = 0;
   out_8608232382931709485[10] = 0;
   out_8608232382931709485[11] = 0;
   out_8608232382931709485[12] = 0;
   out_8608232382931709485[13] = 0;
   out_8608232382931709485[14] = 0;
   out_8608232382931709485[15] = 0;
   out_8608232382931709485[16] = 0;
   out_8608232382931709485[17] = 0;
   out_8608232382931709485[18] = 0;
   out_8608232382931709485[19] = 0;
   out_8608232382931709485[20] = 0;
   out_8608232382931709485[21] = 0;
   out_8608232382931709485[22] = 1.0;
   out_8608232382931709485[23] = 0;
   out_8608232382931709485[24] = 0;
   out_8608232382931709485[25] = 0;
   out_8608232382931709485[26] = 0;
   out_8608232382931709485[27] = 0;
   out_8608232382931709485[28] = 0;
   out_8608232382931709485[29] = 0;
   out_8608232382931709485[30] = 0;
   out_8608232382931709485[31] = 0;
   out_8608232382931709485[32] = 0;
   out_8608232382931709485[33] = 0;
   out_8608232382931709485[34] = 0;
   out_8608232382931709485[35] = 0;
   out_8608232382931709485[36] = 0;
   out_8608232382931709485[37] = 0;
   out_8608232382931709485[38] = 0;
   out_8608232382931709485[39] = 0;
   out_8608232382931709485[40] = 0;
   out_8608232382931709485[41] = 0;
   out_8608232382931709485[42] = 0;
   out_8608232382931709485[43] = 0;
   out_8608232382931709485[44] = 1.0;
   out_8608232382931709485[45] = 0;
   out_8608232382931709485[46] = 0;
   out_8608232382931709485[47] = 0;
   out_8608232382931709485[48] = 0;
   out_8608232382931709485[49] = 0;
   out_8608232382931709485[50] = 0;
   out_8608232382931709485[51] = 0;
   out_8608232382931709485[52] = 0;
   out_8608232382931709485[53] = 0;
   out_8608232382931709485[54] = 0;
   out_8608232382931709485[55] = 0;
   out_8608232382931709485[56] = 0;
   out_8608232382931709485[57] = 0;
   out_8608232382931709485[58] = 0;
   out_8608232382931709485[59] = 0;
   out_8608232382931709485[60] = 0;
   out_8608232382931709485[61] = 0;
   out_8608232382931709485[62] = 0;
   out_8608232382931709485[63] = 0;
   out_8608232382931709485[64] = 0;
   out_8608232382931709485[65] = 0;
   out_8608232382931709485[66] = -0.5*state[4];
   out_8608232382931709485[67] = -0.5*state[5];
   out_8608232382931709485[68] = -0.5*state[6];
   out_8608232382931709485[69] = 0;
   out_8608232382931709485[70] = 0;
   out_8608232382931709485[71] = 0;
   out_8608232382931709485[72] = 0;
   out_8608232382931709485[73] = 0;
   out_8608232382931709485[74] = 0;
   out_8608232382931709485[75] = 0;
   out_8608232382931709485[76] = 0;
   out_8608232382931709485[77] = 0;
   out_8608232382931709485[78] = 0;
   out_8608232382931709485[79] = 0;
   out_8608232382931709485[80] = 0;
   out_8608232382931709485[81] = 0;
   out_8608232382931709485[82] = 0;
   out_8608232382931709485[83] = 0;
   out_8608232382931709485[84] = 0;
   out_8608232382931709485[85] = 0;
   out_8608232382931709485[86] = 0;
   out_8608232382931709485[87] = 0.5*state[3];
   out_8608232382931709485[88] = 0.5*state[6];
   out_8608232382931709485[89] = -0.5*state[5];
   out_8608232382931709485[90] = 0;
   out_8608232382931709485[91] = 0;
   out_8608232382931709485[92] = 0;
   out_8608232382931709485[93] = 0;
   out_8608232382931709485[94] = 0;
   out_8608232382931709485[95] = 0;
   out_8608232382931709485[96] = 0;
   out_8608232382931709485[97] = 0;
   out_8608232382931709485[98] = 0;
   out_8608232382931709485[99] = 0;
   out_8608232382931709485[100] = 0;
   out_8608232382931709485[101] = 0;
   out_8608232382931709485[102] = 0;
   out_8608232382931709485[103] = 0;
   out_8608232382931709485[104] = 0;
   out_8608232382931709485[105] = 0;
   out_8608232382931709485[106] = 0;
   out_8608232382931709485[107] = 0;
   out_8608232382931709485[108] = -0.5*state[6];
   out_8608232382931709485[109] = 0.5*state[3];
   out_8608232382931709485[110] = 0.5*state[4];
   out_8608232382931709485[111] = 0;
   out_8608232382931709485[112] = 0;
   out_8608232382931709485[113] = 0;
   out_8608232382931709485[114] = 0;
   out_8608232382931709485[115] = 0;
   out_8608232382931709485[116] = 0;
   out_8608232382931709485[117] = 0;
   out_8608232382931709485[118] = 0;
   out_8608232382931709485[119] = 0;
   out_8608232382931709485[120] = 0;
   out_8608232382931709485[121] = 0;
   out_8608232382931709485[122] = 0;
   out_8608232382931709485[123] = 0;
   out_8608232382931709485[124] = 0;
   out_8608232382931709485[125] = 0;
   out_8608232382931709485[126] = 0;
   out_8608232382931709485[127] = 0;
   out_8608232382931709485[128] = 0;
   out_8608232382931709485[129] = 0.5*state[5];
   out_8608232382931709485[130] = -0.5*state[4];
   out_8608232382931709485[131] = 0.5*state[3];
   out_8608232382931709485[132] = 0;
   out_8608232382931709485[133] = 0;
   out_8608232382931709485[134] = 0;
   out_8608232382931709485[135] = 0;
   out_8608232382931709485[136] = 0;
   out_8608232382931709485[137] = 0;
   out_8608232382931709485[138] = 0;
   out_8608232382931709485[139] = 0;
   out_8608232382931709485[140] = 0;
   out_8608232382931709485[141] = 0;
   out_8608232382931709485[142] = 0;
   out_8608232382931709485[143] = 0;
   out_8608232382931709485[144] = 0;
   out_8608232382931709485[145] = 0;
   out_8608232382931709485[146] = 0;
   out_8608232382931709485[147] = 0;
   out_8608232382931709485[148] = 0;
   out_8608232382931709485[149] = 0;
   out_8608232382931709485[150] = 0;
   out_8608232382931709485[151] = 0;
   out_8608232382931709485[152] = 0;
   out_8608232382931709485[153] = 1.0;
   out_8608232382931709485[154] = 0;
   out_8608232382931709485[155] = 0;
   out_8608232382931709485[156] = 0;
   out_8608232382931709485[157] = 0;
   out_8608232382931709485[158] = 0;
   out_8608232382931709485[159] = 0;
   out_8608232382931709485[160] = 0;
   out_8608232382931709485[161] = 0;
   out_8608232382931709485[162] = 0;
   out_8608232382931709485[163] = 0;
   out_8608232382931709485[164] = 0;
   out_8608232382931709485[165] = 0;
   out_8608232382931709485[166] = 0;
   out_8608232382931709485[167] = 0;
   out_8608232382931709485[168] = 0;
   out_8608232382931709485[169] = 0;
   out_8608232382931709485[170] = 0;
   out_8608232382931709485[171] = 0;
   out_8608232382931709485[172] = 0;
   out_8608232382931709485[173] = 0;
   out_8608232382931709485[174] = 0;
   out_8608232382931709485[175] = 1.0;
   out_8608232382931709485[176] = 0;
   out_8608232382931709485[177] = 0;
   out_8608232382931709485[178] = 0;
   out_8608232382931709485[179] = 0;
   out_8608232382931709485[180] = 0;
   out_8608232382931709485[181] = 0;
   out_8608232382931709485[182] = 0;
   out_8608232382931709485[183] = 0;
   out_8608232382931709485[184] = 0;
   out_8608232382931709485[185] = 0;
   out_8608232382931709485[186] = 0;
   out_8608232382931709485[187] = 0;
   out_8608232382931709485[188] = 0;
   out_8608232382931709485[189] = 0;
   out_8608232382931709485[190] = 0;
   out_8608232382931709485[191] = 0;
   out_8608232382931709485[192] = 0;
   out_8608232382931709485[193] = 0;
   out_8608232382931709485[194] = 0;
   out_8608232382931709485[195] = 0;
   out_8608232382931709485[196] = 0;
   out_8608232382931709485[197] = 1.0;
   out_8608232382931709485[198] = 0;
   out_8608232382931709485[199] = 0;
   out_8608232382931709485[200] = 0;
   out_8608232382931709485[201] = 0;
   out_8608232382931709485[202] = 0;
   out_8608232382931709485[203] = 0;
   out_8608232382931709485[204] = 0;
   out_8608232382931709485[205] = 0;
   out_8608232382931709485[206] = 0;
   out_8608232382931709485[207] = 0;
   out_8608232382931709485[208] = 0;
   out_8608232382931709485[209] = 0;
   out_8608232382931709485[210] = 0;
   out_8608232382931709485[211] = 0;
   out_8608232382931709485[212] = 0;
   out_8608232382931709485[213] = 0;
   out_8608232382931709485[214] = 0;
   out_8608232382931709485[215] = 0;
   out_8608232382931709485[216] = 0;
   out_8608232382931709485[217] = 0;
   out_8608232382931709485[218] = 0;
   out_8608232382931709485[219] = 1.0;
   out_8608232382931709485[220] = 0;
   out_8608232382931709485[221] = 0;
   out_8608232382931709485[222] = 0;
   out_8608232382931709485[223] = 0;
   out_8608232382931709485[224] = 0;
   out_8608232382931709485[225] = 0;
   out_8608232382931709485[226] = 0;
   out_8608232382931709485[227] = 0;
   out_8608232382931709485[228] = 0;
   out_8608232382931709485[229] = 0;
   out_8608232382931709485[230] = 0;
   out_8608232382931709485[231] = 0;
   out_8608232382931709485[232] = 0;
   out_8608232382931709485[233] = 0;
   out_8608232382931709485[234] = 0;
   out_8608232382931709485[235] = 0;
   out_8608232382931709485[236] = 0;
   out_8608232382931709485[237] = 0;
   out_8608232382931709485[238] = 0;
   out_8608232382931709485[239] = 0;
   out_8608232382931709485[240] = 0;
   out_8608232382931709485[241] = 1.0;
   out_8608232382931709485[242] = 0;
   out_8608232382931709485[243] = 0;
   out_8608232382931709485[244] = 0;
   out_8608232382931709485[245] = 0;
   out_8608232382931709485[246] = 0;
   out_8608232382931709485[247] = 0;
   out_8608232382931709485[248] = 0;
   out_8608232382931709485[249] = 0;
   out_8608232382931709485[250] = 0;
   out_8608232382931709485[251] = 0;
   out_8608232382931709485[252] = 0;
   out_8608232382931709485[253] = 0;
   out_8608232382931709485[254] = 0;
   out_8608232382931709485[255] = 0;
   out_8608232382931709485[256] = 0;
   out_8608232382931709485[257] = 0;
   out_8608232382931709485[258] = 0;
   out_8608232382931709485[259] = 0;
   out_8608232382931709485[260] = 0;
   out_8608232382931709485[261] = 0;
   out_8608232382931709485[262] = 0;
   out_8608232382931709485[263] = 1.0;
   out_8608232382931709485[264] = 0;
   out_8608232382931709485[265] = 0;
   out_8608232382931709485[266] = 0;
   out_8608232382931709485[267] = 0;
   out_8608232382931709485[268] = 0;
   out_8608232382931709485[269] = 0;
   out_8608232382931709485[270] = 0;
   out_8608232382931709485[271] = 0;
   out_8608232382931709485[272] = 0;
   out_8608232382931709485[273] = 0;
   out_8608232382931709485[274] = 0;
   out_8608232382931709485[275] = 0;
   out_8608232382931709485[276] = 0;
   out_8608232382931709485[277] = 0;
   out_8608232382931709485[278] = 0;
   out_8608232382931709485[279] = 0;
   out_8608232382931709485[280] = 0;
   out_8608232382931709485[281] = 0;
   out_8608232382931709485[282] = 0;
   out_8608232382931709485[283] = 0;
   out_8608232382931709485[284] = 0;
   out_8608232382931709485[285] = 1.0;
   out_8608232382931709485[286] = 0;
   out_8608232382931709485[287] = 0;
   out_8608232382931709485[288] = 0;
   out_8608232382931709485[289] = 0;
   out_8608232382931709485[290] = 0;
   out_8608232382931709485[291] = 0;
   out_8608232382931709485[292] = 0;
   out_8608232382931709485[293] = 0;
   out_8608232382931709485[294] = 0;
   out_8608232382931709485[295] = 0;
   out_8608232382931709485[296] = 0;
   out_8608232382931709485[297] = 0;
   out_8608232382931709485[298] = 0;
   out_8608232382931709485[299] = 0;
   out_8608232382931709485[300] = 0;
   out_8608232382931709485[301] = 0;
   out_8608232382931709485[302] = 0;
   out_8608232382931709485[303] = 0;
   out_8608232382931709485[304] = 0;
   out_8608232382931709485[305] = 0;
   out_8608232382931709485[306] = 0;
   out_8608232382931709485[307] = 1.0;
   out_8608232382931709485[308] = 0;
   out_8608232382931709485[309] = 0;
   out_8608232382931709485[310] = 0;
   out_8608232382931709485[311] = 0;
   out_8608232382931709485[312] = 0;
   out_8608232382931709485[313] = 0;
   out_8608232382931709485[314] = 0;
   out_8608232382931709485[315] = 0;
   out_8608232382931709485[316] = 0;
   out_8608232382931709485[317] = 0;
   out_8608232382931709485[318] = 0;
   out_8608232382931709485[319] = 0;
   out_8608232382931709485[320] = 0;
   out_8608232382931709485[321] = 0;
   out_8608232382931709485[322] = 0;
   out_8608232382931709485[323] = 0;
   out_8608232382931709485[324] = 0;
   out_8608232382931709485[325] = 0;
   out_8608232382931709485[326] = 0;
   out_8608232382931709485[327] = 0;
   out_8608232382931709485[328] = 0;
   out_8608232382931709485[329] = 1.0;
   out_8608232382931709485[330] = 0;
   out_8608232382931709485[331] = 0;
   out_8608232382931709485[332] = 0;
   out_8608232382931709485[333] = 0;
   out_8608232382931709485[334] = 0;
   out_8608232382931709485[335] = 0;
   out_8608232382931709485[336] = 0;
   out_8608232382931709485[337] = 0;
   out_8608232382931709485[338] = 0;
   out_8608232382931709485[339] = 0;
   out_8608232382931709485[340] = 0;
   out_8608232382931709485[341] = 0;
   out_8608232382931709485[342] = 0;
   out_8608232382931709485[343] = 0;
   out_8608232382931709485[344] = 0;
   out_8608232382931709485[345] = 0;
   out_8608232382931709485[346] = 0;
   out_8608232382931709485[347] = 0;
   out_8608232382931709485[348] = 0;
   out_8608232382931709485[349] = 0;
   out_8608232382931709485[350] = 0;
   out_8608232382931709485[351] = 1.0;
   out_8608232382931709485[352] = 0;
   out_8608232382931709485[353] = 0;
   out_8608232382931709485[354] = 0;
   out_8608232382931709485[355] = 0;
   out_8608232382931709485[356] = 0;
   out_8608232382931709485[357] = 0;
   out_8608232382931709485[358] = 0;
   out_8608232382931709485[359] = 0;
   out_8608232382931709485[360] = 0;
   out_8608232382931709485[361] = 0;
   out_8608232382931709485[362] = 0;
   out_8608232382931709485[363] = 0;
   out_8608232382931709485[364] = 0;
   out_8608232382931709485[365] = 0;
   out_8608232382931709485[366] = 0;
   out_8608232382931709485[367] = 0;
   out_8608232382931709485[368] = 0;
   out_8608232382931709485[369] = 0;
   out_8608232382931709485[370] = 0;
   out_8608232382931709485[371] = 0;
   out_8608232382931709485[372] = 0;
   out_8608232382931709485[373] = 1.0;
   out_8608232382931709485[374] = 0;
   out_8608232382931709485[375] = 0;
   out_8608232382931709485[376] = 0;
   out_8608232382931709485[377] = 0;
   out_8608232382931709485[378] = 0;
   out_8608232382931709485[379] = 0;
   out_8608232382931709485[380] = 0;
   out_8608232382931709485[381] = 0;
   out_8608232382931709485[382] = 0;
   out_8608232382931709485[383] = 0;
   out_8608232382931709485[384] = 0;
   out_8608232382931709485[385] = 0;
   out_8608232382931709485[386] = 0;
   out_8608232382931709485[387] = 0;
   out_8608232382931709485[388] = 0;
   out_8608232382931709485[389] = 0;
   out_8608232382931709485[390] = 0;
   out_8608232382931709485[391] = 0;
   out_8608232382931709485[392] = 0;
   out_8608232382931709485[393] = 0;
   out_8608232382931709485[394] = 0;
   out_8608232382931709485[395] = 1.0;
   out_8608232382931709485[396] = 0;
   out_8608232382931709485[397] = 0;
   out_8608232382931709485[398] = 0;
   out_8608232382931709485[399] = 0;
   out_8608232382931709485[400] = 0;
   out_8608232382931709485[401] = 0;
   out_8608232382931709485[402] = 0;
   out_8608232382931709485[403] = 0;
   out_8608232382931709485[404] = 0;
   out_8608232382931709485[405] = 0;
   out_8608232382931709485[406] = 0;
   out_8608232382931709485[407] = 0;
   out_8608232382931709485[408] = 0;
   out_8608232382931709485[409] = 0;
   out_8608232382931709485[410] = 0;
   out_8608232382931709485[411] = 0;
   out_8608232382931709485[412] = 0;
   out_8608232382931709485[413] = 0;
   out_8608232382931709485[414] = 0;
   out_8608232382931709485[415] = 0;
   out_8608232382931709485[416] = 0;
   out_8608232382931709485[417] = 1.0;
   out_8608232382931709485[418] = 0;
   out_8608232382931709485[419] = 0;
   out_8608232382931709485[420] = 0;
   out_8608232382931709485[421] = 0;
   out_8608232382931709485[422] = 0;
   out_8608232382931709485[423] = 0;
   out_8608232382931709485[424] = 0;
   out_8608232382931709485[425] = 0;
   out_8608232382931709485[426] = 0;
   out_8608232382931709485[427] = 0;
   out_8608232382931709485[428] = 0;
   out_8608232382931709485[429] = 0;
   out_8608232382931709485[430] = 0;
   out_8608232382931709485[431] = 0;
   out_8608232382931709485[432] = 0;
   out_8608232382931709485[433] = 0;
   out_8608232382931709485[434] = 0;
   out_8608232382931709485[435] = 0;
   out_8608232382931709485[436] = 0;
   out_8608232382931709485[437] = 0;
   out_8608232382931709485[438] = 0;
   out_8608232382931709485[439] = 1.0;
   out_8608232382931709485[440] = 0;
   out_8608232382931709485[441] = 0;
   out_8608232382931709485[442] = 0;
   out_8608232382931709485[443] = 0;
   out_8608232382931709485[444] = 0;
   out_8608232382931709485[445] = 0;
   out_8608232382931709485[446] = 0;
   out_8608232382931709485[447] = 0;
   out_8608232382931709485[448] = 0;
   out_8608232382931709485[449] = 0;
   out_8608232382931709485[450] = 0;
   out_8608232382931709485[451] = 0;
   out_8608232382931709485[452] = 0;
   out_8608232382931709485[453] = 0;
   out_8608232382931709485[454] = 0;
   out_8608232382931709485[455] = 0;
   out_8608232382931709485[456] = 0;
   out_8608232382931709485[457] = 0;
   out_8608232382931709485[458] = 0;
   out_8608232382931709485[459] = 0;
   out_8608232382931709485[460] = 0;
   out_8608232382931709485[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4785434985982575598) {
   out_4785434985982575598[0] = dt*state[7] + state[0];
   out_4785434985982575598[1] = dt*state[8] + state[1];
   out_4785434985982575598[2] = dt*state[9] + state[2];
   out_4785434985982575598[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4785434985982575598[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4785434985982575598[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4785434985982575598[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4785434985982575598[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4785434985982575598[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4785434985982575598[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4785434985982575598[10] = state[10];
   out_4785434985982575598[11] = state[11];
   out_4785434985982575598[12] = state[12];
   out_4785434985982575598[13] = state[13];
   out_4785434985982575598[14] = state[14];
   out_4785434985982575598[15] = state[15];
   out_4785434985982575598[16] = state[16];
   out_4785434985982575598[17] = state[17];
   out_4785434985982575598[18] = state[18];
   out_4785434985982575598[19] = state[19];
   out_4785434985982575598[20] = state[20];
   out_4785434985982575598[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1171459914458974777) {
   out_1171459914458974777[0] = 1;
   out_1171459914458974777[1] = 0;
   out_1171459914458974777[2] = 0;
   out_1171459914458974777[3] = 0;
   out_1171459914458974777[4] = 0;
   out_1171459914458974777[5] = 0;
   out_1171459914458974777[6] = dt;
   out_1171459914458974777[7] = 0;
   out_1171459914458974777[8] = 0;
   out_1171459914458974777[9] = 0;
   out_1171459914458974777[10] = 0;
   out_1171459914458974777[11] = 0;
   out_1171459914458974777[12] = 0;
   out_1171459914458974777[13] = 0;
   out_1171459914458974777[14] = 0;
   out_1171459914458974777[15] = 0;
   out_1171459914458974777[16] = 0;
   out_1171459914458974777[17] = 0;
   out_1171459914458974777[18] = 0;
   out_1171459914458974777[19] = 0;
   out_1171459914458974777[20] = 0;
   out_1171459914458974777[21] = 0;
   out_1171459914458974777[22] = 1;
   out_1171459914458974777[23] = 0;
   out_1171459914458974777[24] = 0;
   out_1171459914458974777[25] = 0;
   out_1171459914458974777[26] = 0;
   out_1171459914458974777[27] = 0;
   out_1171459914458974777[28] = dt;
   out_1171459914458974777[29] = 0;
   out_1171459914458974777[30] = 0;
   out_1171459914458974777[31] = 0;
   out_1171459914458974777[32] = 0;
   out_1171459914458974777[33] = 0;
   out_1171459914458974777[34] = 0;
   out_1171459914458974777[35] = 0;
   out_1171459914458974777[36] = 0;
   out_1171459914458974777[37] = 0;
   out_1171459914458974777[38] = 0;
   out_1171459914458974777[39] = 0;
   out_1171459914458974777[40] = 0;
   out_1171459914458974777[41] = 0;
   out_1171459914458974777[42] = 0;
   out_1171459914458974777[43] = 0;
   out_1171459914458974777[44] = 1;
   out_1171459914458974777[45] = 0;
   out_1171459914458974777[46] = 0;
   out_1171459914458974777[47] = 0;
   out_1171459914458974777[48] = 0;
   out_1171459914458974777[49] = 0;
   out_1171459914458974777[50] = dt;
   out_1171459914458974777[51] = 0;
   out_1171459914458974777[52] = 0;
   out_1171459914458974777[53] = 0;
   out_1171459914458974777[54] = 0;
   out_1171459914458974777[55] = 0;
   out_1171459914458974777[56] = 0;
   out_1171459914458974777[57] = 0;
   out_1171459914458974777[58] = 0;
   out_1171459914458974777[59] = 0;
   out_1171459914458974777[60] = 0;
   out_1171459914458974777[61] = 0;
   out_1171459914458974777[62] = 0;
   out_1171459914458974777[63] = 0;
   out_1171459914458974777[64] = 0;
   out_1171459914458974777[65] = 0;
   out_1171459914458974777[66] = 1;
   out_1171459914458974777[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1171459914458974777[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1171459914458974777[69] = 0;
   out_1171459914458974777[70] = 0;
   out_1171459914458974777[71] = 0;
   out_1171459914458974777[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1171459914458974777[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171459914458974777[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171459914458974777[75] = 0;
   out_1171459914458974777[76] = 0;
   out_1171459914458974777[77] = 0;
   out_1171459914458974777[78] = 0;
   out_1171459914458974777[79] = 0;
   out_1171459914458974777[80] = 0;
   out_1171459914458974777[81] = 0;
   out_1171459914458974777[82] = 0;
   out_1171459914458974777[83] = 0;
   out_1171459914458974777[84] = 0;
   out_1171459914458974777[85] = 0;
   out_1171459914458974777[86] = 0;
   out_1171459914458974777[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1171459914458974777[88] = 1;
   out_1171459914458974777[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1171459914458974777[90] = 0;
   out_1171459914458974777[91] = 0;
   out_1171459914458974777[92] = 0;
   out_1171459914458974777[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171459914458974777[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1171459914458974777[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171459914458974777[96] = 0;
   out_1171459914458974777[97] = 0;
   out_1171459914458974777[98] = 0;
   out_1171459914458974777[99] = 0;
   out_1171459914458974777[100] = 0;
   out_1171459914458974777[101] = 0;
   out_1171459914458974777[102] = 0;
   out_1171459914458974777[103] = 0;
   out_1171459914458974777[104] = 0;
   out_1171459914458974777[105] = 0;
   out_1171459914458974777[106] = 0;
   out_1171459914458974777[107] = 0;
   out_1171459914458974777[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1171459914458974777[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1171459914458974777[110] = 1;
   out_1171459914458974777[111] = 0;
   out_1171459914458974777[112] = 0;
   out_1171459914458974777[113] = 0;
   out_1171459914458974777[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171459914458974777[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171459914458974777[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1171459914458974777[117] = 0;
   out_1171459914458974777[118] = 0;
   out_1171459914458974777[119] = 0;
   out_1171459914458974777[120] = 0;
   out_1171459914458974777[121] = 0;
   out_1171459914458974777[122] = 0;
   out_1171459914458974777[123] = 0;
   out_1171459914458974777[124] = 0;
   out_1171459914458974777[125] = 0;
   out_1171459914458974777[126] = 0;
   out_1171459914458974777[127] = 0;
   out_1171459914458974777[128] = 0;
   out_1171459914458974777[129] = 0;
   out_1171459914458974777[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1171459914458974777[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1171459914458974777[132] = 1;
   out_1171459914458974777[133] = 0;
   out_1171459914458974777[134] = 0;
   out_1171459914458974777[135] = 0;
   out_1171459914458974777[136] = 0;
   out_1171459914458974777[137] = 0;
   out_1171459914458974777[138] = 0;
   out_1171459914458974777[139] = 0;
   out_1171459914458974777[140] = 0;
   out_1171459914458974777[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1171459914458974777[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171459914458974777[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171459914458974777[144] = 0;
   out_1171459914458974777[145] = 0;
   out_1171459914458974777[146] = 0;
   out_1171459914458974777[147] = 0;
   out_1171459914458974777[148] = 0;
   out_1171459914458974777[149] = 0;
   out_1171459914458974777[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1171459914458974777[151] = 0;
   out_1171459914458974777[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1171459914458974777[153] = 0;
   out_1171459914458974777[154] = 1;
   out_1171459914458974777[155] = 0;
   out_1171459914458974777[156] = 0;
   out_1171459914458974777[157] = 0;
   out_1171459914458974777[158] = 0;
   out_1171459914458974777[159] = 0;
   out_1171459914458974777[160] = 0;
   out_1171459914458974777[161] = 0;
   out_1171459914458974777[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171459914458974777[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1171459914458974777[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171459914458974777[165] = 0;
   out_1171459914458974777[166] = 0;
   out_1171459914458974777[167] = 0;
   out_1171459914458974777[168] = 0;
   out_1171459914458974777[169] = 0;
   out_1171459914458974777[170] = 0;
   out_1171459914458974777[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1171459914458974777[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1171459914458974777[173] = 0;
   out_1171459914458974777[174] = 0;
   out_1171459914458974777[175] = 0;
   out_1171459914458974777[176] = 1;
   out_1171459914458974777[177] = 0;
   out_1171459914458974777[178] = 0;
   out_1171459914458974777[179] = 0;
   out_1171459914458974777[180] = 0;
   out_1171459914458974777[181] = 0;
   out_1171459914458974777[182] = 0;
   out_1171459914458974777[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171459914458974777[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171459914458974777[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1171459914458974777[186] = 0;
   out_1171459914458974777[187] = 0;
   out_1171459914458974777[188] = 0;
   out_1171459914458974777[189] = 0;
   out_1171459914458974777[190] = 0;
   out_1171459914458974777[191] = 0;
   out_1171459914458974777[192] = 0;
   out_1171459914458974777[193] = 0;
   out_1171459914458974777[194] = 0;
   out_1171459914458974777[195] = 0;
   out_1171459914458974777[196] = 0;
   out_1171459914458974777[197] = 0;
   out_1171459914458974777[198] = 1;
   out_1171459914458974777[199] = 0;
   out_1171459914458974777[200] = 0;
   out_1171459914458974777[201] = 0;
   out_1171459914458974777[202] = 0;
   out_1171459914458974777[203] = 0;
   out_1171459914458974777[204] = 0;
   out_1171459914458974777[205] = 0;
   out_1171459914458974777[206] = 0;
   out_1171459914458974777[207] = 0;
   out_1171459914458974777[208] = 0;
   out_1171459914458974777[209] = 0;
   out_1171459914458974777[210] = 0;
   out_1171459914458974777[211] = 0;
   out_1171459914458974777[212] = 0;
   out_1171459914458974777[213] = 0;
   out_1171459914458974777[214] = 0;
   out_1171459914458974777[215] = 0;
   out_1171459914458974777[216] = 0;
   out_1171459914458974777[217] = 0;
   out_1171459914458974777[218] = 0;
   out_1171459914458974777[219] = 0;
   out_1171459914458974777[220] = 1;
   out_1171459914458974777[221] = 0;
   out_1171459914458974777[222] = 0;
   out_1171459914458974777[223] = 0;
   out_1171459914458974777[224] = 0;
   out_1171459914458974777[225] = 0;
   out_1171459914458974777[226] = 0;
   out_1171459914458974777[227] = 0;
   out_1171459914458974777[228] = 0;
   out_1171459914458974777[229] = 0;
   out_1171459914458974777[230] = 0;
   out_1171459914458974777[231] = 0;
   out_1171459914458974777[232] = 0;
   out_1171459914458974777[233] = 0;
   out_1171459914458974777[234] = 0;
   out_1171459914458974777[235] = 0;
   out_1171459914458974777[236] = 0;
   out_1171459914458974777[237] = 0;
   out_1171459914458974777[238] = 0;
   out_1171459914458974777[239] = 0;
   out_1171459914458974777[240] = 0;
   out_1171459914458974777[241] = 0;
   out_1171459914458974777[242] = 1;
   out_1171459914458974777[243] = 0;
   out_1171459914458974777[244] = 0;
   out_1171459914458974777[245] = 0;
   out_1171459914458974777[246] = 0;
   out_1171459914458974777[247] = 0;
   out_1171459914458974777[248] = 0;
   out_1171459914458974777[249] = 0;
   out_1171459914458974777[250] = 0;
   out_1171459914458974777[251] = 0;
   out_1171459914458974777[252] = 0;
   out_1171459914458974777[253] = 0;
   out_1171459914458974777[254] = 0;
   out_1171459914458974777[255] = 0;
   out_1171459914458974777[256] = 0;
   out_1171459914458974777[257] = 0;
   out_1171459914458974777[258] = 0;
   out_1171459914458974777[259] = 0;
   out_1171459914458974777[260] = 0;
   out_1171459914458974777[261] = 0;
   out_1171459914458974777[262] = 0;
   out_1171459914458974777[263] = 0;
   out_1171459914458974777[264] = 1;
   out_1171459914458974777[265] = 0;
   out_1171459914458974777[266] = 0;
   out_1171459914458974777[267] = 0;
   out_1171459914458974777[268] = 0;
   out_1171459914458974777[269] = 0;
   out_1171459914458974777[270] = 0;
   out_1171459914458974777[271] = 0;
   out_1171459914458974777[272] = 0;
   out_1171459914458974777[273] = 0;
   out_1171459914458974777[274] = 0;
   out_1171459914458974777[275] = 0;
   out_1171459914458974777[276] = 0;
   out_1171459914458974777[277] = 0;
   out_1171459914458974777[278] = 0;
   out_1171459914458974777[279] = 0;
   out_1171459914458974777[280] = 0;
   out_1171459914458974777[281] = 0;
   out_1171459914458974777[282] = 0;
   out_1171459914458974777[283] = 0;
   out_1171459914458974777[284] = 0;
   out_1171459914458974777[285] = 0;
   out_1171459914458974777[286] = 1;
   out_1171459914458974777[287] = 0;
   out_1171459914458974777[288] = 0;
   out_1171459914458974777[289] = 0;
   out_1171459914458974777[290] = 0;
   out_1171459914458974777[291] = 0;
   out_1171459914458974777[292] = 0;
   out_1171459914458974777[293] = 0;
   out_1171459914458974777[294] = 0;
   out_1171459914458974777[295] = 0;
   out_1171459914458974777[296] = 0;
   out_1171459914458974777[297] = 0;
   out_1171459914458974777[298] = 0;
   out_1171459914458974777[299] = 0;
   out_1171459914458974777[300] = 0;
   out_1171459914458974777[301] = 0;
   out_1171459914458974777[302] = 0;
   out_1171459914458974777[303] = 0;
   out_1171459914458974777[304] = 0;
   out_1171459914458974777[305] = 0;
   out_1171459914458974777[306] = 0;
   out_1171459914458974777[307] = 0;
   out_1171459914458974777[308] = 1;
   out_1171459914458974777[309] = 0;
   out_1171459914458974777[310] = 0;
   out_1171459914458974777[311] = 0;
   out_1171459914458974777[312] = 0;
   out_1171459914458974777[313] = 0;
   out_1171459914458974777[314] = 0;
   out_1171459914458974777[315] = 0;
   out_1171459914458974777[316] = 0;
   out_1171459914458974777[317] = 0;
   out_1171459914458974777[318] = 0;
   out_1171459914458974777[319] = 0;
   out_1171459914458974777[320] = 0;
   out_1171459914458974777[321] = 0;
   out_1171459914458974777[322] = 0;
   out_1171459914458974777[323] = 0;
   out_1171459914458974777[324] = 0;
   out_1171459914458974777[325] = 0;
   out_1171459914458974777[326] = 0;
   out_1171459914458974777[327] = 0;
   out_1171459914458974777[328] = 0;
   out_1171459914458974777[329] = 0;
   out_1171459914458974777[330] = 1;
   out_1171459914458974777[331] = 0;
   out_1171459914458974777[332] = 0;
   out_1171459914458974777[333] = 0;
   out_1171459914458974777[334] = 0;
   out_1171459914458974777[335] = 0;
   out_1171459914458974777[336] = 0;
   out_1171459914458974777[337] = 0;
   out_1171459914458974777[338] = 0;
   out_1171459914458974777[339] = 0;
   out_1171459914458974777[340] = 0;
   out_1171459914458974777[341] = 0;
   out_1171459914458974777[342] = 0;
   out_1171459914458974777[343] = 0;
   out_1171459914458974777[344] = 0;
   out_1171459914458974777[345] = 0;
   out_1171459914458974777[346] = 0;
   out_1171459914458974777[347] = 0;
   out_1171459914458974777[348] = 0;
   out_1171459914458974777[349] = 0;
   out_1171459914458974777[350] = 0;
   out_1171459914458974777[351] = 0;
   out_1171459914458974777[352] = 1;
   out_1171459914458974777[353] = 0;
   out_1171459914458974777[354] = 0;
   out_1171459914458974777[355] = 0;
   out_1171459914458974777[356] = 0;
   out_1171459914458974777[357] = 0;
   out_1171459914458974777[358] = 0;
   out_1171459914458974777[359] = 0;
   out_1171459914458974777[360] = 0;
   out_1171459914458974777[361] = 0;
   out_1171459914458974777[362] = 0;
   out_1171459914458974777[363] = 0;
   out_1171459914458974777[364] = 0;
   out_1171459914458974777[365] = 0;
   out_1171459914458974777[366] = 0;
   out_1171459914458974777[367] = 0;
   out_1171459914458974777[368] = 0;
   out_1171459914458974777[369] = 0;
   out_1171459914458974777[370] = 0;
   out_1171459914458974777[371] = 0;
   out_1171459914458974777[372] = 0;
   out_1171459914458974777[373] = 0;
   out_1171459914458974777[374] = 1;
   out_1171459914458974777[375] = 0;
   out_1171459914458974777[376] = 0;
   out_1171459914458974777[377] = 0;
   out_1171459914458974777[378] = 0;
   out_1171459914458974777[379] = 0;
   out_1171459914458974777[380] = 0;
   out_1171459914458974777[381] = 0;
   out_1171459914458974777[382] = 0;
   out_1171459914458974777[383] = 0;
   out_1171459914458974777[384] = 0;
   out_1171459914458974777[385] = 0;
   out_1171459914458974777[386] = 0;
   out_1171459914458974777[387] = 0;
   out_1171459914458974777[388] = 0;
   out_1171459914458974777[389] = 0;
   out_1171459914458974777[390] = 0;
   out_1171459914458974777[391] = 0;
   out_1171459914458974777[392] = 0;
   out_1171459914458974777[393] = 0;
   out_1171459914458974777[394] = 0;
   out_1171459914458974777[395] = 0;
   out_1171459914458974777[396] = 1;
   out_1171459914458974777[397] = 0;
   out_1171459914458974777[398] = 0;
   out_1171459914458974777[399] = 0;
   out_1171459914458974777[400] = 0;
   out_1171459914458974777[401] = 0;
   out_1171459914458974777[402] = 0;
   out_1171459914458974777[403] = 0;
   out_1171459914458974777[404] = 0;
   out_1171459914458974777[405] = 0;
   out_1171459914458974777[406] = 0;
   out_1171459914458974777[407] = 0;
   out_1171459914458974777[408] = 0;
   out_1171459914458974777[409] = 0;
   out_1171459914458974777[410] = 0;
   out_1171459914458974777[411] = 0;
   out_1171459914458974777[412] = 0;
   out_1171459914458974777[413] = 0;
   out_1171459914458974777[414] = 0;
   out_1171459914458974777[415] = 0;
   out_1171459914458974777[416] = 0;
   out_1171459914458974777[417] = 0;
   out_1171459914458974777[418] = 1;
   out_1171459914458974777[419] = 0;
   out_1171459914458974777[420] = 0;
   out_1171459914458974777[421] = 0;
   out_1171459914458974777[422] = 0;
   out_1171459914458974777[423] = 0;
   out_1171459914458974777[424] = 0;
   out_1171459914458974777[425] = 0;
   out_1171459914458974777[426] = 0;
   out_1171459914458974777[427] = 0;
   out_1171459914458974777[428] = 0;
   out_1171459914458974777[429] = 0;
   out_1171459914458974777[430] = 0;
   out_1171459914458974777[431] = 0;
   out_1171459914458974777[432] = 0;
   out_1171459914458974777[433] = 0;
   out_1171459914458974777[434] = 0;
   out_1171459914458974777[435] = 0;
   out_1171459914458974777[436] = 0;
   out_1171459914458974777[437] = 0;
   out_1171459914458974777[438] = 0;
   out_1171459914458974777[439] = 0;
   out_1171459914458974777[440] = 1;
}
void h_4(double *state, double *unused, double *out_5681251961842903636) {
   out_5681251961842903636[0] = state[10] + state[13];
   out_5681251961842903636[1] = state[11] + state[14];
   out_5681251961842903636[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1380979307874200219) {
   out_1380979307874200219[0] = 0;
   out_1380979307874200219[1] = 0;
   out_1380979307874200219[2] = 0;
   out_1380979307874200219[3] = 0;
   out_1380979307874200219[4] = 0;
   out_1380979307874200219[5] = 0;
   out_1380979307874200219[6] = 0;
   out_1380979307874200219[7] = 0;
   out_1380979307874200219[8] = 0;
   out_1380979307874200219[9] = 0;
   out_1380979307874200219[10] = 1;
   out_1380979307874200219[11] = 0;
   out_1380979307874200219[12] = 0;
   out_1380979307874200219[13] = 1;
   out_1380979307874200219[14] = 0;
   out_1380979307874200219[15] = 0;
   out_1380979307874200219[16] = 0;
   out_1380979307874200219[17] = 0;
   out_1380979307874200219[18] = 0;
   out_1380979307874200219[19] = 0;
   out_1380979307874200219[20] = 0;
   out_1380979307874200219[21] = 0;
   out_1380979307874200219[22] = 0;
   out_1380979307874200219[23] = 0;
   out_1380979307874200219[24] = 0;
   out_1380979307874200219[25] = 0;
   out_1380979307874200219[26] = 0;
   out_1380979307874200219[27] = 0;
   out_1380979307874200219[28] = 0;
   out_1380979307874200219[29] = 0;
   out_1380979307874200219[30] = 0;
   out_1380979307874200219[31] = 0;
   out_1380979307874200219[32] = 0;
   out_1380979307874200219[33] = 1;
   out_1380979307874200219[34] = 0;
   out_1380979307874200219[35] = 0;
   out_1380979307874200219[36] = 1;
   out_1380979307874200219[37] = 0;
   out_1380979307874200219[38] = 0;
   out_1380979307874200219[39] = 0;
   out_1380979307874200219[40] = 0;
   out_1380979307874200219[41] = 0;
   out_1380979307874200219[42] = 0;
   out_1380979307874200219[43] = 0;
   out_1380979307874200219[44] = 0;
   out_1380979307874200219[45] = 0;
   out_1380979307874200219[46] = 0;
   out_1380979307874200219[47] = 0;
   out_1380979307874200219[48] = 0;
   out_1380979307874200219[49] = 0;
   out_1380979307874200219[50] = 0;
   out_1380979307874200219[51] = 0;
   out_1380979307874200219[52] = 0;
   out_1380979307874200219[53] = 0;
   out_1380979307874200219[54] = 0;
   out_1380979307874200219[55] = 0;
   out_1380979307874200219[56] = 1;
   out_1380979307874200219[57] = 0;
   out_1380979307874200219[58] = 0;
   out_1380979307874200219[59] = 1;
   out_1380979307874200219[60] = 0;
   out_1380979307874200219[61] = 0;
   out_1380979307874200219[62] = 0;
   out_1380979307874200219[63] = 0;
   out_1380979307874200219[64] = 0;
   out_1380979307874200219[65] = 0;
}
void h_9(double *state, double *unused, double *out_5112082236684918754) {
   out_5112082236684918754[0] = state[10];
   out_5112082236684918754[1] = state[11];
   out_5112082236684918754[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8668198243138647689) {
   out_8668198243138647689[0] = 0;
   out_8668198243138647689[1] = 0;
   out_8668198243138647689[2] = 0;
   out_8668198243138647689[3] = 0;
   out_8668198243138647689[4] = 0;
   out_8668198243138647689[5] = 0;
   out_8668198243138647689[6] = 0;
   out_8668198243138647689[7] = 0;
   out_8668198243138647689[8] = 0;
   out_8668198243138647689[9] = 0;
   out_8668198243138647689[10] = 1;
   out_8668198243138647689[11] = 0;
   out_8668198243138647689[12] = 0;
   out_8668198243138647689[13] = 0;
   out_8668198243138647689[14] = 0;
   out_8668198243138647689[15] = 0;
   out_8668198243138647689[16] = 0;
   out_8668198243138647689[17] = 0;
   out_8668198243138647689[18] = 0;
   out_8668198243138647689[19] = 0;
   out_8668198243138647689[20] = 0;
   out_8668198243138647689[21] = 0;
   out_8668198243138647689[22] = 0;
   out_8668198243138647689[23] = 0;
   out_8668198243138647689[24] = 0;
   out_8668198243138647689[25] = 0;
   out_8668198243138647689[26] = 0;
   out_8668198243138647689[27] = 0;
   out_8668198243138647689[28] = 0;
   out_8668198243138647689[29] = 0;
   out_8668198243138647689[30] = 0;
   out_8668198243138647689[31] = 0;
   out_8668198243138647689[32] = 0;
   out_8668198243138647689[33] = 1;
   out_8668198243138647689[34] = 0;
   out_8668198243138647689[35] = 0;
   out_8668198243138647689[36] = 0;
   out_8668198243138647689[37] = 0;
   out_8668198243138647689[38] = 0;
   out_8668198243138647689[39] = 0;
   out_8668198243138647689[40] = 0;
   out_8668198243138647689[41] = 0;
   out_8668198243138647689[42] = 0;
   out_8668198243138647689[43] = 0;
   out_8668198243138647689[44] = 0;
   out_8668198243138647689[45] = 0;
   out_8668198243138647689[46] = 0;
   out_8668198243138647689[47] = 0;
   out_8668198243138647689[48] = 0;
   out_8668198243138647689[49] = 0;
   out_8668198243138647689[50] = 0;
   out_8668198243138647689[51] = 0;
   out_8668198243138647689[52] = 0;
   out_8668198243138647689[53] = 0;
   out_8668198243138647689[54] = 0;
   out_8668198243138647689[55] = 0;
   out_8668198243138647689[56] = 1;
   out_8668198243138647689[57] = 0;
   out_8668198243138647689[58] = 0;
   out_8668198243138647689[59] = 0;
   out_8668198243138647689[60] = 0;
   out_8668198243138647689[61] = 0;
   out_8668198243138647689[62] = 0;
   out_8668198243138647689[63] = 0;
   out_8668198243138647689[64] = 0;
   out_8668198243138647689[65] = 0;
}
void h_10(double *state, double *unused, double *out_4955041470653423657) {
   out_4955041470653423657[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4955041470653423657[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4955041470653423657[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_17546421107381143) {
   out_17546421107381143[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_17546421107381143[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_17546421107381143[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_17546421107381143[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_17546421107381143[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_17546421107381143[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_17546421107381143[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_17546421107381143[7] = 0;
   out_17546421107381143[8] = 0;
   out_17546421107381143[9] = 0;
   out_17546421107381143[10] = 0;
   out_17546421107381143[11] = 0;
   out_17546421107381143[12] = 0;
   out_17546421107381143[13] = 0;
   out_17546421107381143[14] = 0;
   out_17546421107381143[15] = 0;
   out_17546421107381143[16] = 1;
   out_17546421107381143[17] = 0;
   out_17546421107381143[18] = 0;
   out_17546421107381143[19] = 1;
   out_17546421107381143[20] = 0;
   out_17546421107381143[21] = 0;
   out_17546421107381143[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_17546421107381143[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_17546421107381143[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_17546421107381143[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_17546421107381143[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_17546421107381143[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_17546421107381143[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_17546421107381143[29] = 0;
   out_17546421107381143[30] = 0;
   out_17546421107381143[31] = 0;
   out_17546421107381143[32] = 0;
   out_17546421107381143[33] = 0;
   out_17546421107381143[34] = 0;
   out_17546421107381143[35] = 0;
   out_17546421107381143[36] = 0;
   out_17546421107381143[37] = 0;
   out_17546421107381143[38] = 0;
   out_17546421107381143[39] = 1;
   out_17546421107381143[40] = 0;
   out_17546421107381143[41] = 0;
   out_17546421107381143[42] = 1;
   out_17546421107381143[43] = 0;
   out_17546421107381143[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_17546421107381143[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_17546421107381143[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_17546421107381143[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_17546421107381143[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_17546421107381143[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_17546421107381143[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_17546421107381143[51] = 0;
   out_17546421107381143[52] = 0;
   out_17546421107381143[53] = 0;
   out_17546421107381143[54] = 0;
   out_17546421107381143[55] = 0;
   out_17546421107381143[56] = 0;
   out_17546421107381143[57] = 0;
   out_17546421107381143[58] = 0;
   out_17546421107381143[59] = 0;
   out_17546421107381143[60] = 0;
   out_17546421107381143[61] = 0;
   out_17546421107381143[62] = 1;
   out_17546421107381143[63] = 0;
   out_17546421107381143[64] = 0;
   out_17546421107381143[65] = 1;
}
void h_12(double *state, double *unused, double *out_1905694267703785960) {
   out_1905694267703785960[0] = state[0];
   out_1905694267703785960[1] = state[1];
   out_1905694267703785960[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5000279069168532777) {
   out_5000279069168532777[0] = 1;
   out_5000279069168532777[1] = 0;
   out_5000279069168532777[2] = 0;
   out_5000279069168532777[3] = 0;
   out_5000279069168532777[4] = 0;
   out_5000279069168532777[5] = 0;
   out_5000279069168532777[6] = 0;
   out_5000279069168532777[7] = 0;
   out_5000279069168532777[8] = 0;
   out_5000279069168532777[9] = 0;
   out_5000279069168532777[10] = 0;
   out_5000279069168532777[11] = 0;
   out_5000279069168532777[12] = 0;
   out_5000279069168532777[13] = 0;
   out_5000279069168532777[14] = 0;
   out_5000279069168532777[15] = 0;
   out_5000279069168532777[16] = 0;
   out_5000279069168532777[17] = 0;
   out_5000279069168532777[18] = 0;
   out_5000279069168532777[19] = 0;
   out_5000279069168532777[20] = 0;
   out_5000279069168532777[21] = 0;
   out_5000279069168532777[22] = 0;
   out_5000279069168532777[23] = 1;
   out_5000279069168532777[24] = 0;
   out_5000279069168532777[25] = 0;
   out_5000279069168532777[26] = 0;
   out_5000279069168532777[27] = 0;
   out_5000279069168532777[28] = 0;
   out_5000279069168532777[29] = 0;
   out_5000279069168532777[30] = 0;
   out_5000279069168532777[31] = 0;
   out_5000279069168532777[32] = 0;
   out_5000279069168532777[33] = 0;
   out_5000279069168532777[34] = 0;
   out_5000279069168532777[35] = 0;
   out_5000279069168532777[36] = 0;
   out_5000279069168532777[37] = 0;
   out_5000279069168532777[38] = 0;
   out_5000279069168532777[39] = 0;
   out_5000279069168532777[40] = 0;
   out_5000279069168532777[41] = 0;
   out_5000279069168532777[42] = 0;
   out_5000279069168532777[43] = 0;
   out_5000279069168532777[44] = 0;
   out_5000279069168532777[45] = 0;
   out_5000279069168532777[46] = 1;
   out_5000279069168532777[47] = 0;
   out_5000279069168532777[48] = 0;
   out_5000279069168532777[49] = 0;
   out_5000279069168532777[50] = 0;
   out_5000279069168532777[51] = 0;
   out_5000279069168532777[52] = 0;
   out_5000279069168532777[53] = 0;
   out_5000279069168532777[54] = 0;
   out_5000279069168532777[55] = 0;
   out_5000279069168532777[56] = 0;
   out_5000279069168532777[57] = 0;
   out_5000279069168532777[58] = 0;
   out_5000279069168532777[59] = 0;
   out_5000279069168532777[60] = 0;
   out_5000279069168532777[61] = 0;
   out_5000279069168532777[62] = 0;
   out_5000279069168532777[63] = 0;
   out_5000279069168532777[64] = 0;
   out_5000279069168532777[65] = 0;
}
void h_35(double *state, double *unused, double *out_4899215905558210316) {
   out_4899215905558210316[0] = state[7];
   out_4899215905558210316[1] = state[8];
   out_4899215905558210316[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9145998748231175723) {
   out_9145998748231175723[0] = 0;
   out_9145998748231175723[1] = 0;
   out_9145998748231175723[2] = 0;
   out_9145998748231175723[3] = 0;
   out_9145998748231175723[4] = 0;
   out_9145998748231175723[5] = 0;
   out_9145998748231175723[6] = 0;
   out_9145998748231175723[7] = 1;
   out_9145998748231175723[8] = 0;
   out_9145998748231175723[9] = 0;
   out_9145998748231175723[10] = 0;
   out_9145998748231175723[11] = 0;
   out_9145998748231175723[12] = 0;
   out_9145998748231175723[13] = 0;
   out_9145998748231175723[14] = 0;
   out_9145998748231175723[15] = 0;
   out_9145998748231175723[16] = 0;
   out_9145998748231175723[17] = 0;
   out_9145998748231175723[18] = 0;
   out_9145998748231175723[19] = 0;
   out_9145998748231175723[20] = 0;
   out_9145998748231175723[21] = 0;
   out_9145998748231175723[22] = 0;
   out_9145998748231175723[23] = 0;
   out_9145998748231175723[24] = 0;
   out_9145998748231175723[25] = 0;
   out_9145998748231175723[26] = 0;
   out_9145998748231175723[27] = 0;
   out_9145998748231175723[28] = 0;
   out_9145998748231175723[29] = 0;
   out_9145998748231175723[30] = 1;
   out_9145998748231175723[31] = 0;
   out_9145998748231175723[32] = 0;
   out_9145998748231175723[33] = 0;
   out_9145998748231175723[34] = 0;
   out_9145998748231175723[35] = 0;
   out_9145998748231175723[36] = 0;
   out_9145998748231175723[37] = 0;
   out_9145998748231175723[38] = 0;
   out_9145998748231175723[39] = 0;
   out_9145998748231175723[40] = 0;
   out_9145998748231175723[41] = 0;
   out_9145998748231175723[42] = 0;
   out_9145998748231175723[43] = 0;
   out_9145998748231175723[44] = 0;
   out_9145998748231175723[45] = 0;
   out_9145998748231175723[46] = 0;
   out_9145998748231175723[47] = 0;
   out_9145998748231175723[48] = 0;
   out_9145998748231175723[49] = 0;
   out_9145998748231175723[50] = 0;
   out_9145998748231175723[51] = 0;
   out_9145998748231175723[52] = 0;
   out_9145998748231175723[53] = 1;
   out_9145998748231175723[54] = 0;
   out_9145998748231175723[55] = 0;
   out_9145998748231175723[56] = 0;
   out_9145998748231175723[57] = 0;
   out_9145998748231175723[58] = 0;
   out_9145998748231175723[59] = 0;
   out_9145998748231175723[60] = 0;
   out_9145998748231175723[61] = 0;
   out_9145998748231175723[62] = 0;
   out_9145998748231175723[63] = 0;
   out_9145998748231175723[64] = 0;
   out_9145998748231175723[65] = 0;
}
void h_32(double *state, double *unused, double *out_5135024665828606004) {
   out_5135024665828606004[0] = state[3];
   out_5135024665828606004[1] = state[4];
   out_5135024665828606004[2] = state[5];
   out_5135024665828606004[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8833377053343730695) {
   out_8833377053343730695[0] = 0;
   out_8833377053343730695[1] = 0;
   out_8833377053343730695[2] = 0;
   out_8833377053343730695[3] = 1;
   out_8833377053343730695[4] = 0;
   out_8833377053343730695[5] = 0;
   out_8833377053343730695[6] = 0;
   out_8833377053343730695[7] = 0;
   out_8833377053343730695[8] = 0;
   out_8833377053343730695[9] = 0;
   out_8833377053343730695[10] = 0;
   out_8833377053343730695[11] = 0;
   out_8833377053343730695[12] = 0;
   out_8833377053343730695[13] = 0;
   out_8833377053343730695[14] = 0;
   out_8833377053343730695[15] = 0;
   out_8833377053343730695[16] = 0;
   out_8833377053343730695[17] = 0;
   out_8833377053343730695[18] = 0;
   out_8833377053343730695[19] = 0;
   out_8833377053343730695[20] = 0;
   out_8833377053343730695[21] = 0;
   out_8833377053343730695[22] = 0;
   out_8833377053343730695[23] = 0;
   out_8833377053343730695[24] = 0;
   out_8833377053343730695[25] = 0;
   out_8833377053343730695[26] = 1;
   out_8833377053343730695[27] = 0;
   out_8833377053343730695[28] = 0;
   out_8833377053343730695[29] = 0;
   out_8833377053343730695[30] = 0;
   out_8833377053343730695[31] = 0;
   out_8833377053343730695[32] = 0;
   out_8833377053343730695[33] = 0;
   out_8833377053343730695[34] = 0;
   out_8833377053343730695[35] = 0;
   out_8833377053343730695[36] = 0;
   out_8833377053343730695[37] = 0;
   out_8833377053343730695[38] = 0;
   out_8833377053343730695[39] = 0;
   out_8833377053343730695[40] = 0;
   out_8833377053343730695[41] = 0;
   out_8833377053343730695[42] = 0;
   out_8833377053343730695[43] = 0;
   out_8833377053343730695[44] = 0;
   out_8833377053343730695[45] = 0;
   out_8833377053343730695[46] = 0;
   out_8833377053343730695[47] = 0;
   out_8833377053343730695[48] = 0;
   out_8833377053343730695[49] = 1;
   out_8833377053343730695[50] = 0;
   out_8833377053343730695[51] = 0;
   out_8833377053343730695[52] = 0;
   out_8833377053343730695[53] = 0;
   out_8833377053343730695[54] = 0;
   out_8833377053343730695[55] = 0;
   out_8833377053343730695[56] = 0;
   out_8833377053343730695[57] = 0;
   out_8833377053343730695[58] = 0;
   out_8833377053343730695[59] = 0;
   out_8833377053343730695[60] = 0;
   out_8833377053343730695[61] = 0;
   out_8833377053343730695[62] = 0;
   out_8833377053343730695[63] = 0;
   out_8833377053343730695[64] = 0;
   out_8833377053343730695[65] = 0;
   out_8833377053343730695[66] = 0;
   out_8833377053343730695[67] = 0;
   out_8833377053343730695[68] = 0;
   out_8833377053343730695[69] = 0;
   out_8833377053343730695[70] = 0;
   out_8833377053343730695[71] = 0;
   out_8833377053343730695[72] = 1;
   out_8833377053343730695[73] = 0;
   out_8833377053343730695[74] = 0;
   out_8833377053343730695[75] = 0;
   out_8833377053343730695[76] = 0;
   out_8833377053343730695[77] = 0;
   out_8833377053343730695[78] = 0;
   out_8833377053343730695[79] = 0;
   out_8833377053343730695[80] = 0;
   out_8833377053343730695[81] = 0;
   out_8833377053343730695[82] = 0;
   out_8833377053343730695[83] = 0;
   out_8833377053343730695[84] = 0;
   out_8833377053343730695[85] = 0;
   out_8833377053343730695[86] = 0;
   out_8833377053343730695[87] = 0;
}
void h_13(double *state, double *unused, double *out_2570952339250706509) {
   out_2570952339250706509[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2570952339250706509[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2570952339250706509[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4744662095952477789) {
   out_4744662095952477789[0] = 0;
   out_4744662095952477789[1] = 0;
   out_4744662095952477789[2] = 0;
   out_4744662095952477789[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4744662095952477789[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4744662095952477789[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4744662095952477789[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4744662095952477789[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4744662095952477789[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4744662095952477789[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4744662095952477789[10] = 0;
   out_4744662095952477789[11] = 0;
   out_4744662095952477789[12] = 0;
   out_4744662095952477789[13] = 0;
   out_4744662095952477789[14] = 0;
   out_4744662095952477789[15] = 0;
   out_4744662095952477789[16] = 0;
   out_4744662095952477789[17] = 0;
   out_4744662095952477789[18] = 0;
   out_4744662095952477789[19] = 0;
   out_4744662095952477789[20] = 0;
   out_4744662095952477789[21] = 0;
   out_4744662095952477789[22] = 0;
   out_4744662095952477789[23] = 0;
   out_4744662095952477789[24] = 0;
   out_4744662095952477789[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4744662095952477789[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4744662095952477789[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4744662095952477789[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4744662095952477789[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4744662095952477789[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4744662095952477789[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4744662095952477789[32] = 0;
   out_4744662095952477789[33] = 0;
   out_4744662095952477789[34] = 0;
   out_4744662095952477789[35] = 0;
   out_4744662095952477789[36] = 0;
   out_4744662095952477789[37] = 0;
   out_4744662095952477789[38] = 0;
   out_4744662095952477789[39] = 0;
   out_4744662095952477789[40] = 0;
   out_4744662095952477789[41] = 0;
   out_4744662095952477789[42] = 0;
   out_4744662095952477789[43] = 0;
   out_4744662095952477789[44] = 0;
   out_4744662095952477789[45] = 0;
   out_4744662095952477789[46] = 0;
   out_4744662095952477789[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4744662095952477789[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4744662095952477789[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4744662095952477789[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4744662095952477789[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4744662095952477789[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4744662095952477789[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4744662095952477789[54] = 0;
   out_4744662095952477789[55] = 0;
   out_4744662095952477789[56] = 0;
   out_4744662095952477789[57] = 0;
   out_4744662095952477789[58] = 0;
   out_4744662095952477789[59] = 0;
   out_4744662095952477789[60] = 0;
   out_4744662095952477789[61] = 0;
   out_4744662095952477789[62] = 0;
   out_4744662095952477789[63] = 0;
   out_4744662095952477789[64] = 0;
   out_4744662095952477789[65] = 0;
}
void h_14(double *state, double *unused, double *out_5112082236684918754) {
   out_5112082236684918754[0] = state[10];
   out_5112082236684918754[1] = state[11];
   out_5112082236684918754[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8668198243138647689) {
   out_8668198243138647689[0] = 0;
   out_8668198243138647689[1] = 0;
   out_8668198243138647689[2] = 0;
   out_8668198243138647689[3] = 0;
   out_8668198243138647689[4] = 0;
   out_8668198243138647689[5] = 0;
   out_8668198243138647689[6] = 0;
   out_8668198243138647689[7] = 0;
   out_8668198243138647689[8] = 0;
   out_8668198243138647689[9] = 0;
   out_8668198243138647689[10] = 1;
   out_8668198243138647689[11] = 0;
   out_8668198243138647689[12] = 0;
   out_8668198243138647689[13] = 0;
   out_8668198243138647689[14] = 0;
   out_8668198243138647689[15] = 0;
   out_8668198243138647689[16] = 0;
   out_8668198243138647689[17] = 0;
   out_8668198243138647689[18] = 0;
   out_8668198243138647689[19] = 0;
   out_8668198243138647689[20] = 0;
   out_8668198243138647689[21] = 0;
   out_8668198243138647689[22] = 0;
   out_8668198243138647689[23] = 0;
   out_8668198243138647689[24] = 0;
   out_8668198243138647689[25] = 0;
   out_8668198243138647689[26] = 0;
   out_8668198243138647689[27] = 0;
   out_8668198243138647689[28] = 0;
   out_8668198243138647689[29] = 0;
   out_8668198243138647689[30] = 0;
   out_8668198243138647689[31] = 0;
   out_8668198243138647689[32] = 0;
   out_8668198243138647689[33] = 1;
   out_8668198243138647689[34] = 0;
   out_8668198243138647689[35] = 0;
   out_8668198243138647689[36] = 0;
   out_8668198243138647689[37] = 0;
   out_8668198243138647689[38] = 0;
   out_8668198243138647689[39] = 0;
   out_8668198243138647689[40] = 0;
   out_8668198243138647689[41] = 0;
   out_8668198243138647689[42] = 0;
   out_8668198243138647689[43] = 0;
   out_8668198243138647689[44] = 0;
   out_8668198243138647689[45] = 0;
   out_8668198243138647689[46] = 0;
   out_8668198243138647689[47] = 0;
   out_8668198243138647689[48] = 0;
   out_8668198243138647689[49] = 0;
   out_8668198243138647689[50] = 0;
   out_8668198243138647689[51] = 0;
   out_8668198243138647689[52] = 0;
   out_8668198243138647689[53] = 0;
   out_8668198243138647689[54] = 0;
   out_8668198243138647689[55] = 0;
   out_8668198243138647689[56] = 1;
   out_8668198243138647689[57] = 0;
   out_8668198243138647689[58] = 0;
   out_8668198243138647689[59] = 0;
   out_8668198243138647689[60] = 0;
   out_8668198243138647689[61] = 0;
   out_8668198243138647689[62] = 0;
   out_8668198243138647689[63] = 0;
   out_8668198243138647689[64] = 0;
   out_8668198243138647689[65] = 0;
}
void h_33(double *state, double *unused, double *out_4491193780097901364) {
   out_4491193780097901364[0] = state[16];
   out_4491193780097901364[1] = state[17];
   out_4491193780097901364[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7898198369885665199) {
   out_7898198369885665199[0] = 0;
   out_7898198369885665199[1] = 0;
   out_7898198369885665199[2] = 0;
   out_7898198369885665199[3] = 0;
   out_7898198369885665199[4] = 0;
   out_7898198369885665199[5] = 0;
   out_7898198369885665199[6] = 0;
   out_7898198369885665199[7] = 0;
   out_7898198369885665199[8] = 0;
   out_7898198369885665199[9] = 0;
   out_7898198369885665199[10] = 0;
   out_7898198369885665199[11] = 0;
   out_7898198369885665199[12] = 0;
   out_7898198369885665199[13] = 0;
   out_7898198369885665199[14] = 0;
   out_7898198369885665199[15] = 0;
   out_7898198369885665199[16] = 1;
   out_7898198369885665199[17] = 0;
   out_7898198369885665199[18] = 0;
   out_7898198369885665199[19] = 0;
   out_7898198369885665199[20] = 0;
   out_7898198369885665199[21] = 0;
   out_7898198369885665199[22] = 0;
   out_7898198369885665199[23] = 0;
   out_7898198369885665199[24] = 0;
   out_7898198369885665199[25] = 0;
   out_7898198369885665199[26] = 0;
   out_7898198369885665199[27] = 0;
   out_7898198369885665199[28] = 0;
   out_7898198369885665199[29] = 0;
   out_7898198369885665199[30] = 0;
   out_7898198369885665199[31] = 0;
   out_7898198369885665199[32] = 0;
   out_7898198369885665199[33] = 0;
   out_7898198369885665199[34] = 0;
   out_7898198369885665199[35] = 0;
   out_7898198369885665199[36] = 0;
   out_7898198369885665199[37] = 0;
   out_7898198369885665199[38] = 0;
   out_7898198369885665199[39] = 1;
   out_7898198369885665199[40] = 0;
   out_7898198369885665199[41] = 0;
   out_7898198369885665199[42] = 0;
   out_7898198369885665199[43] = 0;
   out_7898198369885665199[44] = 0;
   out_7898198369885665199[45] = 0;
   out_7898198369885665199[46] = 0;
   out_7898198369885665199[47] = 0;
   out_7898198369885665199[48] = 0;
   out_7898198369885665199[49] = 0;
   out_7898198369885665199[50] = 0;
   out_7898198369885665199[51] = 0;
   out_7898198369885665199[52] = 0;
   out_7898198369885665199[53] = 0;
   out_7898198369885665199[54] = 0;
   out_7898198369885665199[55] = 0;
   out_7898198369885665199[56] = 0;
   out_7898198369885665199[57] = 0;
   out_7898198369885665199[58] = 0;
   out_7898198369885665199[59] = 0;
   out_7898198369885665199[60] = 0;
   out_7898198369885665199[61] = 0;
   out_7898198369885665199[62] = 1;
   out_7898198369885665199[63] = 0;
   out_7898198369885665199[64] = 0;
   out_7898198369885665199[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3237850412590264377) {
  H(in_vec, out_3237850412590264377);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_786389705708054918) {
  err_fun(nom_x, delta_x, out_786389705708054918);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2061415588084110731) {
  inv_err_fun(nom_x, true_x, out_2061415588084110731);
}
void live_H_mod_fun(double *state, double *out_8608232382931709485) {
  H_mod_fun(state, out_8608232382931709485);
}
void live_f_fun(double *state, double dt, double *out_4785434985982575598) {
  f_fun(state,  dt, out_4785434985982575598);
}
void live_F_fun(double *state, double dt, double *out_1171459914458974777) {
  F_fun(state,  dt, out_1171459914458974777);
}
void live_h_4(double *state, double *unused, double *out_5681251961842903636) {
  h_4(state, unused, out_5681251961842903636);
}
void live_H_4(double *state, double *unused, double *out_1380979307874200219) {
  H_4(state, unused, out_1380979307874200219);
}
void live_h_9(double *state, double *unused, double *out_5112082236684918754) {
  h_9(state, unused, out_5112082236684918754);
}
void live_H_9(double *state, double *unused, double *out_8668198243138647689) {
  H_9(state, unused, out_8668198243138647689);
}
void live_h_10(double *state, double *unused, double *out_4955041470653423657) {
  h_10(state, unused, out_4955041470653423657);
}
void live_H_10(double *state, double *unused, double *out_17546421107381143) {
  H_10(state, unused, out_17546421107381143);
}
void live_h_12(double *state, double *unused, double *out_1905694267703785960) {
  h_12(state, unused, out_1905694267703785960);
}
void live_H_12(double *state, double *unused, double *out_5000279069168532777) {
  H_12(state, unused, out_5000279069168532777);
}
void live_h_35(double *state, double *unused, double *out_4899215905558210316) {
  h_35(state, unused, out_4899215905558210316);
}
void live_H_35(double *state, double *unused, double *out_9145998748231175723) {
  H_35(state, unused, out_9145998748231175723);
}
void live_h_32(double *state, double *unused, double *out_5135024665828606004) {
  h_32(state, unused, out_5135024665828606004);
}
void live_H_32(double *state, double *unused, double *out_8833377053343730695) {
  H_32(state, unused, out_8833377053343730695);
}
void live_h_13(double *state, double *unused, double *out_2570952339250706509) {
  h_13(state, unused, out_2570952339250706509);
}
void live_H_13(double *state, double *unused, double *out_4744662095952477789) {
  H_13(state, unused, out_4744662095952477789);
}
void live_h_14(double *state, double *unused, double *out_5112082236684918754) {
  h_14(state, unused, out_5112082236684918754);
}
void live_H_14(double *state, double *unused, double *out_8668198243138647689) {
  H_14(state, unused, out_8668198243138647689);
}
void live_h_33(double *state, double *unused, double *out_4491193780097901364) {
  h_33(state, unused, out_4491193780097901364);
}
void live_H_33(double *state, double *unused, double *out_7898198369885665199) {
  H_33(state, unused, out_7898198369885665199);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
