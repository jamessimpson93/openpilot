#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4131254223325676384) {
   out_4131254223325676384[0] = 0;
   out_4131254223325676384[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4131254223325676384[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4131254223325676384[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4131254223325676384[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4131254223325676384[5] = -sin(in_vec[1]);
   out_4131254223325676384[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4131254223325676384[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4131254223325676384[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4131254223325676384[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4131254223325676384[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4131254223325676384[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4131254223325676384[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4131254223325676384[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4131254223325676384[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4131254223325676384[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4131254223325676384[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4131254223325676384[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2742659515808312139) {
   out_2742659515808312139[0] = delta_x[0] + nom_x[0];
   out_2742659515808312139[1] = delta_x[1] + nom_x[1];
   out_2742659515808312139[2] = delta_x[2] + nom_x[2];
   out_2742659515808312139[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2742659515808312139[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2742659515808312139[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2742659515808312139[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2742659515808312139[7] = delta_x[6] + nom_x[7];
   out_2742659515808312139[8] = delta_x[7] + nom_x[8];
   out_2742659515808312139[9] = delta_x[8] + nom_x[9];
   out_2742659515808312139[10] = delta_x[9] + nom_x[10];
   out_2742659515808312139[11] = delta_x[10] + nom_x[11];
   out_2742659515808312139[12] = delta_x[11] + nom_x[12];
   out_2742659515808312139[13] = delta_x[12] + nom_x[13];
   out_2742659515808312139[14] = delta_x[13] + nom_x[14];
   out_2742659515808312139[15] = delta_x[14] + nom_x[15];
   out_2742659515808312139[16] = delta_x[15] + nom_x[16];
   out_2742659515808312139[17] = delta_x[16] + nom_x[17];
   out_2742659515808312139[18] = delta_x[17] + nom_x[18];
   out_2742659515808312139[19] = delta_x[18] + nom_x[19];
   out_2742659515808312139[20] = delta_x[19] + nom_x[20];
   out_2742659515808312139[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5409060373077877762) {
   out_5409060373077877762[0] = -nom_x[0] + true_x[0];
   out_5409060373077877762[1] = -nom_x[1] + true_x[1];
   out_5409060373077877762[2] = -nom_x[2] + true_x[2];
   out_5409060373077877762[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5409060373077877762[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5409060373077877762[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5409060373077877762[6] = -nom_x[7] + true_x[7];
   out_5409060373077877762[7] = -nom_x[8] + true_x[8];
   out_5409060373077877762[8] = -nom_x[9] + true_x[9];
   out_5409060373077877762[9] = -nom_x[10] + true_x[10];
   out_5409060373077877762[10] = -nom_x[11] + true_x[11];
   out_5409060373077877762[11] = -nom_x[12] + true_x[12];
   out_5409060373077877762[12] = -nom_x[13] + true_x[13];
   out_5409060373077877762[13] = -nom_x[14] + true_x[14];
   out_5409060373077877762[14] = -nom_x[15] + true_x[15];
   out_5409060373077877762[15] = -nom_x[16] + true_x[16];
   out_5409060373077877762[16] = -nom_x[17] + true_x[17];
   out_5409060373077877762[17] = -nom_x[18] + true_x[18];
   out_5409060373077877762[18] = -nom_x[19] + true_x[19];
   out_5409060373077877762[19] = -nom_x[20] + true_x[20];
   out_5409060373077877762[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4545639670895671074) {
   out_4545639670895671074[0] = 1.0;
   out_4545639670895671074[1] = 0;
   out_4545639670895671074[2] = 0;
   out_4545639670895671074[3] = 0;
   out_4545639670895671074[4] = 0;
   out_4545639670895671074[5] = 0;
   out_4545639670895671074[6] = 0;
   out_4545639670895671074[7] = 0;
   out_4545639670895671074[8] = 0;
   out_4545639670895671074[9] = 0;
   out_4545639670895671074[10] = 0;
   out_4545639670895671074[11] = 0;
   out_4545639670895671074[12] = 0;
   out_4545639670895671074[13] = 0;
   out_4545639670895671074[14] = 0;
   out_4545639670895671074[15] = 0;
   out_4545639670895671074[16] = 0;
   out_4545639670895671074[17] = 0;
   out_4545639670895671074[18] = 0;
   out_4545639670895671074[19] = 0;
   out_4545639670895671074[20] = 0;
   out_4545639670895671074[21] = 0;
   out_4545639670895671074[22] = 1.0;
   out_4545639670895671074[23] = 0;
   out_4545639670895671074[24] = 0;
   out_4545639670895671074[25] = 0;
   out_4545639670895671074[26] = 0;
   out_4545639670895671074[27] = 0;
   out_4545639670895671074[28] = 0;
   out_4545639670895671074[29] = 0;
   out_4545639670895671074[30] = 0;
   out_4545639670895671074[31] = 0;
   out_4545639670895671074[32] = 0;
   out_4545639670895671074[33] = 0;
   out_4545639670895671074[34] = 0;
   out_4545639670895671074[35] = 0;
   out_4545639670895671074[36] = 0;
   out_4545639670895671074[37] = 0;
   out_4545639670895671074[38] = 0;
   out_4545639670895671074[39] = 0;
   out_4545639670895671074[40] = 0;
   out_4545639670895671074[41] = 0;
   out_4545639670895671074[42] = 0;
   out_4545639670895671074[43] = 0;
   out_4545639670895671074[44] = 1.0;
   out_4545639670895671074[45] = 0;
   out_4545639670895671074[46] = 0;
   out_4545639670895671074[47] = 0;
   out_4545639670895671074[48] = 0;
   out_4545639670895671074[49] = 0;
   out_4545639670895671074[50] = 0;
   out_4545639670895671074[51] = 0;
   out_4545639670895671074[52] = 0;
   out_4545639670895671074[53] = 0;
   out_4545639670895671074[54] = 0;
   out_4545639670895671074[55] = 0;
   out_4545639670895671074[56] = 0;
   out_4545639670895671074[57] = 0;
   out_4545639670895671074[58] = 0;
   out_4545639670895671074[59] = 0;
   out_4545639670895671074[60] = 0;
   out_4545639670895671074[61] = 0;
   out_4545639670895671074[62] = 0;
   out_4545639670895671074[63] = 0;
   out_4545639670895671074[64] = 0;
   out_4545639670895671074[65] = 0;
   out_4545639670895671074[66] = -0.5*state[4];
   out_4545639670895671074[67] = -0.5*state[5];
   out_4545639670895671074[68] = -0.5*state[6];
   out_4545639670895671074[69] = 0;
   out_4545639670895671074[70] = 0;
   out_4545639670895671074[71] = 0;
   out_4545639670895671074[72] = 0;
   out_4545639670895671074[73] = 0;
   out_4545639670895671074[74] = 0;
   out_4545639670895671074[75] = 0;
   out_4545639670895671074[76] = 0;
   out_4545639670895671074[77] = 0;
   out_4545639670895671074[78] = 0;
   out_4545639670895671074[79] = 0;
   out_4545639670895671074[80] = 0;
   out_4545639670895671074[81] = 0;
   out_4545639670895671074[82] = 0;
   out_4545639670895671074[83] = 0;
   out_4545639670895671074[84] = 0;
   out_4545639670895671074[85] = 0;
   out_4545639670895671074[86] = 0;
   out_4545639670895671074[87] = 0.5*state[3];
   out_4545639670895671074[88] = 0.5*state[6];
   out_4545639670895671074[89] = -0.5*state[5];
   out_4545639670895671074[90] = 0;
   out_4545639670895671074[91] = 0;
   out_4545639670895671074[92] = 0;
   out_4545639670895671074[93] = 0;
   out_4545639670895671074[94] = 0;
   out_4545639670895671074[95] = 0;
   out_4545639670895671074[96] = 0;
   out_4545639670895671074[97] = 0;
   out_4545639670895671074[98] = 0;
   out_4545639670895671074[99] = 0;
   out_4545639670895671074[100] = 0;
   out_4545639670895671074[101] = 0;
   out_4545639670895671074[102] = 0;
   out_4545639670895671074[103] = 0;
   out_4545639670895671074[104] = 0;
   out_4545639670895671074[105] = 0;
   out_4545639670895671074[106] = 0;
   out_4545639670895671074[107] = 0;
   out_4545639670895671074[108] = -0.5*state[6];
   out_4545639670895671074[109] = 0.5*state[3];
   out_4545639670895671074[110] = 0.5*state[4];
   out_4545639670895671074[111] = 0;
   out_4545639670895671074[112] = 0;
   out_4545639670895671074[113] = 0;
   out_4545639670895671074[114] = 0;
   out_4545639670895671074[115] = 0;
   out_4545639670895671074[116] = 0;
   out_4545639670895671074[117] = 0;
   out_4545639670895671074[118] = 0;
   out_4545639670895671074[119] = 0;
   out_4545639670895671074[120] = 0;
   out_4545639670895671074[121] = 0;
   out_4545639670895671074[122] = 0;
   out_4545639670895671074[123] = 0;
   out_4545639670895671074[124] = 0;
   out_4545639670895671074[125] = 0;
   out_4545639670895671074[126] = 0;
   out_4545639670895671074[127] = 0;
   out_4545639670895671074[128] = 0;
   out_4545639670895671074[129] = 0.5*state[5];
   out_4545639670895671074[130] = -0.5*state[4];
   out_4545639670895671074[131] = 0.5*state[3];
   out_4545639670895671074[132] = 0;
   out_4545639670895671074[133] = 0;
   out_4545639670895671074[134] = 0;
   out_4545639670895671074[135] = 0;
   out_4545639670895671074[136] = 0;
   out_4545639670895671074[137] = 0;
   out_4545639670895671074[138] = 0;
   out_4545639670895671074[139] = 0;
   out_4545639670895671074[140] = 0;
   out_4545639670895671074[141] = 0;
   out_4545639670895671074[142] = 0;
   out_4545639670895671074[143] = 0;
   out_4545639670895671074[144] = 0;
   out_4545639670895671074[145] = 0;
   out_4545639670895671074[146] = 0;
   out_4545639670895671074[147] = 0;
   out_4545639670895671074[148] = 0;
   out_4545639670895671074[149] = 0;
   out_4545639670895671074[150] = 0;
   out_4545639670895671074[151] = 0;
   out_4545639670895671074[152] = 0;
   out_4545639670895671074[153] = 1.0;
   out_4545639670895671074[154] = 0;
   out_4545639670895671074[155] = 0;
   out_4545639670895671074[156] = 0;
   out_4545639670895671074[157] = 0;
   out_4545639670895671074[158] = 0;
   out_4545639670895671074[159] = 0;
   out_4545639670895671074[160] = 0;
   out_4545639670895671074[161] = 0;
   out_4545639670895671074[162] = 0;
   out_4545639670895671074[163] = 0;
   out_4545639670895671074[164] = 0;
   out_4545639670895671074[165] = 0;
   out_4545639670895671074[166] = 0;
   out_4545639670895671074[167] = 0;
   out_4545639670895671074[168] = 0;
   out_4545639670895671074[169] = 0;
   out_4545639670895671074[170] = 0;
   out_4545639670895671074[171] = 0;
   out_4545639670895671074[172] = 0;
   out_4545639670895671074[173] = 0;
   out_4545639670895671074[174] = 0;
   out_4545639670895671074[175] = 1.0;
   out_4545639670895671074[176] = 0;
   out_4545639670895671074[177] = 0;
   out_4545639670895671074[178] = 0;
   out_4545639670895671074[179] = 0;
   out_4545639670895671074[180] = 0;
   out_4545639670895671074[181] = 0;
   out_4545639670895671074[182] = 0;
   out_4545639670895671074[183] = 0;
   out_4545639670895671074[184] = 0;
   out_4545639670895671074[185] = 0;
   out_4545639670895671074[186] = 0;
   out_4545639670895671074[187] = 0;
   out_4545639670895671074[188] = 0;
   out_4545639670895671074[189] = 0;
   out_4545639670895671074[190] = 0;
   out_4545639670895671074[191] = 0;
   out_4545639670895671074[192] = 0;
   out_4545639670895671074[193] = 0;
   out_4545639670895671074[194] = 0;
   out_4545639670895671074[195] = 0;
   out_4545639670895671074[196] = 0;
   out_4545639670895671074[197] = 1.0;
   out_4545639670895671074[198] = 0;
   out_4545639670895671074[199] = 0;
   out_4545639670895671074[200] = 0;
   out_4545639670895671074[201] = 0;
   out_4545639670895671074[202] = 0;
   out_4545639670895671074[203] = 0;
   out_4545639670895671074[204] = 0;
   out_4545639670895671074[205] = 0;
   out_4545639670895671074[206] = 0;
   out_4545639670895671074[207] = 0;
   out_4545639670895671074[208] = 0;
   out_4545639670895671074[209] = 0;
   out_4545639670895671074[210] = 0;
   out_4545639670895671074[211] = 0;
   out_4545639670895671074[212] = 0;
   out_4545639670895671074[213] = 0;
   out_4545639670895671074[214] = 0;
   out_4545639670895671074[215] = 0;
   out_4545639670895671074[216] = 0;
   out_4545639670895671074[217] = 0;
   out_4545639670895671074[218] = 0;
   out_4545639670895671074[219] = 1.0;
   out_4545639670895671074[220] = 0;
   out_4545639670895671074[221] = 0;
   out_4545639670895671074[222] = 0;
   out_4545639670895671074[223] = 0;
   out_4545639670895671074[224] = 0;
   out_4545639670895671074[225] = 0;
   out_4545639670895671074[226] = 0;
   out_4545639670895671074[227] = 0;
   out_4545639670895671074[228] = 0;
   out_4545639670895671074[229] = 0;
   out_4545639670895671074[230] = 0;
   out_4545639670895671074[231] = 0;
   out_4545639670895671074[232] = 0;
   out_4545639670895671074[233] = 0;
   out_4545639670895671074[234] = 0;
   out_4545639670895671074[235] = 0;
   out_4545639670895671074[236] = 0;
   out_4545639670895671074[237] = 0;
   out_4545639670895671074[238] = 0;
   out_4545639670895671074[239] = 0;
   out_4545639670895671074[240] = 0;
   out_4545639670895671074[241] = 1.0;
   out_4545639670895671074[242] = 0;
   out_4545639670895671074[243] = 0;
   out_4545639670895671074[244] = 0;
   out_4545639670895671074[245] = 0;
   out_4545639670895671074[246] = 0;
   out_4545639670895671074[247] = 0;
   out_4545639670895671074[248] = 0;
   out_4545639670895671074[249] = 0;
   out_4545639670895671074[250] = 0;
   out_4545639670895671074[251] = 0;
   out_4545639670895671074[252] = 0;
   out_4545639670895671074[253] = 0;
   out_4545639670895671074[254] = 0;
   out_4545639670895671074[255] = 0;
   out_4545639670895671074[256] = 0;
   out_4545639670895671074[257] = 0;
   out_4545639670895671074[258] = 0;
   out_4545639670895671074[259] = 0;
   out_4545639670895671074[260] = 0;
   out_4545639670895671074[261] = 0;
   out_4545639670895671074[262] = 0;
   out_4545639670895671074[263] = 1.0;
   out_4545639670895671074[264] = 0;
   out_4545639670895671074[265] = 0;
   out_4545639670895671074[266] = 0;
   out_4545639670895671074[267] = 0;
   out_4545639670895671074[268] = 0;
   out_4545639670895671074[269] = 0;
   out_4545639670895671074[270] = 0;
   out_4545639670895671074[271] = 0;
   out_4545639670895671074[272] = 0;
   out_4545639670895671074[273] = 0;
   out_4545639670895671074[274] = 0;
   out_4545639670895671074[275] = 0;
   out_4545639670895671074[276] = 0;
   out_4545639670895671074[277] = 0;
   out_4545639670895671074[278] = 0;
   out_4545639670895671074[279] = 0;
   out_4545639670895671074[280] = 0;
   out_4545639670895671074[281] = 0;
   out_4545639670895671074[282] = 0;
   out_4545639670895671074[283] = 0;
   out_4545639670895671074[284] = 0;
   out_4545639670895671074[285] = 1.0;
   out_4545639670895671074[286] = 0;
   out_4545639670895671074[287] = 0;
   out_4545639670895671074[288] = 0;
   out_4545639670895671074[289] = 0;
   out_4545639670895671074[290] = 0;
   out_4545639670895671074[291] = 0;
   out_4545639670895671074[292] = 0;
   out_4545639670895671074[293] = 0;
   out_4545639670895671074[294] = 0;
   out_4545639670895671074[295] = 0;
   out_4545639670895671074[296] = 0;
   out_4545639670895671074[297] = 0;
   out_4545639670895671074[298] = 0;
   out_4545639670895671074[299] = 0;
   out_4545639670895671074[300] = 0;
   out_4545639670895671074[301] = 0;
   out_4545639670895671074[302] = 0;
   out_4545639670895671074[303] = 0;
   out_4545639670895671074[304] = 0;
   out_4545639670895671074[305] = 0;
   out_4545639670895671074[306] = 0;
   out_4545639670895671074[307] = 1.0;
   out_4545639670895671074[308] = 0;
   out_4545639670895671074[309] = 0;
   out_4545639670895671074[310] = 0;
   out_4545639670895671074[311] = 0;
   out_4545639670895671074[312] = 0;
   out_4545639670895671074[313] = 0;
   out_4545639670895671074[314] = 0;
   out_4545639670895671074[315] = 0;
   out_4545639670895671074[316] = 0;
   out_4545639670895671074[317] = 0;
   out_4545639670895671074[318] = 0;
   out_4545639670895671074[319] = 0;
   out_4545639670895671074[320] = 0;
   out_4545639670895671074[321] = 0;
   out_4545639670895671074[322] = 0;
   out_4545639670895671074[323] = 0;
   out_4545639670895671074[324] = 0;
   out_4545639670895671074[325] = 0;
   out_4545639670895671074[326] = 0;
   out_4545639670895671074[327] = 0;
   out_4545639670895671074[328] = 0;
   out_4545639670895671074[329] = 1.0;
   out_4545639670895671074[330] = 0;
   out_4545639670895671074[331] = 0;
   out_4545639670895671074[332] = 0;
   out_4545639670895671074[333] = 0;
   out_4545639670895671074[334] = 0;
   out_4545639670895671074[335] = 0;
   out_4545639670895671074[336] = 0;
   out_4545639670895671074[337] = 0;
   out_4545639670895671074[338] = 0;
   out_4545639670895671074[339] = 0;
   out_4545639670895671074[340] = 0;
   out_4545639670895671074[341] = 0;
   out_4545639670895671074[342] = 0;
   out_4545639670895671074[343] = 0;
   out_4545639670895671074[344] = 0;
   out_4545639670895671074[345] = 0;
   out_4545639670895671074[346] = 0;
   out_4545639670895671074[347] = 0;
   out_4545639670895671074[348] = 0;
   out_4545639670895671074[349] = 0;
   out_4545639670895671074[350] = 0;
   out_4545639670895671074[351] = 1.0;
   out_4545639670895671074[352] = 0;
   out_4545639670895671074[353] = 0;
   out_4545639670895671074[354] = 0;
   out_4545639670895671074[355] = 0;
   out_4545639670895671074[356] = 0;
   out_4545639670895671074[357] = 0;
   out_4545639670895671074[358] = 0;
   out_4545639670895671074[359] = 0;
   out_4545639670895671074[360] = 0;
   out_4545639670895671074[361] = 0;
   out_4545639670895671074[362] = 0;
   out_4545639670895671074[363] = 0;
   out_4545639670895671074[364] = 0;
   out_4545639670895671074[365] = 0;
   out_4545639670895671074[366] = 0;
   out_4545639670895671074[367] = 0;
   out_4545639670895671074[368] = 0;
   out_4545639670895671074[369] = 0;
   out_4545639670895671074[370] = 0;
   out_4545639670895671074[371] = 0;
   out_4545639670895671074[372] = 0;
   out_4545639670895671074[373] = 1.0;
   out_4545639670895671074[374] = 0;
   out_4545639670895671074[375] = 0;
   out_4545639670895671074[376] = 0;
   out_4545639670895671074[377] = 0;
   out_4545639670895671074[378] = 0;
   out_4545639670895671074[379] = 0;
   out_4545639670895671074[380] = 0;
   out_4545639670895671074[381] = 0;
   out_4545639670895671074[382] = 0;
   out_4545639670895671074[383] = 0;
   out_4545639670895671074[384] = 0;
   out_4545639670895671074[385] = 0;
   out_4545639670895671074[386] = 0;
   out_4545639670895671074[387] = 0;
   out_4545639670895671074[388] = 0;
   out_4545639670895671074[389] = 0;
   out_4545639670895671074[390] = 0;
   out_4545639670895671074[391] = 0;
   out_4545639670895671074[392] = 0;
   out_4545639670895671074[393] = 0;
   out_4545639670895671074[394] = 0;
   out_4545639670895671074[395] = 1.0;
   out_4545639670895671074[396] = 0;
   out_4545639670895671074[397] = 0;
   out_4545639670895671074[398] = 0;
   out_4545639670895671074[399] = 0;
   out_4545639670895671074[400] = 0;
   out_4545639670895671074[401] = 0;
   out_4545639670895671074[402] = 0;
   out_4545639670895671074[403] = 0;
   out_4545639670895671074[404] = 0;
   out_4545639670895671074[405] = 0;
   out_4545639670895671074[406] = 0;
   out_4545639670895671074[407] = 0;
   out_4545639670895671074[408] = 0;
   out_4545639670895671074[409] = 0;
   out_4545639670895671074[410] = 0;
   out_4545639670895671074[411] = 0;
   out_4545639670895671074[412] = 0;
   out_4545639670895671074[413] = 0;
   out_4545639670895671074[414] = 0;
   out_4545639670895671074[415] = 0;
   out_4545639670895671074[416] = 0;
   out_4545639670895671074[417] = 1.0;
   out_4545639670895671074[418] = 0;
   out_4545639670895671074[419] = 0;
   out_4545639670895671074[420] = 0;
   out_4545639670895671074[421] = 0;
   out_4545639670895671074[422] = 0;
   out_4545639670895671074[423] = 0;
   out_4545639670895671074[424] = 0;
   out_4545639670895671074[425] = 0;
   out_4545639670895671074[426] = 0;
   out_4545639670895671074[427] = 0;
   out_4545639670895671074[428] = 0;
   out_4545639670895671074[429] = 0;
   out_4545639670895671074[430] = 0;
   out_4545639670895671074[431] = 0;
   out_4545639670895671074[432] = 0;
   out_4545639670895671074[433] = 0;
   out_4545639670895671074[434] = 0;
   out_4545639670895671074[435] = 0;
   out_4545639670895671074[436] = 0;
   out_4545639670895671074[437] = 0;
   out_4545639670895671074[438] = 0;
   out_4545639670895671074[439] = 1.0;
   out_4545639670895671074[440] = 0;
   out_4545639670895671074[441] = 0;
   out_4545639670895671074[442] = 0;
   out_4545639670895671074[443] = 0;
   out_4545639670895671074[444] = 0;
   out_4545639670895671074[445] = 0;
   out_4545639670895671074[446] = 0;
   out_4545639670895671074[447] = 0;
   out_4545639670895671074[448] = 0;
   out_4545639670895671074[449] = 0;
   out_4545639670895671074[450] = 0;
   out_4545639670895671074[451] = 0;
   out_4545639670895671074[452] = 0;
   out_4545639670895671074[453] = 0;
   out_4545639670895671074[454] = 0;
   out_4545639670895671074[455] = 0;
   out_4545639670895671074[456] = 0;
   out_4545639670895671074[457] = 0;
   out_4545639670895671074[458] = 0;
   out_4545639670895671074[459] = 0;
   out_4545639670895671074[460] = 0;
   out_4545639670895671074[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8720865560414031758) {
   out_8720865560414031758[0] = dt*state[7] + state[0];
   out_8720865560414031758[1] = dt*state[8] + state[1];
   out_8720865560414031758[2] = dt*state[9] + state[2];
   out_8720865560414031758[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8720865560414031758[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8720865560414031758[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8720865560414031758[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8720865560414031758[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8720865560414031758[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8720865560414031758[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8720865560414031758[10] = state[10];
   out_8720865560414031758[11] = state[11];
   out_8720865560414031758[12] = state[12];
   out_8720865560414031758[13] = state[13];
   out_8720865560414031758[14] = state[14];
   out_8720865560414031758[15] = state[15];
   out_8720865560414031758[16] = state[16];
   out_8720865560414031758[17] = state[17];
   out_8720865560414031758[18] = state[18];
   out_8720865560414031758[19] = state[19];
   out_8720865560414031758[20] = state[20];
   out_8720865560414031758[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2018563564658859806) {
   out_2018563564658859806[0] = 1;
   out_2018563564658859806[1] = 0;
   out_2018563564658859806[2] = 0;
   out_2018563564658859806[3] = 0;
   out_2018563564658859806[4] = 0;
   out_2018563564658859806[5] = 0;
   out_2018563564658859806[6] = dt;
   out_2018563564658859806[7] = 0;
   out_2018563564658859806[8] = 0;
   out_2018563564658859806[9] = 0;
   out_2018563564658859806[10] = 0;
   out_2018563564658859806[11] = 0;
   out_2018563564658859806[12] = 0;
   out_2018563564658859806[13] = 0;
   out_2018563564658859806[14] = 0;
   out_2018563564658859806[15] = 0;
   out_2018563564658859806[16] = 0;
   out_2018563564658859806[17] = 0;
   out_2018563564658859806[18] = 0;
   out_2018563564658859806[19] = 0;
   out_2018563564658859806[20] = 0;
   out_2018563564658859806[21] = 0;
   out_2018563564658859806[22] = 1;
   out_2018563564658859806[23] = 0;
   out_2018563564658859806[24] = 0;
   out_2018563564658859806[25] = 0;
   out_2018563564658859806[26] = 0;
   out_2018563564658859806[27] = 0;
   out_2018563564658859806[28] = dt;
   out_2018563564658859806[29] = 0;
   out_2018563564658859806[30] = 0;
   out_2018563564658859806[31] = 0;
   out_2018563564658859806[32] = 0;
   out_2018563564658859806[33] = 0;
   out_2018563564658859806[34] = 0;
   out_2018563564658859806[35] = 0;
   out_2018563564658859806[36] = 0;
   out_2018563564658859806[37] = 0;
   out_2018563564658859806[38] = 0;
   out_2018563564658859806[39] = 0;
   out_2018563564658859806[40] = 0;
   out_2018563564658859806[41] = 0;
   out_2018563564658859806[42] = 0;
   out_2018563564658859806[43] = 0;
   out_2018563564658859806[44] = 1;
   out_2018563564658859806[45] = 0;
   out_2018563564658859806[46] = 0;
   out_2018563564658859806[47] = 0;
   out_2018563564658859806[48] = 0;
   out_2018563564658859806[49] = 0;
   out_2018563564658859806[50] = dt;
   out_2018563564658859806[51] = 0;
   out_2018563564658859806[52] = 0;
   out_2018563564658859806[53] = 0;
   out_2018563564658859806[54] = 0;
   out_2018563564658859806[55] = 0;
   out_2018563564658859806[56] = 0;
   out_2018563564658859806[57] = 0;
   out_2018563564658859806[58] = 0;
   out_2018563564658859806[59] = 0;
   out_2018563564658859806[60] = 0;
   out_2018563564658859806[61] = 0;
   out_2018563564658859806[62] = 0;
   out_2018563564658859806[63] = 0;
   out_2018563564658859806[64] = 0;
   out_2018563564658859806[65] = 0;
   out_2018563564658859806[66] = 1;
   out_2018563564658859806[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2018563564658859806[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2018563564658859806[69] = 0;
   out_2018563564658859806[70] = 0;
   out_2018563564658859806[71] = 0;
   out_2018563564658859806[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2018563564658859806[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2018563564658859806[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2018563564658859806[75] = 0;
   out_2018563564658859806[76] = 0;
   out_2018563564658859806[77] = 0;
   out_2018563564658859806[78] = 0;
   out_2018563564658859806[79] = 0;
   out_2018563564658859806[80] = 0;
   out_2018563564658859806[81] = 0;
   out_2018563564658859806[82] = 0;
   out_2018563564658859806[83] = 0;
   out_2018563564658859806[84] = 0;
   out_2018563564658859806[85] = 0;
   out_2018563564658859806[86] = 0;
   out_2018563564658859806[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2018563564658859806[88] = 1;
   out_2018563564658859806[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2018563564658859806[90] = 0;
   out_2018563564658859806[91] = 0;
   out_2018563564658859806[92] = 0;
   out_2018563564658859806[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2018563564658859806[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2018563564658859806[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2018563564658859806[96] = 0;
   out_2018563564658859806[97] = 0;
   out_2018563564658859806[98] = 0;
   out_2018563564658859806[99] = 0;
   out_2018563564658859806[100] = 0;
   out_2018563564658859806[101] = 0;
   out_2018563564658859806[102] = 0;
   out_2018563564658859806[103] = 0;
   out_2018563564658859806[104] = 0;
   out_2018563564658859806[105] = 0;
   out_2018563564658859806[106] = 0;
   out_2018563564658859806[107] = 0;
   out_2018563564658859806[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2018563564658859806[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2018563564658859806[110] = 1;
   out_2018563564658859806[111] = 0;
   out_2018563564658859806[112] = 0;
   out_2018563564658859806[113] = 0;
   out_2018563564658859806[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2018563564658859806[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2018563564658859806[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2018563564658859806[117] = 0;
   out_2018563564658859806[118] = 0;
   out_2018563564658859806[119] = 0;
   out_2018563564658859806[120] = 0;
   out_2018563564658859806[121] = 0;
   out_2018563564658859806[122] = 0;
   out_2018563564658859806[123] = 0;
   out_2018563564658859806[124] = 0;
   out_2018563564658859806[125] = 0;
   out_2018563564658859806[126] = 0;
   out_2018563564658859806[127] = 0;
   out_2018563564658859806[128] = 0;
   out_2018563564658859806[129] = 0;
   out_2018563564658859806[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2018563564658859806[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2018563564658859806[132] = 1;
   out_2018563564658859806[133] = 0;
   out_2018563564658859806[134] = 0;
   out_2018563564658859806[135] = 0;
   out_2018563564658859806[136] = 0;
   out_2018563564658859806[137] = 0;
   out_2018563564658859806[138] = 0;
   out_2018563564658859806[139] = 0;
   out_2018563564658859806[140] = 0;
   out_2018563564658859806[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2018563564658859806[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2018563564658859806[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2018563564658859806[144] = 0;
   out_2018563564658859806[145] = 0;
   out_2018563564658859806[146] = 0;
   out_2018563564658859806[147] = 0;
   out_2018563564658859806[148] = 0;
   out_2018563564658859806[149] = 0;
   out_2018563564658859806[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2018563564658859806[151] = 0;
   out_2018563564658859806[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2018563564658859806[153] = 0;
   out_2018563564658859806[154] = 1;
   out_2018563564658859806[155] = 0;
   out_2018563564658859806[156] = 0;
   out_2018563564658859806[157] = 0;
   out_2018563564658859806[158] = 0;
   out_2018563564658859806[159] = 0;
   out_2018563564658859806[160] = 0;
   out_2018563564658859806[161] = 0;
   out_2018563564658859806[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2018563564658859806[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2018563564658859806[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2018563564658859806[165] = 0;
   out_2018563564658859806[166] = 0;
   out_2018563564658859806[167] = 0;
   out_2018563564658859806[168] = 0;
   out_2018563564658859806[169] = 0;
   out_2018563564658859806[170] = 0;
   out_2018563564658859806[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2018563564658859806[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2018563564658859806[173] = 0;
   out_2018563564658859806[174] = 0;
   out_2018563564658859806[175] = 0;
   out_2018563564658859806[176] = 1;
   out_2018563564658859806[177] = 0;
   out_2018563564658859806[178] = 0;
   out_2018563564658859806[179] = 0;
   out_2018563564658859806[180] = 0;
   out_2018563564658859806[181] = 0;
   out_2018563564658859806[182] = 0;
   out_2018563564658859806[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2018563564658859806[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2018563564658859806[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2018563564658859806[186] = 0;
   out_2018563564658859806[187] = 0;
   out_2018563564658859806[188] = 0;
   out_2018563564658859806[189] = 0;
   out_2018563564658859806[190] = 0;
   out_2018563564658859806[191] = 0;
   out_2018563564658859806[192] = 0;
   out_2018563564658859806[193] = 0;
   out_2018563564658859806[194] = 0;
   out_2018563564658859806[195] = 0;
   out_2018563564658859806[196] = 0;
   out_2018563564658859806[197] = 0;
   out_2018563564658859806[198] = 1;
   out_2018563564658859806[199] = 0;
   out_2018563564658859806[200] = 0;
   out_2018563564658859806[201] = 0;
   out_2018563564658859806[202] = 0;
   out_2018563564658859806[203] = 0;
   out_2018563564658859806[204] = 0;
   out_2018563564658859806[205] = 0;
   out_2018563564658859806[206] = 0;
   out_2018563564658859806[207] = 0;
   out_2018563564658859806[208] = 0;
   out_2018563564658859806[209] = 0;
   out_2018563564658859806[210] = 0;
   out_2018563564658859806[211] = 0;
   out_2018563564658859806[212] = 0;
   out_2018563564658859806[213] = 0;
   out_2018563564658859806[214] = 0;
   out_2018563564658859806[215] = 0;
   out_2018563564658859806[216] = 0;
   out_2018563564658859806[217] = 0;
   out_2018563564658859806[218] = 0;
   out_2018563564658859806[219] = 0;
   out_2018563564658859806[220] = 1;
   out_2018563564658859806[221] = 0;
   out_2018563564658859806[222] = 0;
   out_2018563564658859806[223] = 0;
   out_2018563564658859806[224] = 0;
   out_2018563564658859806[225] = 0;
   out_2018563564658859806[226] = 0;
   out_2018563564658859806[227] = 0;
   out_2018563564658859806[228] = 0;
   out_2018563564658859806[229] = 0;
   out_2018563564658859806[230] = 0;
   out_2018563564658859806[231] = 0;
   out_2018563564658859806[232] = 0;
   out_2018563564658859806[233] = 0;
   out_2018563564658859806[234] = 0;
   out_2018563564658859806[235] = 0;
   out_2018563564658859806[236] = 0;
   out_2018563564658859806[237] = 0;
   out_2018563564658859806[238] = 0;
   out_2018563564658859806[239] = 0;
   out_2018563564658859806[240] = 0;
   out_2018563564658859806[241] = 0;
   out_2018563564658859806[242] = 1;
   out_2018563564658859806[243] = 0;
   out_2018563564658859806[244] = 0;
   out_2018563564658859806[245] = 0;
   out_2018563564658859806[246] = 0;
   out_2018563564658859806[247] = 0;
   out_2018563564658859806[248] = 0;
   out_2018563564658859806[249] = 0;
   out_2018563564658859806[250] = 0;
   out_2018563564658859806[251] = 0;
   out_2018563564658859806[252] = 0;
   out_2018563564658859806[253] = 0;
   out_2018563564658859806[254] = 0;
   out_2018563564658859806[255] = 0;
   out_2018563564658859806[256] = 0;
   out_2018563564658859806[257] = 0;
   out_2018563564658859806[258] = 0;
   out_2018563564658859806[259] = 0;
   out_2018563564658859806[260] = 0;
   out_2018563564658859806[261] = 0;
   out_2018563564658859806[262] = 0;
   out_2018563564658859806[263] = 0;
   out_2018563564658859806[264] = 1;
   out_2018563564658859806[265] = 0;
   out_2018563564658859806[266] = 0;
   out_2018563564658859806[267] = 0;
   out_2018563564658859806[268] = 0;
   out_2018563564658859806[269] = 0;
   out_2018563564658859806[270] = 0;
   out_2018563564658859806[271] = 0;
   out_2018563564658859806[272] = 0;
   out_2018563564658859806[273] = 0;
   out_2018563564658859806[274] = 0;
   out_2018563564658859806[275] = 0;
   out_2018563564658859806[276] = 0;
   out_2018563564658859806[277] = 0;
   out_2018563564658859806[278] = 0;
   out_2018563564658859806[279] = 0;
   out_2018563564658859806[280] = 0;
   out_2018563564658859806[281] = 0;
   out_2018563564658859806[282] = 0;
   out_2018563564658859806[283] = 0;
   out_2018563564658859806[284] = 0;
   out_2018563564658859806[285] = 0;
   out_2018563564658859806[286] = 1;
   out_2018563564658859806[287] = 0;
   out_2018563564658859806[288] = 0;
   out_2018563564658859806[289] = 0;
   out_2018563564658859806[290] = 0;
   out_2018563564658859806[291] = 0;
   out_2018563564658859806[292] = 0;
   out_2018563564658859806[293] = 0;
   out_2018563564658859806[294] = 0;
   out_2018563564658859806[295] = 0;
   out_2018563564658859806[296] = 0;
   out_2018563564658859806[297] = 0;
   out_2018563564658859806[298] = 0;
   out_2018563564658859806[299] = 0;
   out_2018563564658859806[300] = 0;
   out_2018563564658859806[301] = 0;
   out_2018563564658859806[302] = 0;
   out_2018563564658859806[303] = 0;
   out_2018563564658859806[304] = 0;
   out_2018563564658859806[305] = 0;
   out_2018563564658859806[306] = 0;
   out_2018563564658859806[307] = 0;
   out_2018563564658859806[308] = 1;
   out_2018563564658859806[309] = 0;
   out_2018563564658859806[310] = 0;
   out_2018563564658859806[311] = 0;
   out_2018563564658859806[312] = 0;
   out_2018563564658859806[313] = 0;
   out_2018563564658859806[314] = 0;
   out_2018563564658859806[315] = 0;
   out_2018563564658859806[316] = 0;
   out_2018563564658859806[317] = 0;
   out_2018563564658859806[318] = 0;
   out_2018563564658859806[319] = 0;
   out_2018563564658859806[320] = 0;
   out_2018563564658859806[321] = 0;
   out_2018563564658859806[322] = 0;
   out_2018563564658859806[323] = 0;
   out_2018563564658859806[324] = 0;
   out_2018563564658859806[325] = 0;
   out_2018563564658859806[326] = 0;
   out_2018563564658859806[327] = 0;
   out_2018563564658859806[328] = 0;
   out_2018563564658859806[329] = 0;
   out_2018563564658859806[330] = 1;
   out_2018563564658859806[331] = 0;
   out_2018563564658859806[332] = 0;
   out_2018563564658859806[333] = 0;
   out_2018563564658859806[334] = 0;
   out_2018563564658859806[335] = 0;
   out_2018563564658859806[336] = 0;
   out_2018563564658859806[337] = 0;
   out_2018563564658859806[338] = 0;
   out_2018563564658859806[339] = 0;
   out_2018563564658859806[340] = 0;
   out_2018563564658859806[341] = 0;
   out_2018563564658859806[342] = 0;
   out_2018563564658859806[343] = 0;
   out_2018563564658859806[344] = 0;
   out_2018563564658859806[345] = 0;
   out_2018563564658859806[346] = 0;
   out_2018563564658859806[347] = 0;
   out_2018563564658859806[348] = 0;
   out_2018563564658859806[349] = 0;
   out_2018563564658859806[350] = 0;
   out_2018563564658859806[351] = 0;
   out_2018563564658859806[352] = 1;
   out_2018563564658859806[353] = 0;
   out_2018563564658859806[354] = 0;
   out_2018563564658859806[355] = 0;
   out_2018563564658859806[356] = 0;
   out_2018563564658859806[357] = 0;
   out_2018563564658859806[358] = 0;
   out_2018563564658859806[359] = 0;
   out_2018563564658859806[360] = 0;
   out_2018563564658859806[361] = 0;
   out_2018563564658859806[362] = 0;
   out_2018563564658859806[363] = 0;
   out_2018563564658859806[364] = 0;
   out_2018563564658859806[365] = 0;
   out_2018563564658859806[366] = 0;
   out_2018563564658859806[367] = 0;
   out_2018563564658859806[368] = 0;
   out_2018563564658859806[369] = 0;
   out_2018563564658859806[370] = 0;
   out_2018563564658859806[371] = 0;
   out_2018563564658859806[372] = 0;
   out_2018563564658859806[373] = 0;
   out_2018563564658859806[374] = 1;
   out_2018563564658859806[375] = 0;
   out_2018563564658859806[376] = 0;
   out_2018563564658859806[377] = 0;
   out_2018563564658859806[378] = 0;
   out_2018563564658859806[379] = 0;
   out_2018563564658859806[380] = 0;
   out_2018563564658859806[381] = 0;
   out_2018563564658859806[382] = 0;
   out_2018563564658859806[383] = 0;
   out_2018563564658859806[384] = 0;
   out_2018563564658859806[385] = 0;
   out_2018563564658859806[386] = 0;
   out_2018563564658859806[387] = 0;
   out_2018563564658859806[388] = 0;
   out_2018563564658859806[389] = 0;
   out_2018563564658859806[390] = 0;
   out_2018563564658859806[391] = 0;
   out_2018563564658859806[392] = 0;
   out_2018563564658859806[393] = 0;
   out_2018563564658859806[394] = 0;
   out_2018563564658859806[395] = 0;
   out_2018563564658859806[396] = 1;
   out_2018563564658859806[397] = 0;
   out_2018563564658859806[398] = 0;
   out_2018563564658859806[399] = 0;
   out_2018563564658859806[400] = 0;
   out_2018563564658859806[401] = 0;
   out_2018563564658859806[402] = 0;
   out_2018563564658859806[403] = 0;
   out_2018563564658859806[404] = 0;
   out_2018563564658859806[405] = 0;
   out_2018563564658859806[406] = 0;
   out_2018563564658859806[407] = 0;
   out_2018563564658859806[408] = 0;
   out_2018563564658859806[409] = 0;
   out_2018563564658859806[410] = 0;
   out_2018563564658859806[411] = 0;
   out_2018563564658859806[412] = 0;
   out_2018563564658859806[413] = 0;
   out_2018563564658859806[414] = 0;
   out_2018563564658859806[415] = 0;
   out_2018563564658859806[416] = 0;
   out_2018563564658859806[417] = 0;
   out_2018563564658859806[418] = 1;
   out_2018563564658859806[419] = 0;
   out_2018563564658859806[420] = 0;
   out_2018563564658859806[421] = 0;
   out_2018563564658859806[422] = 0;
   out_2018563564658859806[423] = 0;
   out_2018563564658859806[424] = 0;
   out_2018563564658859806[425] = 0;
   out_2018563564658859806[426] = 0;
   out_2018563564658859806[427] = 0;
   out_2018563564658859806[428] = 0;
   out_2018563564658859806[429] = 0;
   out_2018563564658859806[430] = 0;
   out_2018563564658859806[431] = 0;
   out_2018563564658859806[432] = 0;
   out_2018563564658859806[433] = 0;
   out_2018563564658859806[434] = 0;
   out_2018563564658859806[435] = 0;
   out_2018563564658859806[436] = 0;
   out_2018563564658859806[437] = 0;
   out_2018563564658859806[438] = 0;
   out_2018563564658859806[439] = 0;
   out_2018563564658859806[440] = 1;
}
void h_4(double *state, double *unused, double *out_1216254421693794346) {
   out_1216254421693794346[0] = state[10] + state[13];
   out_1216254421693794346[1] = state[11] + state[14];
   out_1216254421693794346[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2068224320832719797) {
   out_2068224320832719797[0] = 0;
   out_2068224320832719797[1] = 0;
   out_2068224320832719797[2] = 0;
   out_2068224320832719797[3] = 0;
   out_2068224320832719797[4] = 0;
   out_2068224320832719797[5] = 0;
   out_2068224320832719797[6] = 0;
   out_2068224320832719797[7] = 0;
   out_2068224320832719797[8] = 0;
   out_2068224320832719797[9] = 0;
   out_2068224320832719797[10] = 1;
   out_2068224320832719797[11] = 0;
   out_2068224320832719797[12] = 0;
   out_2068224320832719797[13] = 1;
   out_2068224320832719797[14] = 0;
   out_2068224320832719797[15] = 0;
   out_2068224320832719797[16] = 0;
   out_2068224320832719797[17] = 0;
   out_2068224320832719797[18] = 0;
   out_2068224320832719797[19] = 0;
   out_2068224320832719797[20] = 0;
   out_2068224320832719797[21] = 0;
   out_2068224320832719797[22] = 0;
   out_2068224320832719797[23] = 0;
   out_2068224320832719797[24] = 0;
   out_2068224320832719797[25] = 0;
   out_2068224320832719797[26] = 0;
   out_2068224320832719797[27] = 0;
   out_2068224320832719797[28] = 0;
   out_2068224320832719797[29] = 0;
   out_2068224320832719797[30] = 0;
   out_2068224320832719797[31] = 0;
   out_2068224320832719797[32] = 0;
   out_2068224320832719797[33] = 1;
   out_2068224320832719797[34] = 0;
   out_2068224320832719797[35] = 0;
   out_2068224320832719797[36] = 1;
   out_2068224320832719797[37] = 0;
   out_2068224320832719797[38] = 0;
   out_2068224320832719797[39] = 0;
   out_2068224320832719797[40] = 0;
   out_2068224320832719797[41] = 0;
   out_2068224320832719797[42] = 0;
   out_2068224320832719797[43] = 0;
   out_2068224320832719797[44] = 0;
   out_2068224320832719797[45] = 0;
   out_2068224320832719797[46] = 0;
   out_2068224320832719797[47] = 0;
   out_2068224320832719797[48] = 0;
   out_2068224320832719797[49] = 0;
   out_2068224320832719797[50] = 0;
   out_2068224320832719797[51] = 0;
   out_2068224320832719797[52] = 0;
   out_2068224320832719797[53] = 0;
   out_2068224320832719797[54] = 0;
   out_2068224320832719797[55] = 0;
   out_2068224320832719797[56] = 1;
   out_2068224320832719797[57] = 0;
   out_2068224320832719797[58] = 0;
   out_2068224320832719797[59] = 1;
   out_2068224320832719797[60] = 0;
   out_2068224320832719797[61] = 0;
   out_2068224320832719797[62] = 0;
   out_2068224320832719797[63] = 0;
   out_2068224320832719797[64] = 0;
   out_2068224320832719797[65] = 0;
}
void h_9(double *state, double *unused, double *out_7559075047251418560) {
   out_7559075047251418560[0] = state[10];
   out_7559075047251418560[1] = state[11];
   out_7559075047251418560[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1827034674203129152) {
   out_1827034674203129152[0] = 0;
   out_1827034674203129152[1] = 0;
   out_1827034674203129152[2] = 0;
   out_1827034674203129152[3] = 0;
   out_1827034674203129152[4] = 0;
   out_1827034674203129152[5] = 0;
   out_1827034674203129152[6] = 0;
   out_1827034674203129152[7] = 0;
   out_1827034674203129152[8] = 0;
   out_1827034674203129152[9] = 0;
   out_1827034674203129152[10] = 1;
   out_1827034674203129152[11] = 0;
   out_1827034674203129152[12] = 0;
   out_1827034674203129152[13] = 0;
   out_1827034674203129152[14] = 0;
   out_1827034674203129152[15] = 0;
   out_1827034674203129152[16] = 0;
   out_1827034674203129152[17] = 0;
   out_1827034674203129152[18] = 0;
   out_1827034674203129152[19] = 0;
   out_1827034674203129152[20] = 0;
   out_1827034674203129152[21] = 0;
   out_1827034674203129152[22] = 0;
   out_1827034674203129152[23] = 0;
   out_1827034674203129152[24] = 0;
   out_1827034674203129152[25] = 0;
   out_1827034674203129152[26] = 0;
   out_1827034674203129152[27] = 0;
   out_1827034674203129152[28] = 0;
   out_1827034674203129152[29] = 0;
   out_1827034674203129152[30] = 0;
   out_1827034674203129152[31] = 0;
   out_1827034674203129152[32] = 0;
   out_1827034674203129152[33] = 1;
   out_1827034674203129152[34] = 0;
   out_1827034674203129152[35] = 0;
   out_1827034674203129152[36] = 0;
   out_1827034674203129152[37] = 0;
   out_1827034674203129152[38] = 0;
   out_1827034674203129152[39] = 0;
   out_1827034674203129152[40] = 0;
   out_1827034674203129152[41] = 0;
   out_1827034674203129152[42] = 0;
   out_1827034674203129152[43] = 0;
   out_1827034674203129152[44] = 0;
   out_1827034674203129152[45] = 0;
   out_1827034674203129152[46] = 0;
   out_1827034674203129152[47] = 0;
   out_1827034674203129152[48] = 0;
   out_1827034674203129152[49] = 0;
   out_1827034674203129152[50] = 0;
   out_1827034674203129152[51] = 0;
   out_1827034674203129152[52] = 0;
   out_1827034674203129152[53] = 0;
   out_1827034674203129152[54] = 0;
   out_1827034674203129152[55] = 0;
   out_1827034674203129152[56] = 1;
   out_1827034674203129152[57] = 0;
   out_1827034674203129152[58] = 0;
   out_1827034674203129152[59] = 0;
   out_1827034674203129152[60] = 0;
   out_1827034674203129152[61] = 0;
   out_1827034674203129152[62] = 0;
   out_1827034674203129152[63] = 0;
   out_1827034674203129152[64] = 0;
   out_1827034674203129152[65] = 0;
}
void h_10(double *state, double *unused, double *out_5783482280623166038) {
   out_5783482280623166038[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5783482280623166038[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5783482280623166038[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8841027575448190877) {
   out_8841027575448190877[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8841027575448190877[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8841027575448190877[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8841027575448190877[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8841027575448190877[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8841027575448190877[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8841027575448190877[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8841027575448190877[7] = 0;
   out_8841027575448190877[8] = 0;
   out_8841027575448190877[9] = 0;
   out_8841027575448190877[10] = 0;
   out_8841027575448190877[11] = 0;
   out_8841027575448190877[12] = 0;
   out_8841027575448190877[13] = 0;
   out_8841027575448190877[14] = 0;
   out_8841027575448190877[15] = 0;
   out_8841027575448190877[16] = 1;
   out_8841027575448190877[17] = 0;
   out_8841027575448190877[18] = 0;
   out_8841027575448190877[19] = 1;
   out_8841027575448190877[20] = 0;
   out_8841027575448190877[21] = 0;
   out_8841027575448190877[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8841027575448190877[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8841027575448190877[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8841027575448190877[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8841027575448190877[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8841027575448190877[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8841027575448190877[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8841027575448190877[29] = 0;
   out_8841027575448190877[30] = 0;
   out_8841027575448190877[31] = 0;
   out_8841027575448190877[32] = 0;
   out_8841027575448190877[33] = 0;
   out_8841027575448190877[34] = 0;
   out_8841027575448190877[35] = 0;
   out_8841027575448190877[36] = 0;
   out_8841027575448190877[37] = 0;
   out_8841027575448190877[38] = 0;
   out_8841027575448190877[39] = 1;
   out_8841027575448190877[40] = 0;
   out_8841027575448190877[41] = 0;
   out_8841027575448190877[42] = 1;
   out_8841027575448190877[43] = 0;
   out_8841027575448190877[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8841027575448190877[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8841027575448190877[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8841027575448190877[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8841027575448190877[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8841027575448190877[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8841027575448190877[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8841027575448190877[51] = 0;
   out_8841027575448190877[52] = 0;
   out_8841027575448190877[53] = 0;
   out_8841027575448190877[54] = 0;
   out_8841027575448190877[55] = 0;
   out_8841027575448190877[56] = 0;
   out_8841027575448190877[57] = 0;
   out_8841027575448190877[58] = 0;
   out_8841027575448190877[59] = 0;
   out_8841027575448190877[60] = 0;
   out_8841027575448190877[61] = 0;
   out_8841027575448190877[62] = 1;
   out_8841027575448190877[63] = 0;
   out_8841027575448190877[64] = 0;
   out_8841027575448190877[65] = 1;
}
void h_12(double *state, double *unused, double *out_6193413751734227853) {
   out_6193413751734227853[0] = state[0];
   out_6193413751734227853[1] = state[1];
   out_6193413751734227853[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1447125295785126130) {
   out_1447125295785126130[0] = 1;
   out_1447125295785126130[1] = 0;
   out_1447125295785126130[2] = 0;
   out_1447125295785126130[3] = 0;
   out_1447125295785126130[4] = 0;
   out_1447125295785126130[5] = 0;
   out_1447125295785126130[6] = 0;
   out_1447125295785126130[7] = 0;
   out_1447125295785126130[8] = 0;
   out_1447125295785126130[9] = 0;
   out_1447125295785126130[10] = 0;
   out_1447125295785126130[11] = 0;
   out_1447125295785126130[12] = 0;
   out_1447125295785126130[13] = 0;
   out_1447125295785126130[14] = 0;
   out_1447125295785126130[15] = 0;
   out_1447125295785126130[16] = 0;
   out_1447125295785126130[17] = 0;
   out_1447125295785126130[18] = 0;
   out_1447125295785126130[19] = 0;
   out_1447125295785126130[20] = 0;
   out_1447125295785126130[21] = 0;
   out_1447125295785126130[22] = 0;
   out_1447125295785126130[23] = 1;
   out_1447125295785126130[24] = 0;
   out_1447125295785126130[25] = 0;
   out_1447125295785126130[26] = 0;
   out_1447125295785126130[27] = 0;
   out_1447125295785126130[28] = 0;
   out_1447125295785126130[29] = 0;
   out_1447125295785126130[30] = 0;
   out_1447125295785126130[31] = 0;
   out_1447125295785126130[32] = 0;
   out_1447125295785126130[33] = 0;
   out_1447125295785126130[34] = 0;
   out_1447125295785126130[35] = 0;
   out_1447125295785126130[36] = 0;
   out_1447125295785126130[37] = 0;
   out_1447125295785126130[38] = 0;
   out_1447125295785126130[39] = 0;
   out_1447125295785126130[40] = 0;
   out_1447125295785126130[41] = 0;
   out_1447125295785126130[42] = 0;
   out_1447125295785126130[43] = 0;
   out_1447125295785126130[44] = 0;
   out_1447125295785126130[45] = 0;
   out_1447125295785126130[46] = 1;
   out_1447125295785126130[47] = 0;
   out_1447125295785126130[48] = 0;
   out_1447125295785126130[49] = 0;
   out_1447125295785126130[50] = 0;
   out_1447125295785126130[51] = 0;
   out_1447125295785126130[52] = 0;
   out_1447125295785126130[53] = 0;
   out_1447125295785126130[54] = 0;
   out_1447125295785126130[55] = 0;
   out_1447125295785126130[56] = 0;
   out_1447125295785126130[57] = 0;
   out_1447125295785126130[58] = 0;
   out_1447125295785126130[59] = 0;
   out_1447125295785126130[60] = 0;
   out_1447125295785126130[61] = 0;
   out_1447125295785126130[62] = 0;
   out_1447125295785126130[63] = 0;
   out_1447125295785126130[64] = 0;
   out_1447125295785126130[65] = 0;
}
void h_35(double *state, double *unused, double *out_3186779468869586602) {
   out_3186779468869586602[0] = state[7];
   out_3186779468869586602[1] = state[8];
   out_3186779468869586602[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1298437736539887579) {
   out_1298437736539887579[0] = 0;
   out_1298437736539887579[1] = 0;
   out_1298437736539887579[2] = 0;
   out_1298437736539887579[3] = 0;
   out_1298437736539887579[4] = 0;
   out_1298437736539887579[5] = 0;
   out_1298437736539887579[6] = 0;
   out_1298437736539887579[7] = 1;
   out_1298437736539887579[8] = 0;
   out_1298437736539887579[9] = 0;
   out_1298437736539887579[10] = 0;
   out_1298437736539887579[11] = 0;
   out_1298437736539887579[12] = 0;
   out_1298437736539887579[13] = 0;
   out_1298437736539887579[14] = 0;
   out_1298437736539887579[15] = 0;
   out_1298437736539887579[16] = 0;
   out_1298437736539887579[17] = 0;
   out_1298437736539887579[18] = 0;
   out_1298437736539887579[19] = 0;
   out_1298437736539887579[20] = 0;
   out_1298437736539887579[21] = 0;
   out_1298437736539887579[22] = 0;
   out_1298437736539887579[23] = 0;
   out_1298437736539887579[24] = 0;
   out_1298437736539887579[25] = 0;
   out_1298437736539887579[26] = 0;
   out_1298437736539887579[27] = 0;
   out_1298437736539887579[28] = 0;
   out_1298437736539887579[29] = 0;
   out_1298437736539887579[30] = 1;
   out_1298437736539887579[31] = 0;
   out_1298437736539887579[32] = 0;
   out_1298437736539887579[33] = 0;
   out_1298437736539887579[34] = 0;
   out_1298437736539887579[35] = 0;
   out_1298437736539887579[36] = 0;
   out_1298437736539887579[37] = 0;
   out_1298437736539887579[38] = 0;
   out_1298437736539887579[39] = 0;
   out_1298437736539887579[40] = 0;
   out_1298437736539887579[41] = 0;
   out_1298437736539887579[42] = 0;
   out_1298437736539887579[43] = 0;
   out_1298437736539887579[44] = 0;
   out_1298437736539887579[45] = 0;
   out_1298437736539887579[46] = 0;
   out_1298437736539887579[47] = 0;
   out_1298437736539887579[48] = 0;
   out_1298437736539887579[49] = 0;
   out_1298437736539887579[50] = 0;
   out_1298437736539887579[51] = 0;
   out_1298437736539887579[52] = 0;
   out_1298437736539887579[53] = 1;
   out_1298437736539887579[54] = 0;
   out_1298437736539887579[55] = 0;
   out_1298437736539887579[56] = 0;
   out_1298437736539887579[57] = 0;
   out_1298437736539887579[58] = 0;
   out_1298437736539887579[59] = 0;
   out_1298437736539887579[60] = 0;
   out_1298437736539887579[61] = 0;
   out_1298437736539887579[62] = 0;
   out_1298437736539887579[63] = 0;
   out_1298437736539887579[64] = 0;
   out_1298437736539887579[65] = 0;
}
void h_32(double *state, double *unused, double *out_8772917863253775244) {
   out_8772917863253775244[0] = state[3];
   out_8772917863253775244[1] = state[4];
   out_8772917863253775244[2] = state[5];
   out_8772917863253775244[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1588043686308566917) {
   out_1588043686308566917[0] = 0;
   out_1588043686308566917[1] = 0;
   out_1588043686308566917[2] = 0;
   out_1588043686308566917[3] = 1;
   out_1588043686308566917[4] = 0;
   out_1588043686308566917[5] = 0;
   out_1588043686308566917[6] = 0;
   out_1588043686308566917[7] = 0;
   out_1588043686308566917[8] = 0;
   out_1588043686308566917[9] = 0;
   out_1588043686308566917[10] = 0;
   out_1588043686308566917[11] = 0;
   out_1588043686308566917[12] = 0;
   out_1588043686308566917[13] = 0;
   out_1588043686308566917[14] = 0;
   out_1588043686308566917[15] = 0;
   out_1588043686308566917[16] = 0;
   out_1588043686308566917[17] = 0;
   out_1588043686308566917[18] = 0;
   out_1588043686308566917[19] = 0;
   out_1588043686308566917[20] = 0;
   out_1588043686308566917[21] = 0;
   out_1588043686308566917[22] = 0;
   out_1588043686308566917[23] = 0;
   out_1588043686308566917[24] = 0;
   out_1588043686308566917[25] = 0;
   out_1588043686308566917[26] = 1;
   out_1588043686308566917[27] = 0;
   out_1588043686308566917[28] = 0;
   out_1588043686308566917[29] = 0;
   out_1588043686308566917[30] = 0;
   out_1588043686308566917[31] = 0;
   out_1588043686308566917[32] = 0;
   out_1588043686308566917[33] = 0;
   out_1588043686308566917[34] = 0;
   out_1588043686308566917[35] = 0;
   out_1588043686308566917[36] = 0;
   out_1588043686308566917[37] = 0;
   out_1588043686308566917[38] = 0;
   out_1588043686308566917[39] = 0;
   out_1588043686308566917[40] = 0;
   out_1588043686308566917[41] = 0;
   out_1588043686308566917[42] = 0;
   out_1588043686308566917[43] = 0;
   out_1588043686308566917[44] = 0;
   out_1588043686308566917[45] = 0;
   out_1588043686308566917[46] = 0;
   out_1588043686308566917[47] = 0;
   out_1588043686308566917[48] = 0;
   out_1588043686308566917[49] = 1;
   out_1588043686308566917[50] = 0;
   out_1588043686308566917[51] = 0;
   out_1588043686308566917[52] = 0;
   out_1588043686308566917[53] = 0;
   out_1588043686308566917[54] = 0;
   out_1588043686308566917[55] = 0;
   out_1588043686308566917[56] = 0;
   out_1588043686308566917[57] = 0;
   out_1588043686308566917[58] = 0;
   out_1588043686308566917[59] = 0;
   out_1588043686308566917[60] = 0;
   out_1588043686308566917[61] = 0;
   out_1588043686308566917[62] = 0;
   out_1588043686308566917[63] = 0;
   out_1588043686308566917[64] = 0;
   out_1588043686308566917[65] = 0;
   out_1588043686308566917[66] = 0;
   out_1588043686308566917[67] = 0;
   out_1588043686308566917[68] = 0;
   out_1588043686308566917[69] = 0;
   out_1588043686308566917[70] = 0;
   out_1588043686308566917[71] = 0;
   out_1588043686308566917[72] = 1;
   out_1588043686308566917[73] = 0;
   out_1588043686308566917[74] = 0;
   out_1588043686308566917[75] = 0;
   out_1588043686308566917[76] = 0;
   out_1588043686308566917[77] = 0;
   out_1588043686308566917[78] = 0;
   out_1588043686308566917[79] = 0;
   out_1588043686308566917[80] = 0;
   out_1588043686308566917[81] = 0;
   out_1588043686308566917[82] = 0;
   out_1588043686308566917[83] = 0;
   out_1588043686308566917[84] = 0;
   out_1588043686308566917[85] = 0;
   out_1588043686308566917[86] = 0;
   out_1588043686308566917[87] = 0;
}
void h_13(double *state, double *unused, double *out_1001338837700093085) {
   out_1001338837700093085[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1001338837700093085[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1001338837700093085[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5476705467195109763) {
   out_5476705467195109763[0] = 0;
   out_5476705467195109763[1] = 0;
   out_5476705467195109763[2] = 0;
   out_5476705467195109763[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5476705467195109763[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5476705467195109763[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5476705467195109763[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5476705467195109763[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5476705467195109763[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5476705467195109763[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5476705467195109763[10] = 0;
   out_5476705467195109763[11] = 0;
   out_5476705467195109763[12] = 0;
   out_5476705467195109763[13] = 0;
   out_5476705467195109763[14] = 0;
   out_5476705467195109763[15] = 0;
   out_5476705467195109763[16] = 0;
   out_5476705467195109763[17] = 0;
   out_5476705467195109763[18] = 0;
   out_5476705467195109763[19] = 0;
   out_5476705467195109763[20] = 0;
   out_5476705467195109763[21] = 0;
   out_5476705467195109763[22] = 0;
   out_5476705467195109763[23] = 0;
   out_5476705467195109763[24] = 0;
   out_5476705467195109763[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5476705467195109763[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5476705467195109763[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5476705467195109763[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5476705467195109763[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5476705467195109763[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5476705467195109763[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5476705467195109763[32] = 0;
   out_5476705467195109763[33] = 0;
   out_5476705467195109763[34] = 0;
   out_5476705467195109763[35] = 0;
   out_5476705467195109763[36] = 0;
   out_5476705467195109763[37] = 0;
   out_5476705467195109763[38] = 0;
   out_5476705467195109763[39] = 0;
   out_5476705467195109763[40] = 0;
   out_5476705467195109763[41] = 0;
   out_5476705467195109763[42] = 0;
   out_5476705467195109763[43] = 0;
   out_5476705467195109763[44] = 0;
   out_5476705467195109763[45] = 0;
   out_5476705467195109763[46] = 0;
   out_5476705467195109763[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5476705467195109763[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5476705467195109763[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5476705467195109763[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5476705467195109763[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5476705467195109763[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5476705467195109763[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5476705467195109763[54] = 0;
   out_5476705467195109763[55] = 0;
   out_5476705467195109763[56] = 0;
   out_5476705467195109763[57] = 0;
   out_5476705467195109763[58] = 0;
   out_5476705467195109763[59] = 0;
   out_5476705467195109763[60] = 0;
   out_5476705467195109763[61] = 0;
   out_5476705467195109763[62] = 0;
   out_5476705467195109763[63] = 0;
   out_5476705467195109763[64] = 0;
   out_5476705467195109763[65] = 0;
}
void h_14(double *state, double *unused, double *out_7559075047251418560) {
   out_7559075047251418560[0] = state[10];
   out_7559075047251418560[1] = state[11];
   out_7559075047251418560[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1827034674203129152) {
   out_1827034674203129152[0] = 0;
   out_1827034674203129152[1] = 0;
   out_1827034674203129152[2] = 0;
   out_1827034674203129152[3] = 0;
   out_1827034674203129152[4] = 0;
   out_1827034674203129152[5] = 0;
   out_1827034674203129152[6] = 0;
   out_1827034674203129152[7] = 0;
   out_1827034674203129152[8] = 0;
   out_1827034674203129152[9] = 0;
   out_1827034674203129152[10] = 1;
   out_1827034674203129152[11] = 0;
   out_1827034674203129152[12] = 0;
   out_1827034674203129152[13] = 0;
   out_1827034674203129152[14] = 0;
   out_1827034674203129152[15] = 0;
   out_1827034674203129152[16] = 0;
   out_1827034674203129152[17] = 0;
   out_1827034674203129152[18] = 0;
   out_1827034674203129152[19] = 0;
   out_1827034674203129152[20] = 0;
   out_1827034674203129152[21] = 0;
   out_1827034674203129152[22] = 0;
   out_1827034674203129152[23] = 0;
   out_1827034674203129152[24] = 0;
   out_1827034674203129152[25] = 0;
   out_1827034674203129152[26] = 0;
   out_1827034674203129152[27] = 0;
   out_1827034674203129152[28] = 0;
   out_1827034674203129152[29] = 0;
   out_1827034674203129152[30] = 0;
   out_1827034674203129152[31] = 0;
   out_1827034674203129152[32] = 0;
   out_1827034674203129152[33] = 1;
   out_1827034674203129152[34] = 0;
   out_1827034674203129152[35] = 0;
   out_1827034674203129152[36] = 0;
   out_1827034674203129152[37] = 0;
   out_1827034674203129152[38] = 0;
   out_1827034674203129152[39] = 0;
   out_1827034674203129152[40] = 0;
   out_1827034674203129152[41] = 0;
   out_1827034674203129152[42] = 0;
   out_1827034674203129152[43] = 0;
   out_1827034674203129152[44] = 0;
   out_1827034674203129152[45] = 0;
   out_1827034674203129152[46] = 0;
   out_1827034674203129152[47] = 0;
   out_1827034674203129152[48] = 0;
   out_1827034674203129152[49] = 0;
   out_1827034674203129152[50] = 0;
   out_1827034674203129152[51] = 0;
   out_1827034674203129152[52] = 0;
   out_1827034674203129152[53] = 0;
   out_1827034674203129152[54] = 0;
   out_1827034674203129152[55] = 0;
   out_1827034674203129152[56] = 1;
   out_1827034674203129152[57] = 0;
   out_1827034674203129152[58] = 0;
   out_1827034674203129152[59] = 0;
   out_1827034674203129152[60] = 0;
   out_1827034674203129152[61] = 0;
   out_1827034674203129152[62] = 0;
   out_1827034674203129152[63] = 0;
   out_1827034674203129152[64] = 0;
   out_1827034674203129152[65] = 0;
}
void h_33(double *state, double *unused, double *out_8087452208506297307) {
   out_8087452208506297307[0] = state[16];
   out_8087452208506297307[1] = state[17];
   out_8087452208506297307[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4448994741178745183) {
   out_4448994741178745183[0] = 0;
   out_4448994741178745183[1] = 0;
   out_4448994741178745183[2] = 0;
   out_4448994741178745183[3] = 0;
   out_4448994741178745183[4] = 0;
   out_4448994741178745183[5] = 0;
   out_4448994741178745183[6] = 0;
   out_4448994741178745183[7] = 0;
   out_4448994741178745183[8] = 0;
   out_4448994741178745183[9] = 0;
   out_4448994741178745183[10] = 0;
   out_4448994741178745183[11] = 0;
   out_4448994741178745183[12] = 0;
   out_4448994741178745183[13] = 0;
   out_4448994741178745183[14] = 0;
   out_4448994741178745183[15] = 0;
   out_4448994741178745183[16] = 1;
   out_4448994741178745183[17] = 0;
   out_4448994741178745183[18] = 0;
   out_4448994741178745183[19] = 0;
   out_4448994741178745183[20] = 0;
   out_4448994741178745183[21] = 0;
   out_4448994741178745183[22] = 0;
   out_4448994741178745183[23] = 0;
   out_4448994741178745183[24] = 0;
   out_4448994741178745183[25] = 0;
   out_4448994741178745183[26] = 0;
   out_4448994741178745183[27] = 0;
   out_4448994741178745183[28] = 0;
   out_4448994741178745183[29] = 0;
   out_4448994741178745183[30] = 0;
   out_4448994741178745183[31] = 0;
   out_4448994741178745183[32] = 0;
   out_4448994741178745183[33] = 0;
   out_4448994741178745183[34] = 0;
   out_4448994741178745183[35] = 0;
   out_4448994741178745183[36] = 0;
   out_4448994741178745183[37] = 0;
   out_4448994741178745183[38] = 0;
   out_4448994741178745183[39] = 1;
   out_4448994741178745183[40] = 0;
   out_4448994741178745183[41] = 0;
   out_4448994741178745183[42] = 0;
   out_4448994741178745183[43] = 0;
   out_4448994741178745183[44] = 0;
   out_4448994741178745183[45] = 0;
   out_4448994741178745183[46] = 0;
   out_4448994741178745183[47] = 0;
   out_4448994741178745183[48] = 0;
   out_4448994741178745183[49] = 0;
   out_4448994741178745183[50] = 0;
   out_4448994741178745183[51] = 0;
   out_4448994741178745183[52] = 0;
   out_4448994741178745183[53] = 0;
   out_4448994741178745183[54] = 0;
   out_4448994741178745183[55] = 0;
   out_4448994741178745183[56] = 0;
   out_4448994741178745183[57] = 0;
   out_4448994741178745183[58] = 0;
   out_4448994741178745183[59] = 0;
   out_4448994741178745183[60] = 0;
   out_4448994741178745183[61] = 0;
   out_4448994741178745183[62] = 1;
   out_4448994741178745183[63] = 0;
   out_4448994741178745183[64] = 0;
   out_4448994741178745183[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4131254223325676384) {
  H(in_vec, out_4131254223325676384);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2742659515808312139) {
  err_fun(nom_x, delta_x, out_2742659515808312139);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5409060373077877762) {
  inv_err_fun(nom_x, true_x, out_5409060373077877762);
}
void live_H_mod_fun(double *state, double *out_4545639670895671074) {
  H_mod_fun(state, out_4545639670895671074);
}
void live_f_fun(double *state, double dt, double *out_8720865560414031758) {
  f_fun(state,  dt, out_8720865560414031758);
}
void live_F_fun(double *state, double dt, double *out_2018563564658859806) {
  F_fun(state,  dt, out_2018563564658859806);
}
void live_h_4(double *state, double *unused, double *out_1216254421693794346) {
  h_4(state, unused, out_1216254421693794346);
}
void live_H_4(double *state, double *unused, double *out_2068224320832719797) {
  H_4(state, unused, out_2068224320832719797);
}
void live_h_9(double *state, double *unused, double *out_7559075047251418560) {
  h_9(state, unused, out_7559075047251418560);
}
void live_H_9(double *state, double *unused, double *out_1827034674203129152) {
  H_9(state, unused, out_1827034674203129152);
}
void live_h_10(double *state, double *unused, double *out_5783482280623166038) {
  h_10(state, unused, out_5783482280623166038);
}
void live_H_10(double *state, double *unused, double *out_8841027575448190877) {
  H_10(state, unused, out_8841027575448190877);
}
void live_h_12(double *state, double *unused, double *out_6193413751734227853) {
  h_12(state, unused, out_6193413751734227853);
}
void live_H_12(double *state, double *unused, double *out_1447125295785126130) {
  H_12(state, unused, out_1447125295785126130);
}
void live_h_35(double *state, double *unused, double *out_3186779468869586602) {
  h_35(state, unused, out_3186779468869586602);
}
void live_H_35(double *state, double *unused, double *out_1298437736539887579) {
  H_35(state, unused, out_1298437736539887579);
}
void live_h_32(double *state, double *unused, double *out_8772917863253775244) {
  h_32(state, unused, out_8772917863253775244);
}
void live_H_32(double *state, double *unused, double *out_1588043686308566917) {
  H_32(state, unused, out_1588043686308566917);
}
void live_h_13(double *state, double *unused, double *out_1001338837700093085) {
  h_13(state, unused, out_1001338837700093085);
}
void live_H_13(double *state, double *unused, double *out_5476705467195109763) {
  H_13(state, unused, out_5476705467195109763);
}
void live_h_14(double *state, double *unused, double *out_7559075047251418560) {
  h_14(state, unused, out_7559075047251418560);
}
void live_H_14(double *state, double *unused, double *out_1827034674203129152) {
  H_14(state, unused, out_1827034674203129152);
}
void live_h_33(double *state, double *unused, double *out_8087452208506297307) {
  h_33(state, unused, out_8087452208506297307);
}
void live_H_33(double *state, double *unused, double *out_4448994741178745183) {
  H_33(state, unused, out_4448994741178745183);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
