#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_9191720918565895292) {
   out_9191720918565895292[0] = 0;
   out_9191720918565895292[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_9191720918565895292[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_9191720918565895292[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_9191720918565895292[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_9191720918565895292[5] = -sin(in_vec[1]);
   out_9191720918565895292[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9191720918565895292[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9191720918565895292[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_9191720918565895292[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_9191720918565895292[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_9191720918565895292[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_9191720918565895292[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9191720918565895292[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9191720918565895292[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_9191720918565895292[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_9191720918565895292[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_9191720918565895292[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4097545666249594925) {
   out_4097545666249594925[0] = delta_x[0] + nom_x[0];
   out_4097545666249594925[1] = delta_x[1] + nom_x[1];
   out_4097545666249594925[2] = delta_x[2] + nom_x[2];
   out_4097545666249594925[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4097545666249594925[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4097545666249594925[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4097545666249594925[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4097545666249594925[7] = delta_x[6] + nom_x[7];
   out_4097545666249594925[8] = delta_x[7] + nom_x[8];
   out_4097545666249594925[9] = delta_x[8] + nom_x[9];
   out_4097545666249594925[10] = delta_x[9] + nom_x[10];
   out_4097545666249594925[11] = delta_x[10] + nom_x[11];
   out_4097545666249594925[12] = delta_x[11] + nom_x[12];
   out_4097545666249594925[13] = delta_x[12] + nom_x[13];
   out_4097545666249594925[14] = delta_x[13] + nom_x[14];
   out_4097545666249594925[15] = delta_x[14] + nom_x[15];
   out_4097545666249594925[16] = delta_x[15] + nom_x[16];
   out_4097545666249594925[17] = delta_x[16] + nom_x[17];
   out_4097545666249594925[18] = delta_x[17] + nom_x[18];
   out_4097545666249594925[19] = delta_x[18] + nom_x[19];
   out_4097545666249594925[20] = delta_x[19] + nom_x[20];
   out_4097545666249594925[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5294404423203983721) {
   out_5294404423203983721[0] = -nom_x[0] + true_x[0];
   out_5294404423203983721[1] = -nom_x[1] + true_x[1];
   out_5294404423203983721[2] = -nom_x[2] + true_x[2];
   out_5294404423203983721[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5294404423203983721[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5294404423203983721[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5294404423203983721[6] = -nom_x[7] + true_x[7];
   out_5294404423203983721[7] = -nom_x[8] + true_x[8];
   out_5294404423203983721[8] = -nom_x[9] + true_x[9];
   out_5294404423203983721[9] = -nom_x[10] + true_x[10];
   out_5294404423203983721[10] = -nom_x[11] + true_x[11];
   out_5294404423203983721[11] = -nom_x[12] + true_x[12];
   out_5294404423203983721[12] = -nom_x[13] + true_x[13];
   out_5294404423203983721[13] = -nom_x[14] + true_x[14];
   out_5294404423203983721[14] = -nom_x[15] + true_x[15];
   out_5294404423203983721[15] = -nom_x[16] + true_x[16];
   out_5294404423203983721[16] = -nom_x[17] + true_x[17];
   out_5294404423203983721[17] = -nom_x[18] + true_x[18];
   out_5294404423203983721[18] = -nom_x[19] + true_x[19];
   out_5294404423203983721[19] = -nom_x[20] + true_x[20];
   out_5294404423203983721[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3638656807510898365) {
   out_3638656807510898365[0] = 1.0;
   out_3638656807510898365[1] = 0;
   out_3638656807510898365[2] = 0;
   out_3638656807510898365[3] = 0;
   out_3638656807510898365[4] = 0;
   out_3638656807510898365[5] = 0;
   out_3638656807510898365[6] = 0;
   out_3638656807510898365[7] = 0;
   out_3638656807510898365[8] = 0;
   out_3638656807510898365[9] = 0;
   out_3638656807510898365[10] = 0;
   out_3638656807510898365[11] = 0;
   out_3638656807510898365[12] = 0;
   out_3638656807510898365[13] = 0;
   out_3638656807510898365[14] = 0;
   out_3638656807510898365[15] = 0;
   out_3638656807510898365[16] = 0;
   out_3638656807510898365[17] = 0;
   out_3638656807510898365[18] = 0;
   out_3638656807510898365[19] = 0;
   out_3638656807510898365[20] = 0;
   out_3638656807510898365[21] = 0;
   out_3638656807510898365[22] = 1.0;
   out_3638656807510898365[23] = 0;
   out_3638656807510898365[24] = 0;
   out_3638656807510898365[25] = 0;
   out_3638656807510898365[26] = 0;
   out_3638656807510898365[27] = 0;
   out_3638656807510898365[28] = 0;
   out_3638656807510898365[29] = 0;
   out_3638656807510898365[30] = 0;
   out_3638656807510898365[31] = 0;
   out_3638656807510898365[32] = 0;
   out_3638656807510898365[33] = 0;
   out_3638656807510898365[34] = 0;
   out_3638656807510898365[35] = 0;
   out_3638656807510898365[36] = 0;
   out_3638656807510898365[37] = 0;
   out_3638656807510898365[38] = 0;
   out_3638656807510898365[39] = 0;
   out_3638656807510898365[40] = 0;
   out_3638656807510898365[41] = 0;
   out_3638656807510898365[42] = 0;
   out_3638656807510898365[43] = 0;
   out_3638656807510898365[44] = 1.0;
   out_3638656807510898365[45] = 0;
   out_3638656807510898365[46] = 0;
   out_3638656807510898365[47] = 0;
   out_3638656807510898365[48] = 0;
   out_3638656807510898365[49] = 0;
   out_3638656807510898365[50] = 0;
   out_3638656807510898365[51] = 0;
   out_3638656807510898365[52] = 0;
   out_3638656807510898365[53] = 0;
   out_3638656807510898365[54] = 0;
   out_3638656807510898365[55] = 0;
   out_3638656807510898365[56] = 0;
   out_3638656807510898365[57] = 0;
   out_3638656807510898365[58] = 0;
   out_3638656807510898365[59] = 0;
   out_3638656807510898365[60] = 0;
   out_3638656807510898365[61] = 0;
   out_3638656807510898365[62] = 0;
   out_3638656807510898365[63] = 0;
   out_3638656807510898365[64] = 0;
   out_3638656807510898365[65] = 0;
   out_3638656807510898365[66] = -0.5*state[4];
   out_3638656807510898365[67] = -0.5*state[5];
   out_3638656807510898365[68] = -0.5*state[6];
   out_3638656807510898365[69] = 0;
   out_3638656807510898365[70] = 0;
   out_3638656807510898365[71] = 0;
   out_3638656807510898365[72] = 0;
   out_3638656807510898365[73] = 0;
   out_3638656807510898365[74] = 0;
   out_3638656807510898365[75] = 0;
   out_3638656807510898365[76] = 0;
   out_3638656807510898365[77] = 0;
   out_3638656807510898365[78] = 0;
   out_3638656807510898365[79] = 0;
   out_3638656807510898365[80] = 0;
   out_3638656807510898365[81] = 0;
   out_3638656807510898365[82] = 0;
   out_3638656807510898365[83] = 0;
   out_3638656807510898365[84] = 0;
   out_3638656807510898365[85] = 0;
   out_3638656807510898365[86] = 0;
   out_3638656807510898365[87] = 0.5*state[3];
   out_3638656807510898365[88] = 0.5*state[6];
   out_3638656807510898365[89] = -0.5*state[5];
   out_3638656807510898365[90] = 0;
   out_3638656807510898365[91] = 0;
   out_3638656807510898365[92] = 0;
   out_3638656807510898365[93] = 0;
   out_3638656807510898365[94] = 0;
   out_3638656807510898365[95] = 0;
   out_3638656807510898365[96] = 0;
   out_3638656807510898365[97] = 0;
   out_3638656807510898365[98] = 0;
   out_3638656807510898365[99] = 0;
   out_3638656807510898365[100] = 0;
   out_3638656807510898365[101] = 0;
   out_3638656807510898365[102] = 0;
   out_3638656807510898365[103] = 0;
   out_3638656807510898365[104] = 0;
   out_3638656807510898365[105] = 0;
   out_3638656807510898365[106] = 0;
   out_3638656807510898365[107] = 0;
   out_3638656807510898365[108] = -0.5*state[6];
   out_3638656807510898365[109] = 0.5*state[3];
   out_3638656807510898365[110] = 0.5*state[4];
   out_3638656807510898365[111] = 0;
   out_3638656807510898365[112] = 0;
   out_3638656807510898365[113] = 0;
   out_3638656807510898365[114] = 0;
   out_3638656807510898365[115] = 0;
   out_3638656807510898365[116] = 0;
   out_3638656807510898365[117] = 0;
   out_3638656807510898365[118] = 0;
   out_3638656807510898365[119] = 0;
   out_3638656807510898365[120] = 0;
   out_3638656807510898365[121] = 0;
   out_3638656807510898365[122] = 0;
   out_3638656807510898365[123] = 0;
   out_3638656807510898365[124] = 0;
   out_3638656807510898365[125] = 0;
   out_3638656807510898365[126] = 0;
   out_3638656807510898365[127] = 0;
   out_3638656807510898365[128] = 0;
   out_3638656807510898365[129] = 0.5*state[5];
   out_3638656807510898365[130] = -0.5*state[4];
   out_3638656807510898365[131] = 0.5*state[3];
   out_3638656807510898365[132] = 0;
   out_3638656807510898365[133] = 0;
   out_3638656807510898365[134] = 0;
   out_3638656807510898365[135] = 0;
   out_3638656807510898365[136] = 0;
   out_3638656807510898365[137] = 0;
   out_3638656807510898365[138] = 0;
   out_3638656807510898365[139] = 0;
   out_3638656807510898365[140] = 0;
   out_3638656807510898365[141] = 0;
   out_3638656807510898365[142] = 0;
   out_3638656807510898365[143] = 0;
   out_3638656807510898365[144] = 0;
   out_3638656807510898365[145] = 0;
   out_3638656807510898365[146] = 0;
   out_3638656807510898365[147] = 0;
   out_3638656807510898365[148] = 0;
   out_3638656807510898365[149] = 0;
   out_3638656807510898365[150] = 0;
   out_3638656807510898365[151] = 0;
   out_3638656807510898365[152] = 0;
   out_3638656807510898365[153] = 1.0;
   out_3638656807510898365[154] = 0;
   out_3638656807510898365[155] = 0;
   out_3638656807510898365[156] = 0;
   out_3638656807510898365[157] = 0;
   out_3638656807510898365[158] = 0;
   out_3638656807510898365[159] = 0;
   out_3638656807510898365[160] = 0;
   out_3638656807510898365[161] = 0;
   out_3638656807510898365[162] = 0;
   out_3638656807510898365[163] = 0;
   out_3638656807510898365[164] = 0;
   out_3638656807510898365[165] = 0;
   out_3638656807510898365[166] = 0;
   out_3638656807510898365[167] = 0;
   out_3638656807510898365[168] = 0;
   out_3638656807510898365[169] = 0;
   out_3638656807510898365[170] = 0;
   out_3638656807510898365[171] = 0;
   out_3638656807510898365[172] = 0;
   out_3638656807510898365[173] = 0;
   out_3638656807510898365[174] = 0;
   out_3638656807510898365[175] = 1.0;
   out_3638656807510898365[176] = 0;
   out_3638656807510898365[177] = 0;
   out_3638656807510898365[178] = 0;
   out_3638656807510898365[179] = 0;
   out_3638656807510898365[180] = 0;
   out_3638656807510898365[181] = 0;
   out_3638656807510898365[182] = 0;
   out_3638656807510898365[183] = 0;
   out_3638656807510898365[184] = 0;
   out_3638656807510898365[185] = 0;
   out_3638656807510898365[186] = 0;
   out_3638656807510898365[187] = 0;
   out_3638656807510898365[188] = 0;
   out_3638656807510898365[189] = 0;
   out_3638656807510898365[190] = 0;
   out_3638656807510898365[191] = 0;
   out_3638656807510898365[192] = 0;
   out_3638656807510898365[193] = 0;
   out_3638656807510898365[194] = 0;
   out_3638656807510898365[195] = 0;
   out_3638656807510898365[196] = 0;
   out_3638656807510898365[197] = 1.0;
   out_3638656807510898365[198] = 0;
   out_3638656807510898365[199] = 0;
   out_3638656807510898365[200] = 0;
   out_3638656807510898365[201] = 0;
   out_3638656807510898365[202] = 0;
   out_3638656807510898365[203] = 0;
   out_3638656807510898365[204] = 0;
   out_3638656807510898365[205] = 0;
   out_3638656807510898365[206] = 0;
   out_3638656807510898365[207] = 0;
   out_3638656807510898365[208] = 0;
   out_3638656807510898365[209] = 0;
   out_3638656807510898365[210] = 0;
   out_3638656807510898365[211] = 0;
   out_3638656807510898365[212] = 0;
   out_3638656807510898365[213] = 0;
   out_3638656807510898365[214] = 0;
   out_3638656807510898365[215] = 0;
   out_3638656807510898365[216] = 0;
   out_3638656807510898365[217] = 0;
   out_3638656807510898365[218] = 0;
   out_3638656807510898365[219] = 1.0;
   out_3638656807510898365[220] = 0;
   out_3638656807510898365[221] = 0;
   out_3638656807510898365[222] = 0;
   out_3638656807510898365[223] = 0;
   out_3638656807510898365[224] = 0;
   out_3638656807510898365[225] = 0;
   out_3638656807510898365[226] = 0;
   out_3638656807510898365[227] = 0;
   out_3638656807510898365[228] = 0;
   out_3638656807510898365[229] = 0;
   out_3638656807510898365[230] = 0;
   out_3638656807510898365[231] = 0;
   out_3638656807510898365[232] = 0;
   out_3638656807510898365[233] = 0;
   out_3638656807510898365[234] = 0;
   out_3638656807510898365[235] = 0;
   out_3638656807510898365[236] = 0;
   out_3638656807510898365[237] = 0;
   out_3638656807510898365[238] = 0;
   out_3638656807510898365[239] = 0;
   out_3638656807510898365[240] = 0;
   out_3638656807510898365[241] = 1.0;
   out_3638656807510898365[242] = 0;
   out_3638656807510898365[243] = 0;
   out_3638656807510898365[244] = 0;
   out_3638656807510898365[245] = 0;
   out_3638656807510898365[246] = 0;
   out_3638656807510898365[247] = 0;
   out_3638656807510898365[248] = 0;
   out_3638656807510898365[249] = 0;
   out_3638656807510898365[250] = 0;
   out_3638656807510898365[251] = 0;
   out_3638656807510898365[252] = 0;
   out_3638656807510898365[253] = 0;
   out_3638656807510898365[254] = 0;
   out_3638656807510898365[255] = 0;
   out_3638656807510898365[256] = 0;
   out_3638656807510898365[257] = 0;
   out_3638656807510898365[258] = 0;
   out_3638656807510898365[259] = 0;
   out_3638656807510898365[260] = 0;
   out_3638656807510898365[261] = 0;
   out_3638656807510898365[262] = 0;
   out_3638656807510898365[263] = 1.0;
   out_3638656807510898365[264] = 0;
   out_3638656807510898365[265] = 0;
   out_3638656807510898365[266] = 0;
   out_3638656807510898365[267] = 0;
   out_3638656807510898365[268] = 0;
   out_3638656807510898365[269] = 0;
   out_3638656807510898365[270] = 0;
   out_3638656807510898365[271] = 0;
   out_3638656807510898365[272] = 0;
   out_3638656807510898365[273] = 0;
   out_3638656807510898365[274] = 0;
   out_3638656807510898365[275] = 0;
   out_3638656807510898365[276] = 0;
   out_3638656807510898365[277] = 0;
   out_3638656807510898365[278] = 0;
   out_3638656807510898365[279] = 0;
   out_3638656807510898365[280] = 0;
   out_3638656807510898365[281] = 0;
   out_3638656807510898365[282] = 0;
   out_3638656807510898365[283] = 0;
   out_3638656807510898365[284] = 0;
   out_3638656807510898365[285] = 1.0;
   out_3638656807510898365[286] = 0;
   out_3638656807510898365[287] = 0;
   out_3638656807510898365[288] = 0;
   out_3638656807510898365[289] = 0;
   out_3638656807510898365[290] = 0;
   out_3638656807510898365[291] = 0;
   out_3638656807510898365[292] = 0;
   out_3638656807510898365[293] = 0;
   out_3638656807510898365[294] = 0;
   out_3638656807510898365[295] = 0;
   out_3638656807510898365[296] = 0;
   out_3638656807510898365[297] = 0;
   out_3638656807510898365[298] = 0;
   out_3638656807510898365[299] = 0;
   out_3638656807510898365[300] = 0;
   out_3638656807510898365[301] = 0;
   out_3638656807510898365[302] = 0;
   out_3638656807510898365[303] = 0;
   out_3638656807510898365[304] = 0;
   out_3638656807510898365[305] = 0;
   out_3638656807510898365[306] = 0;
   out_3638656807510898365[307] = 1.0;
   out_3638656807510898365[308] = 0;
   out_3638656807510898365[309] = 0;
   out_3638656807510898365[310] = 0;
   out_3638656807510898365[311] = 0;
   out_3638656807510898365[312] = 0;
   out_3638656807510898365[313] = 0;
   out_3638656807510898365[314] = 0;
   out_3638656807510898365[315] = 0;
   out_3638656807510898365[316] = 0;
   out_3638656807510898365[317] = 0;
   out_3638656807510898365[318] = 0;
   out_3638656807510898365[319] = 0;
   out_3638656807510898365[320] = 0;
   out_3638656807510898365[321] = 0;
   out_3638656807510898365[322] = 0;
   out_3638656807510898365[323] = 0;
   out_3638656807510898365[324] = 0;
   out_3638656807510898365[325] = 0;
   out_3638656807510898365[326] = 0;
   out_3638656807510898365[327] = 0;
   out_3638656807510898365[328] = 0;
   out_3638656807510898365[329] = 1.0;
   out_3638656807510898365[330] = 0;
   out_3638656807510898365[331] = 0;
   out_3638656807510898365[332] = 0;
   out_3638656807510898365[333] = 0;
   out_3638656807510898365[334] = 0;
   out_3638656807510898365[335] = 0;
   out_3638656807510898365[336] = 0;
   out_3638656807510898365[337] = 0;
   out_3638656807510898365[338] = 0;
   out_3638656807510898365[339] = 0;
   out_3638656807510898365[340] = 0;
   out_3638656807510898365[341] = 0;
   out_3638656807510898365[342] = 0;
   out_3638656807510898365[343] = 0;
   out_3638656807510898365[344] = 0;
   out_3638656807510898365[345] = 0;
   out_3638656807510898365[346] = 0;
   out_3638656807510898365[347] = 0;
   out_3638656807510898365[348] = 0;
   out_3638656807510898365[349] = 0;
   out_3638656807510898365[350] = 0;
   out_3638656807510898365[351] = 1.0;
   out_3638656807510898365[352] = 0;
   out_3638656807510898365[353] = 0;
   out_3638656807510898365[354] = 0;
   out_3638656807510898365[355] = 0;
   out_3638656807510898365[356] = 0;
   out_3638656807510898365[357] = 0;
   out_3638656807510898365[358] = 0;
   out_3638656807510898365[359] = 0;
   out_3638656807510898365[360] = 0;
   out_3638656807510898365[361] = 0;
   out_3638656807510898365[362] = 0;
   out_3638656807510898365[363] = 0;
   out_3638656807510898365[364] = 0;
   out_3638656807510898365[365] = 0;
   out_3638656807510898365[366] = 0;
   out_3638656807510898365[367] = 0;
   out_3638656807510898365[368] = 0;
   out_3638656807510898365[369] = 0;
   out_3638656807510898365[370] = 0;
   out_3638656807510898365[371] = 0;
   out_3638656807510898365[372] = 0;
   out_3638656807510898365[373] = 1.0;
   out_3638656807510898365[374] = 0;
   out_3638656807510898365[375] = 0;
   out_3638656807510898365[376] = 0;
   out_3638656807510898365[377] = 0;
   out_3638656807510898365[378] = 0;
   out_3638656807510898365[379] = 0;
   out_3638656807510898365[380] = 0;
   out_3638656807510898365[381] = 0;
   out_3638656807510898365[382] = 0;
   out_3638656807510898365[383] = 0;
   out_3638656807510898365[384] = 0;
   out_3638656807510898365[385] = 0;
   out_3638656807510898365[386] = 0;
   out_3638656807510898365[387] = 0;
   out_3638656807510898365[388] = 0;
   out_3638656807510898365[389] = 0;
   out_3638656807510898365[390] = 0;
   out_3638656807510898365[391] = 0;
   out_3638656807510898365[392] = 0;
   out_3638656807510898365[393] = 0;
   out_3638656807510898365[394] = 0;
   out_3638656807510898365[395] = 1.0;
   out_3638656807510898365[396] = 0;
   out_3638656807510898365[397] = 0;
   out_3638656807510898365[398] = 0;
   out_3638656807510898365[399] = 0;
   out_3638656807510898365[400] = 0;
   out_3638656807510898365[401] = 0;
   out_3638656807510898365[402] = 0;
   out_3638656807510898365[403] = 0;
   out_3638656807510898365[404] = 0;
   out_3638656807510898365[405] = 0;
   out_3638656807510898365[406] = 0;
   out_3638656807510898365[407] = 0;
   out_3638656807510898365[408] = 0;
   out_3638656807510898365[409] = 0;
   out_3638656807510898365[410] = 0;
   out_3638656807510898365[411] = 0;
   out_3638656807510898365[412] = 0;
   out_3638656807510898365[413] = 0;
   out_3638656807510898365[414] = 0;
   out_3638656807510898365[415] = 0;
   out_3638656807510898365[416] = 0;
   out_3638656807510898365[417] = 1.0;
   out_3638656807510898365[418] = 0;
   out_3638656807510898365[419] = 0;
   out_3638656807510898365[420] = 0;
   out_3638656807510898365[421] = 0;
   out_3638656807510898365[422] = 0;
   out_3638656807510898365[423] = 0;
   out_3638656807510898365[424] = 0;
   out_3638656807510898365[425] = 0;
   out_3638656807510898365[426] = 0;
   out_3638656807510898365[427] = 0;
   out_3638656807510898365[428] = 0;
   out_3638656807510898365[429] = 0;
   out_3638656807510898365[430] = 0;
   out_3638656807510898365[431] = 0;
   out_3638656807510898365[432] = 0;
   out_3638656807510898365[433] = 0;
   out_3638656807510898365[434] = 0;
   out_3638656807510898365[435] = 0;
   out_3638656807510898365[436] = 0;
   out_3638656807510898365[437] = 0;
   out_3638656807510898365[438] = 0;
   out_3638656807510898365[439] = 1.0;
   out_3638656807510898365[440] = 0;
   out_3638656807510898365[441] = 0;
   out_3638656807510898365[442] = 0;
   out_3638656807510898365[443] = 0;
   out_3638656807510898365[444] = 0;
   out_3638656807510898365[445] = 0;
   out_3638656807510898365[446] = 0;
   out_3638656807510898365[447] = 0;
   out_3638656807510898365[448] = 0;
   out_3638656807510898365[449] = 0;
   out_3638656807510898365[450] = 0;
   out_3638656807510898365[451] = 0;
   out_3638656807510898365[452] = 0;
   out_3638656807510898365[453] = 0;
   out_3638656807510898365[454] = 0;
   out_3638656807510898365[455] = 0;
   out_3638656807510898365[456] = 0;
   out_3638656807510898365[457] = 0;
   out_3638656807510898365[458] = 0;
   out_3638656807510898365[459] = 0;
   out_3638656807510898365[460] = 0;
   out_3638656807510898365[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4064418078486338310) {
   out_4064418078486338310[0] = dt*state[7] + state[0];
   out_4064418078486338310[1] = dt*state[8] + state[1];
   out_4064418078486338310[2] = dt*state[9] + state[2];
   out_4064418078486338310[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4064418078486338310[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4064418078486338310[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4064418078486338310[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4064418078486338310[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4064418078486338310[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4064418078486338310[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4064418078486338310[10] = state[10];
   out_4064418078486338310[11] = state[11];
   out_4064418078486338310[12] = state[12];
   out_4064418078486338310[13] = state[13];
   out_4064418078486338310[14] = state[14];
   out_4064418078486338310[15] = state[15];
   out_4064418078486338310[16] = state[16];
   out_4064418078486338310[17] = state[17];
   out_4064418078486338310[18] = state[18];
   out_4064418078486338310[19] = state[19];
   out_4064418078486338310[20] = state[20];
   out_4064418078486338310[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4074196571012395889) {
   out_4074196571012395889[0] = 1;
   out_4074196571012395889[1] = 0;
   out_4074196571012395889[2] = 0;
   out_4074196571012395889[3] = 0;
   out_4074196571012395889[4] = 0;
   out_4074196571012395889[5] = 0;
   out_4074196571012395889[6] = dt;
   out_4074196571012395889[7] = 0;
   out_4074196571012395889[8] = 0;
   out_4074196571012395889[9] = 0;
   out_4074196571012395889[10] = 0;
   out_4074196571012395889[11] = 0;
   out_4074196571012395889[12] = 0;
   out_4074196571012395889[13] = 0;
   out_4074196571012395889[14] = 0;
   out_4074196571012395889[15] = 0;
   out_4074196571012395889[16] = 0;
   out_4074196571012395889[17] = 0;
   out_4074196571012395889[18] = 0;
   out_4074196571012395889[19] = 0;
   out_4074196571012395889[20] = 0;
   out_4074196571012395889[21] = 0;
   out_4074196571012395889[22] = 1;
   out_4074196571012395889[23] = 0;
   out_4074196571012395889[24] = 0;
   out_4074196571012395889[25] = 0;
   out_4074196571012395889[26] = 0;
   out_4074196571012395889[27] = 0;
   out_4074196571012395889[28] = dt;
   out_4074196571012395889[29] = 0;
   out_4074196571012395889[30] = 0;
   out_4074196571012395889[31] = 0;
   out_4074196571012395889[32] = 0;
   out_4074196571012395889[33] = 0;
   out_4074196571012395889[34] = 0;
   out_4074196571012395889[35] = 0;
   out_4074196571012395889[36] = 0;
   out_4074196571012395889[37] = 0;
   out_4074196571012395889[38] = 0;
   out_4074196571012395889[39] = 0;
   out_4074196571012395889[40] = 0;
   out_4074196571012395889[41] = 0;
   out_4074196571012395889[42] = 0;
   out_4074196571012395889[43] = 0;
   out_4074196571012395889[44] = 1;
   out_4074196571012395889[45] = 0;
   out_4074196571012395889[46] = 0;
   out_4074196571012395889[47] = 0;
   out_4074196571012395889[48] = 0;
   out_4074196571012395889[49] = 0;
   out_4074196571012395889[50] = dt;
   out_4074196571012395889[51] = 0;
   out_4074196571012395889[52] = 0;
   out_4074196571012395889[53] = 0;
   out_4074196571012395889[54] = 0;
   out_4074196571012395889[55] = 0;
   out_4074196571012395889[56] = 0;
   out_4074196571012395889[57] = 0;
   out_4074196571012395889[58] = 0;
   out_4074196571012395889[59] = 0;
   out_4074196571012395889[60] = 0;
   out_4074196571012395889[61] = 0;
   out_4074196571012395889[62] = 0;
   out_4074196571012395889[63] = 0;
   out_4074196571012395889[64] = 0;
   out_4074196571012395889[65] = 0;
   out_4074196571012395889[66] = 1;
   out_4074196571012395889[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4074196571012395889[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4074196571012395889[69] = 0;
   out_4074196571012395889[70] = 0;
   out_4074196571012395889[71] = 0;
   out_4074196571012395889[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4074196571012395889[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4074196571012395889[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4074196571012395889[75] = 0;
   out_4074196571012395889[76] = 0;
   out_4074196571012395889[77] = 0;
   out_4074196571012395889[78] = 0;
   out_4074196571012395889[79] = 0;
   out_4074196571012395889[80] = 0;
   out_4074196571012395889[81] = 0;
   out_4074196571012395889[82] = 0;
   out_4074196571012395889[83] = 0;
   out_4074196571012395889[84] = 0;
   out_4074196571012395889[85] = 0;
   out_4074196571012395889[86] = 0;
   out_4074196571012395889[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4074196571012395889[88] = 1;
   out_4074196571012395889[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4074196571012395889[90] = 0;
   out_4074196571012395889[91] = 0;
   out_4074196571012395889[92] = 0;
   out_4074196571012395889[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4074196571012395889[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4074196571012395889[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4074196571012395889[96] = 0;
   out_4074196571012395889[97] = 0;
   out_4074196571012395889[98] = 0;
   out_4074196571012395889[99] = 0;
   out_4074196571012395889[100] = 0;
   out_4074196571012395889[101] = 0;
   out_4074196571012395889[102] = 0;
   out_4074196571012395889[103] = 0;
   out_4074196571012395889[104] = 0;
   out_4074196571012395889[105] = 0;
   out_4074196571012395889[106] = 0;
   out_4074196571012395889[107] = 0;
   out_4074196571012395889[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4074196571012395889[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4074196571012395889[110] = 1;
   out_4074196571012395889[111] = 0;
   out_4074196571012395889[112] = 0;
   out_4074196571012395889[113] = 0;
   out_4074196571012395889[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4074196571012395889[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4074196571012395889[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4074196571012395889[117] = 0;
   out_4074196571012395889[118] = 0;
   out_4074196571012395889[119] = 0;
   out_4074196571012395889[120] = 0;
   out_4074196571012395889[121] = 0;
   out_4074196571012395889[122] = 0;
   out_4074196571012395889[123] = 0;
   out_4074196571012395889[124] = 0;
   out_4074196571012395889[125] = 0;
   out_4074196571012395889[126] = 0;
   out_4074196571012395889[127] = 0;
   out_4074196571012395889[128] = 0;
   out_4074196571012395889[129] = 0;
   out_4074196571012395889[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4074196571012395889[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4074196571012395889[132] = 1;
   out_4074196571012395889[133] = 0;
   out_4074196571012395889[134] = 0;
   out_4074196571012395889[135] = 0;
   out_4074196571012395889[136] = 0;
   out_4074196571012395889[137] = 0;
   out_4074196571012395889[138] = 0;
   out_4074196571012395889[139] = 0;
   out_4074196571012395889[140] = 0;
   out_4074196571012395889[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4074196571012395889[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4074196571012395889[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4074196571012395889[144] = 0;
   out_4074196571012395889[145] = 0;
   out_4074196571012395889[146] = 0;
   out_4074196571012395889[147] = 0;
   out_4074196571012395889[148] = 0;
   out_4074196571012395889[149] = 0;
   out_4074196571012395889[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4074196571012395889[151] = 0;
   out_4074196571012395889[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4074196571012395889[153] = 0;
   out_4074196571012395889[154] = 1;
   out_4074196571012395889[155] = 0;
   out_4074196571012395889[156] = 0;
   out_4074196571012395889[157] = 0;
   out_4074196571012395889[158] = 0;
   out_4074196571012395889[159] = 0;
   out_4074196571012395889[160] = 0;
   out_4074196571012395889[161] = 0;
   out_4074196571012395889[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4074196571012395889[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4074196571012395889[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4074196571012395889[165] = 0;
   out_4074196571012395889[166] = 0;
   out_4074196571012395889[167] = 0;
   out_4074196571012395889[168] = 0;
   out_4074196571012395889[169] = 0;
   out_4074196571012395889[170] = 0;
   out_4074196571012395889[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4074196571012395889[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4074196571012395889[173] = 0;
   out_4074196571012395889[174] = 0;
   out_4074196571012395889[175] = 0;
   out_4074196571012395889[176] = 1;
   out_4074196571012395889[177] = 0;
   out_4074196571012395889[178] = 0;
   out_4074196571012395889[179] = 0;
   out_4074196571012395889[180] = 0;
   out_4074196571012395889[181] = 0;
   out_4074196571012395889[182] = 0;
   out_4074196571012395889[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4074196571012395889[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4074196571012395889[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4074196571012395889[186] = 0;
   out_4074196571012395889[187] = 0;
   out_4074196571012395889[188] = 0;
   out_4074196571012395889[189] = 0;
   out_4074196571012395889[190] = 0;
   out_4074196571012395889[191] = 0;
   out_4074196571012395889[192] = 0;
   out_4074196571012395889[193] = 0;
   out_4074196571012395889[194] = 0;
   out_4074196571012395889[195] = 0;
   out_4074196571012395889[196] = 0;
   out_4074196571012395889[197] = 0;
   out_4074196571012395889[198] = 1;
   out_4074196571012395889[199] = 0;
   out_4074196571012395889[200] = 0;
   out_4074196571012395889[201] = 0;
   out_4074196571012395889[202] = 0;
   out_4074196571012395889[203] = 0;
   out_4074196571012395889[204] = 0;
   out_4074196571012395889[205] = 0;
   out_4074196571012395889[206] = 0;
   out_4074196571012395889[207] = 0;
   out_4074196571012395889[208] = 0;
   out_4074196571012395889[209] = 0;
   out_4074196571012395889[210] = 0;
   out_4074196571012395889[211] = 0;
   out_4074196571012395889[212] = 0;
   out_4074196571012395889[213] = 0;
   out_4074196571012395889[214] = 0;
   out_4074196571012395889[215] = 0;
   out_4074196571012395889[216] = 0;
   out_4074196571012395889[217] = 0;
   out_4074196571012395889[218] = 0;
   out_4074196571012395889[219] = 0;
   out_4074196571012395889[220] = 1;
   out_4074196571012395889[221] = 0;
   out_4074196571012395889[222] = 0;
   out_4074196571012395889[223] = 0;
   out_4074196571012395889[224] = 0;
   out_4074196571012395889[225] = 0;
   out_4074196571012395889[226] = 0;
   out_4074196571012395889[227] = 0;
   out_4074196571012395889[228] = 0;
   out_4074196571012395889[229] = 0;
   out_4074196571012395889[230] = 0;
   out_4074196571012395889[231] = 0;
   out_4074196571012395889[232] = 0;
   out_4074196571012395889[233] = 0;
   out_4074196571012395889[234] = 0;
   out_4074196571012395889[235] = 0;
   out_4074196571012395889[236] = 0;
   out_4074196571012395889[237] = 0;
   out_4074196571012395889[238] = 0;
   out_4074196571012395889[239] = 0;
   out_4074196571012395889[240] = 0;
   out_4074196571012395889[241] = 0;
   out_4074196571012395889[242] = 1;
   out_4074196571012395889[243] = 0;
   out_4074196571012395889[244] = 0;
   out_4074196571012395889[245] = 0;
   out_4074196571012395889[246] = 0;
   out_4074196571012395889[247] = 0;
   out_4074196571012395889[248] = 0;
   out_4074196571012395889[249] = 0;
   out_4074196571012395889[250] = 0;
   out_4074196571012395889[251] = 0;
   out_4074196571012395889[252] = 0;
   out_4074196571012395889[253] = 0;
   out_4074196571012395889[254] = 0;
   out_4074196571012395889[255] = 0;
   out_4074196571012395889[256] = 0;
   out_4074196571012395889[257] = 0;
   out_4074196571012395889[258] = 0;
   out_4074196571012395889[259] = 0;
   out_4074196571012395889[260] = 0;
   out_4074196571012395889[261] = 0;
   out_4074196571012395889[262] = 0;
   out_4074196571012395889[263] = 0;
   out_4074196571012395889[264] = 1;
   out_4074196571012395889[265] = 0;
   out_4074196571012395889[266] = 0;
   out_4074196571012395889[267] = 0;
   out_4074196571012395889[268] = 0;
   out_4074196571012395889[269] = 0;
   out_4074196571012395889[270] = 0;
   out_4074196571012395889[271] = 0;
   out_4074196571012395889[272] = 0;
   out_4074196571012395889[273] = 0;
   out_4074196571012395889[274] = 0;
   out_4074196571012395889[275] = 0;
   out_4074196571012395889[276] = 0;
   out_4074196571012395889[277] = 0;
   out_4074196571012395889[278] = 0;
   out_4074196571012395889[279] = 0;
   out_4074196571012395889[280] = 0;
   out_4074196571012395889[281] = 0;
   out_4074196571012395889[282] = 0;
   out_4074196571012395889[283] = 0;
   out_4074196571012395889[284] = 0;
   out_4074196571012395889[285] = 0;
   out_4074196571012395889[286] = 1;
   out_4074196571012395889[287] = 0;
   out_4074196571012395889[288] = 0;
   out_4074196571012395889[289] = 0;
   out_4074196571012395889[290] = 0;
   out_4074196571012395889[291] = 0;
   out_4074196571012395889[292] = 0;
   out_4074196571012395889[293] = 0;
   out_4074196571012395889[294] = 0;
   out_4074196571012395889[295] = 0;
   out_4074196571012395889[296] = 0;
   out_4074196571012395889[297] = 0;
   out_4074196571012395889[298] = 0;
   out_4074196571012395889[299] = 0;
   out_4074196571012395889[300] = 0;
   out_4074196571012395889[301] = 0;
   out_4074196571012395889[302] = 0;
   out_4074196571012395889[303] = 0;
   out_4074196571012395889[304] = 0;
   out_4074196571012395889[305] = 0;
   out_4074196571012395889[306] = 0;
   out_4074196571012395889[307] = 0;
   out_4074196571012395889[308] = 1;
   out_4074196571012395889[309] = 0;
   out_4074196571012395889[310] = 0;
   out_4074196571012395889[311] = 0;
   out_4074196571012395889[312] = 0;
   out_4074196571012395889[313] = 0;
   out_4074196571012395889[314] = 0;
   out_4074196571012395889[315] = 0;
   out_4074196571012395889[316] = 0;
   out_4074196571012395889[317] = 0;
   out_4074196571012395889[318] = 0;
   out_4074196571012395889[319] = 0;
   out_4074196571012395889[320] = 0;
   out_4074196571012395889[321] = 0;
   out_4074196571012395889[322] = 0;
   out_4074196571012395889[323] = 0;
   out_4074196571012395889[324] = 0;
   out_4074196571012395889[325] = 0;
   out_4074196571012395889[326] = 0;
   out_4074196571012395889[327] = 0;
   out_4074196571012395889[328] = 0;
   out_4074196571012395889[329] = 0;
   out_4074196571012395889[330] = 1;
   out_4074196571012395889[331] = 0;
   out_4074196571012395889[332] = 0;
   out_4074196571012395889[333] = 0;
   out_4074196571012395889[334] = 0;
   out_4074196571012395889[335] = 0;
   out_4074196571012395889[336] = 0;
   out_4074196571012395889[337] = 0;
   out_4074196571012395889[338] = 0;
   out_4074196571012395889[339] = 0;
   out_4074196571012395889[340] = 0;
   out_4074196571012395889[341] = 0;
   out_4074196571012395889[342] = 0;
   out_4074196571012395889[343] = 0;
   out_4074196571012395889[344] = 0;
   out_4074196571012395889[345] = 0;
   out_4074196571012395889[346] = 0;
   out_4074196571012395889[347] = 0;
   out_4074196571012395889[348] = 0;
   out_4074196571012395889[349] = 0;
   out_4074196571012395889[350] = 0;
   out_4074196571012395889[351] = 0;
   out_4074196571012395889[352] = 1;
   out_4074196571012395889[353] = 0;
   out_4074196571012395889[354] = 0;
   out_4074196571012395889[355] = 0;
   out_4074196571012395889[356] = 0;
   out_4074196571012395889[357] = 0;
   out_4074196571012395889[358] = 0;
   out_4074196571012395889[359] = 0;
   out_4074196571012395889[360] = 0;
   out_4074196571012395889[361] = 0;
   out_4074196571012395889[362] = 0;
   out_4074196571012395889[363] = 0;
   out_4074196571012395889[364] = 0;
   out_4074196571012395889[365] = 0;
   out_4074196571012395889[366] = 0;
   out_4074196571012395889[367] = 0;
   out_4074196571012395889[368] = 0;
   out_4074196571012395889[369] = 0;
   out_4074196571012395889[370] = 0;
   out_4074196571012395889[371] = 0;
   out_4074196571012395889[372] = 0;
   out_4074196571012395889[373] = 0;
   out_4074196571012395889[374] = 1;
   out_4074196571012395889[375] = 0;
   out_4074196571012395889[376] = 0;
   out_4074196571012395889[377] = 0;
   out_4074196571012395889[378] = 0;
   out_4074196571012395889[379] = 0;
   out_4074196571012395889[380] = 0;
   out_4074196571012395889[381] = 0;
   out_4074196571012395889[382] = 0;
   out_4074196571012395889[383] = 0;
   out_4074196571012395889[384] = 0;
   out_4074196571012395889[385] = 0;
   out_4074196571012395889[386] = 0;
   out_4074196571012395889[387] = 0;
   out_4074196571012395889[388] = 0;
   out_4074196571012395889[389] = 0;
   out_4074196571012395889[390] = 0;
   out_4074196571012395889[391] = 0;
   out_4074196571012395889[392] = 0;
   out_4074196571012395889[393] = 0;
   out_4074196571012395889[394] = 0;
   out_4074196571012395889[395] = 0;
   out_4074196571012395889[396] = 1;
   out_4074196571012395889[397] = 0;
   out_4074196571012395889[398] = 0;
   out_4074196571012395889[399] = 0;
   out_4074196571012395889[400] = 0;
   out_4074196571012395889[401] = 0;
   out_4074196571012395889[402] = 0;
   out_4074196571012395889[403] = 0;
   out_4074196571012395889[404] = 0;
   out_4074196571012395889[405] = 0;
   out_4074196571012395889[406] = 0;
   out_4074196571012395889[407] = 0;
   out_4074196571012395889[408] = 0;
   out_4074196571012395889[409] = 0;
   out_4074196571012395889[410] = 0;
   out_4074196571012395889[411] = 0;
   out_4074196571012395889[412] = 0;
   out_4074196571012395889[413] = 0;
   out_4074196571012395889[414] = 0;
   out_4074196571012395889[415] = 0;
   out_4074196571012395889[416] = 0;
   out_4074196571012395889[417] = 0;
   out_4074196571012395889[418] = 1;
   out_4074196571012395889[419] = 0;
   out_4074196571012395889[420] = 0;
   out_4074196571012395889[421] = 0;
   out_4074196571012395889[422] = 0;
   out_4074196571012395889[423] = 0;
   out_4074196571012395889[424] = 0;
   out_4074196571012395889[425] = 0;
   out_4074196571012395889[426] = 0;
   out_4074196571012395889[427] = 0;
   out_4074196571012395889[428] = 0;
   out_4074196571012395889[429] = 0;
   out_4074196571012395889[430] = 0;
   out_4074196571012395889[431] = 0;
   out_4074196571012395889[432] = 0;
   out_4074196571012395889[433] = 0;
   out_4074196571012395889[434] = 0;
   out_4074196571012395889[435] = 0;
   out_4074196571012395889[436] = 0;
   out_4074196571012395889[437] = 0;
   out_4074196571012395889[438] = 0;
   out_4074196571012395889[439] = 0;
   out_4074196571012395889[440] = 1;
}
void h_4(double *state, double *unused, double *out_8366072108827298312) {
   out_8366072108827298312[0] = state[10] + state[13];
   out_8366072108827298312[1] = state[11] + state[14];
   out_8366072108827298312[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_499387579376300602) {
   out_499387579376300602[0] = 0;
   out_499387579376300602[1] = 0;
   out_499387579376300602[2] = 0;
   out_499387579376300602[3] = 0;
   out_499387579376300602[4] = 0;
   out_499387579376300602[5] = 0;
   out_499387579376300602[6] = 0;
   out_499387579376300602[7] = 0;
   out_499387579376300602[8] = 0;
   out_499387579376300602[9] = 0;
   out_499387579376300602[10] = 1;
   out_499387579376300602[11] = 0;
   out_499387579376300602[12] = 0;
   out_499387579376300602[13] = 1;
   out_499387579376300602[14] = 0;
   out_499387579376300602[15] = 0;
   out_499387579376300602[16] = 0;
   out_499387579376300602[17] = 0;
   out_499387579376300602[18] = 0;
   out_499387579376300602[19] = 0;
   out_499387579376300602[20] = 0;
   out_499387579376300602[21] = 0;
   out_499387579376300602[22] = 0;
   out_499387579376300602[23] = 0;
   out_499387579376300602[24] = 0;
   out_499387579376300602[25] = 0;
   out_499387579376300602[26] = 0;
   out_499387579376300602[27] = 0;
   out_499387579376300602[28] = 0;
   out_499387579376300602[29] = 0;
   out_499387579376300602[30] = 0;
   out_499387579376300602[31] = 0;
   out_499387579376300602[32] = 0;
   out_499387579376300602[33] = 1;
   out_499387579376300602[34] = 0;
   out_499387579376300602[35] = 0;
   out_499387579376300602[36] = 1;
   out_499387579376300602[37] = 0;
   out_499387579376300602[38] = 0;
   out_499387579376300602[39] = 0;
   out_499387579376300602[40] = 0;
   out_499387579376300602[41] = 0;
   out_499387579376300602[42] = 0;
   out_499387579376300602[43] = 0;
   out_499387579376300602[44] = 0;
   out_499387579376300602[45] = 0;
   out_499387579376300602[46] = 0;
   out_499387579376300602[47] = 0;
   out_499387579376300602[48] = 0;
   out_499387579376300602[49] = 0;
   out_499387579376300602[50] = 0;
   out_499387579376300602[51] = 0;
   out_499387579376300602[52] = 0;
   out_499387579376300602[53] = 0;
   out_499387579376300602[54] = 0;
   out_499387579376300602[55] = 0;
   out_499387579376300602[56] = 1;
   out_499387579376300602[57] = 0;
   out_499387579376300602[58] = 0;
   out_499387579376300602[59] = 1;
   out_499387579376300602[60] = 0;
   out_499387579376300602[61] = 0;
   out_499387579376300602[62] = 0;
   out_499387579376300602[63] = 0;
   out_499387579376300602[64] = 0;
   out_499387579376300602[65] = 0;
}
void h_9(double *state, double *unused, double *out_2956207272003695430) {
   out_2956207272003695430[0] = state[10];
   out_2956207272003695430[1] = state[11];
   out_2956207272003695430[2] = state[12];
}
void H_9(double *state, double *unused, double *out_258197932746709957) {
   out_258197932746709957[0] = 0;
   out_258197932746709957[1] = 0;
   out_258197932746709957[2] = 0;
   out_258197932746709957[3] = 0;
   out_258197932746709957[4] = 0;
   out_258197932746709957[5] = 0;
   out_258197932746709957[6] = 0;
   out_258197932746709957[7] = 0;
   out_258197932746709957[8] = 0;
   out_258197932746709957[9] = 0;
   out_258197932746709957[10] = 1;
   out_258197932746709957[11] = 0;
   out_258197932746709957[12] = 0;
   out_258197932746709957[13] = 0;
   out_258197932746709957[14] = 0;
   out_258197932746709957[15] = 0;
   out_258197932746709957[16] = 0;
   out_258197932746709957[17] = 0;
   out_258197932746709957[18] = 0;
   out_258197932746709957[19] = 0;
   out_258197932746709957[20] = 0;
   out_258197932746709957[21] = 0;
   out_258197932746709957[22] = 0;
   out_258197932746709957[23] = 0;
   out_258197932746709957[24] = 0;
   out_258197932746709957[25] = 0;
   out_258197932746709957[26] = 0;
   out_258197932746709957[27] = 0;
   out_258197932746709957[28] = 0;
   out_258197932746709957[29] = 0;
   out_258197932746709957[30] = 0;
   out_258197932746709957[31] = 0;
   out_258197932746709957[32] = 0;
   out_258197932746709957[33] = 1;
   out_258197932746709957[34] = 0;
   out_258197932746709957[35] = 0;
   out_258197932746709957[36] = 0;
   out_258197932746709957[37] = 0;
   out_258197932746709957[38] = 0;
   out_258197932746709957[39] = 0;
   out_258197932746709957[40] = 0;
   out_258197932746709957[41] = 0;
   out_258197932746709957[42] = 0;
   out_258197932746709957[43] = 0;
   out_258197932746709957[44] = 0;
   out_258197932746709957[45] = 0;
   out_258197932746709957[46] = 0;
   out_258197932746709957[47] = 0;
   out_258197932746709957[48] = 0;
   out_258197932746709957[49] = 0;
   out_258197932746709957[50] = 0;
   out_258197932746709957[51] = 0;
   out_258197932746709957[52] = 0;
   out_258197932746709957[53] = 0;
   out_258197932746709957[54] = 0;
   out_258197932746709957[55] = 0;
   out_258197932746709957[56] = 1;
   out_258197932746709957[57] = 0;
   out_258197932746709957[58] = 0;
   out_258197932746709957[59] = 0;
   out_258197932746709957[60] = 0;
   out_258197932746709957[61] = 0;
   out_258197932746709957[62] = 0;
   out_258197932746709957[63] = 0;
   out_258197932746709957[64] = 0;
   out_258197932746709957[65] = 0;
}
void h_10(double *state, double *unused, double *out_9173627037127896632) {
   out_9173627037127896632[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9173627037127896632[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9173627037127896632[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6757501493105471108) {
   out_6757501493105471108[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6757501493105471108[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6757501493105471108[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6757501493105471108[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6757501493105471108[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6757501493105471108[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6757501493105471108[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6757501493105471108[7] = 0;
   out_6757501493105471108[8] = 0;
   out_6757501493105471108[9] = 0;
   out_6757501493105471108[10] = 0;
   out_6757501493105471108[11] = 0;
   out_6757501493105471108[12] = 0;
   out_6757501493105471108[13] = 0;
   out_6757501493105471108[14] = 0;
   out_6757501493105471108[15] = 0;
   out_6757501493105471108[16] = 1;
   out_6757501493105471108[17] = 0;
   out_6757501493105471108[18] = 0;
   out_6757501493105471108[19] = 1;
   out_6757501493105471108[20] = 0;
   out_6757501493105471108[21] = 0;
   out_6757501493105471108[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6757501493105471108[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6757501493105471108[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6757501493105471108[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6757501493105471108[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6757501493105471108[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6757501493105471108[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6757501493105471108[29] = 0;
   out_6757501493105471108[30] = 0;
   out_6757501493105471108[31] = 0;
   out_6757501493105471108[32] = 0;
   out_6757501493105471108[33] = 0;
   out_6757501493105471108[34] = 0;
   out_6757501493105471108[35] = 0;
   out_6757501493105471108[36] = 0;
   out_6757501493105471108[37] = 0;
   out_6757501493105471108[38] = 0;
   out_6757501493105471108[39] = 1;
   out_6757501493105471108[40] = 0;
   out_6757501493105471108[41] = 0;
   out_6757501493105471108[42] = 1;
   out_6757501493105471108[43] = 0;
   out_6757501493105471108[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6757501493105471108[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6757501493105471108[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6757501493105471108[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6757501493105471108[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6757501493105471108[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6757501493105471108[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6757501493105471108[51] = 0;
   out_6757501493105471108[52] = 0;
   out_6757501493105471108[53] = 0;
   out_6757501493105471108[54] = 0;
   out_6757501493105471108[55] = 0;
   out_6757501493105471108[56] = 0;
   out_6757501493105471108[57] = 0;
   out_6757501493105471108[58] = 0;
   out_6757501493105471108[59] = 0;
   out_6757501493105471108[60] = 0;
   out_6757501493105471108[61] = 0;
   out_6757501493105471108[62] = 1;
   out_6757501493105471108[63] = 0;
   out_6757501493105471108[64] = 0;
   out_6757501493105471108[65] = 1;
}
void h_12(double *state, double *unused, double *out_9016299843067629392) {
   out_9016299843067629392[0] = state[0];
   out_9016299843067629392[1] = state[1];
   out_9016299843067629392[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4520068828655661193) {
   out_4520068828655661193[0] = 1;
   out_4520068828655661193[1] = 0;
   out_4520068828655661193[2] = 0;
   out_4520068828655661193[3] = 0;
   out_4520068828655661193[4] = 0;
   out_4520068828655661193[5] = 0;
   out_4520068828655661193[6] = 0;
   out_4520068828655661193[7] = 0;
   out_4520068828655661193[8] = 0;
   out_4520068828655661193[9] = 0;
   out_4520068828655661193[10] = 0;
   out_4520068828655661193[11] = 0;
   out_4520068828655661193[12] = 0;
   out_4520068828655661193[13] = 0;
   out_4520068828655661193[14] = 0;
   out_4520068828655661193[15] = 0;
   out_4520068828655661193[16] = 0;
   out_4520068828655661193[17] = 0;
   out_4520068828655661193[18] = 0;
   out_4520068828655661193[19] = 0;
   out_4520068828655661193[20] = 0;
   out_4520068828655661193[21] = 0;
   out_4520068828655661193[22] = 0;
   out_4520068828655661193[23] = 1;
   out_4520068828655661193[24] = 0;
   out_4520068828655661193[25] = 0;
   out_4520068828655661193[26] = 0;
   out_4520068828655661193[27] = 0;
   out_4520068828655661193[28] = 0;
   out_4520068828655661193[29] = 0;
   out_4520068828655661193[30] = 0;
   out_4520068828655661193[31] = 0;
   out_4520068828655661193[32] = 0;
   out_4520068828655661193[33] = 0;
   out_4520068828655661193[34] = 0;
   out_4520068828655661193[35] = 0;
   out_4520068828655661193[36] = 0;
   out_4520068828655661193[37] = 0;
   out_4520068828655661193[38] = 0;
   out_4520068828655661193[39] = 0;
   out_4520068828655661193[40] = 0;
   out_4520068828655661193[41] = 0;
   out_4520068828655661193[42] = 0;
   out_4520068828655661193[43] = 0;
   out_4520068828655661193[44] = 0;
   out_4520068828655661193[45] = 0;
   out_4520068828655661193[46] = 1;
   out_4520068828655661193[47] = 0;
   out_4520068828655661193[48] = 0;
   out_4520068828655661193[49] = 0;
   out_4520068828655661193[50] = 0;
   out_4520068828655661193[51] = 0;
   out_4520068828655661193[52] = 0;
   out_4520068828655661193[53] = 0;
   out_4520068828655661193[54] = 0;
   out_4520068828655661193[55] = 0;
   out_4520068828655661193[56] = 0;
   out_4520068828655661193[57] = 0;
   out_4520068828655661193[58] = 0;
   out_4520068828655661193[59] = 0;
   out_4520068828655661193[60] = 0;
   out_4520068828655661193[61] = 0;
   out_4520068828655661193[62] = 0;
   out_4520068828655661193[63] = 0;
   out_4520068828655661193[64] = 0;
   out_4520068828655661193[65] = 0;
}
void h_35(double *state, double *unused, double *out_8897869277968490229) {
   out_8897869277968490229[0] = state[7];
   out_8897869277968490229[1] = state[8];
   out_8897869277968490229[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2867274477996306774) {
   out_2867274477996306774[0] = 0;
   out_2867274477996306774[1] = 0;
   out_2867274477996306774[2] = 0;
   out_2867274477996306774[3] = 0;
   out_2867274477996306774[4] = 0;
   out_2867274477996306774[5] = 0;
   out_2867274477996306774[6] = 0;
   out_2867274477996306774[7] = 1;
   out_2867274477996306774[8] = 0;
   out_2867274477996306774[9] = 0;
   out_2867274477996306774[10] = 0;
   out_2867274477996306774[11] = 0;
   out_2867274477996306774[12] = 0;
   out_2867274477996306774[13] = 0;
   out_2867274477996306774[14] = 0;
   out_2867274477996306774[15] = 0;
   out_2867274477996306774[16] = 0;
   out_2867274477996306774[17] = 0;
   out_2867274477996306774[18] = 0;
   out_2867274477996306774[19] = 0;
   out_2867274477996306774[20] = 0;
   out_2867274477996306774[21] = 0;
   out_2867274477996306774[22] = 0;
   out_2867274477996306774[23] = 0;
   out_2867274477996306774[24] = 0;
   out_2867274477996306774[25] = 0;
   out_2867274477996306774[26] = 0;
   out_2867274477996306774[27] = 0;
   out_2867274477996306774[28] = 0;
   out_2867274477996306774[29] = 0;
   out_2867274477996306774[30] = 1;
   out_2867274477996306774[31] = 0;
   out_2867274477996306774[32] = 0;
   out_2867274477996306774[33] = 0;
   out_2867274477996306774[34] = 0;
   out_2867274477996306774[35] = 0;
   out_2867274477996306774[36] = 0;
   out_2867274477996306774[37] = 0;
   out_2867274477996306774[38] = 0;
   out_2867274477996306774[39] = 0;
   out_2867274477996306774[40] = 0;
   out_2867274477996306774[41] = 0;
   out_2867274477996306774[42] = 0;
   out_2867274477996306774[43] = 0;
   out_2867274477996306774[44] = 0;
   out_2867274477996306774[45] = 0;
   out_2867274477996306774[46] = 0;
   out_2867274477996306774[47] = 0;
   out_2867274477996306774[48] = 0;
   out_2867274477996306774[49] = 0;
   out_2867274477996306774[50] = 0;
   out_2867274477996306774[51] = 0;
   out_2867274477996306774[52] = 0;
   out_2867274477996306774[53] = 1;
   out_2867274477996306774[54] = 0;
   out_2867274477996306774[55] = 0;
   out_2867274477996306774[56] = 0;
   out_2867274477996306774[57] = 0;
   out_2867274477996306774[58] = 0;
   out_2867274477996306774[59] = 0;
   out_2867274477996306774[60] = 0;
   out_2867274477996306774[61] = 0;
   out_2867274477996306774[62] = 0;
   out_2867274477996306774[63] = 0;
   out_2867274477996306774[64] = 0;
   out_2867274477996306774[65] = 0;
}
void h_32(double *state, double *unused, double *out_2172986558537042211) {
   out_2172986558537042211[0] = state[3];
   out_2172986558537042211[1] = state[4];
   out_2172986558537042211[2] = state[5];
   out_2172986558537042211[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4047590025697809582) {
   out_4047590025697809582[0] = 0;
   out_4047590025697809582[1] = 0;
   out_4047590025697809582[2] = 0;
   out_4047590025697809582[3] = 1;
   out_4047590025697809582[4] = 0;
   out_4047590025697809582[5] = 0;
   out_4047590025697809582[6] = 0;
   out_4047590025697809582[7] = 0;
   out_4047590025697809582[8] = 0;
   out_4047590025697809582[9] = 0;
   out_4047590025697809582[10] = 0;
   out_4047590025697809582[11] = 0;
   out_4047590025697809582[12] = 0;
   out_4047590025697809582[13] = 0;
   out_4047590025697809582[14] = 0;
   out_4047590025697809582[15] = 0;
   out_4047590025697809582[16] = 0;
   out_4047590025697809582[17] = 0;
   out_4047590025697809582[18] = 0;
   out_4047590025697809582[19] = 0;
   out_4047590025697809582[20] = 0;
   out_4047590025697809582[21] = 0;
   out_4047590025697809582[22] = 0;
   out_4047590025697809582[23] = 0;
   out_4047590025697809582[24] = 0;
   out_4047590025697809582[25] = 0;
   out_4047590025697809582[26] = 1;
   out_4047590025697809582[27] = 0;
   out_4047590025697809582[28] = 0;
   out_4047590025697809582[29] = 0;
   out_4047590025697809582[30] = 0;
   out_4047590025697809582[31] = 0;
   out_4047590025697809582[32] = 0;
   out_4047590025697809582[33] = 0;
   out_4047590025697809582[34] = 0;
   out_4047590025697809582[35] = 0;
   out_4047590025697809582[36] = 0;
   out_4047590025697809582[37] = 0;
   out_4047590025697809582[38] = 0;
   out_4047590025697809582[39] = 0;
   out_4047590025697809582[40] = 0;
   out_4047590025697809582[41] = 0;
   out_4047590025697809582[42] = 0;
   out_4047590025697809582[43] = 0;
   out_4047590025697809582[44] = 0;
   out_4047590025697809582[45] = 0;
   out_4047590025697809582[46] = 0;
   out_4047590025697809582[47] = 0;
   out_4047590025697809582[48] = 0;
   out_4047590025697809582[49] = 1;
   out_4047590025697809582[50] = 0;
   out_4047590025697809582[51] = 0;
   out_4047590025697809582[52] = 0;
   out_4047590025697809582[53] = 0;
   out_4047590025697809582[54] = 0;
   out_4047590025697809582[55] = 0;
   out_4047590025697809582[56] = 0;
   out_4047590025697809582[57] = 0;
   out_4047590025697809582[58] = 0;
   out_4047590025697809582[59] = 0;
   out_4047590025697809582[60] = 0;
   out_4047590025697809582[61] = 0;
   out_4047590025697809582[62] = 0;
   out_4047590025697809582[63] = 0;
   out_4047590025697809582[64] = 0;
   out_4047590025697809582[65] = 0;
   out_4047590025697809582[66] = 0;
   out_4047590025697809582[67] = 0;
   out_4047590025697809582[68] = 0;
   out_4047590025697809582[69] = 0;
   out_4047590025697809582[70] = 0;
   out_4047590025697809582[71] = 0;
   out_4047590025697809582[72] = 1;
   out_4047590025697809582[73] = 0;
   out_4047590025697809582[74] = 0;
   out_4047590025697809582[75] = 0;
   out_4047590025697809582[76] = 0;
   out_4047590025697809582[77] = 0;
   out_4047590025697809582[78] = 0;
   out_4047590025697809582[79] = 0;
   out_4047590025697809582[80] = 0;
   out_4047590025697809582[81] = 0;
   out_4047590025697809582[82] = 0;
   out_4047590025697809582[83] = 0;
   out_4047590025697809582[84] = 0;
   out_4047590025697809582[85] = 0;
   out_4047590025697809582[86] = 0;
   out_4047590025697809582[87] = 0;
}
void h_13(double *state, double *unused, double *out_6823959863893977632) {
   out_6823959863893977632[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6823959863893977632[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6823959863893977632[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5256338612527669940) {
   out_5256338612527669940[0] = 0;
   out_5256338612527669940[1] = 0;
   out_5256338612527669940[2] = 0;
   out_5256338612527669940[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5256338612527669940[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5256338612527669940[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5256338612527669940[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5256338612527669940[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5256338612527669940[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5256338612527669940[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5256338612527669940[10] = 0;
   out_5256338612527669940[11] = 0;
   out_5256338612527669940[12] = 0;
   out_5256338612527669940[13] = 0;
   out_5256338612527669940[14] = 0;
   out_5256338612527669940[15] = 0;
   out_5256338612527669940[16] = 0;
   out_5256338612527669940[17] = 0;
   out_5256338612527669940[18] = 0;
   out_5256338612527669940[19] = 0;
   out_5256338612527669940[20] = 0;
   out_5256338612527669940[21] = 0;
   out_5256338612527669940[22] = 0;
   out_5256338612527669940[23] = 0;
   out_5256338612527669940[24] = 0;
   out_5256338612527669940[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5256338612527669940[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5256338612527669940[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5256338612527669940[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5256338612527669940[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5256338612527669940[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5256338612527669940[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5256338612527669940[32] = 0;
   out_5256338612527669940[33] = 0;
   out_5256338612527669940[34] = 0;
   out_5256338612527669940[35] = 0;
   out_5256338612527669940[36] = 0;
   out_5256338612527669940[37] = 0;
   out_5256338612527669940[38] = 0;
   out_5256338612527669940[39] = 0;
   out_5256338612527669940[40] = 0;
   out_5256338612527669940[41] = 0;
   out_5256338612527669940[42] = 0;
   out_5256338612527669940[43] = 0;
   out_5256338612527669940[44] = 0;
   out_5256338612527669940[45] = 0;
   out_5256338612527669940[46] = 0;
   out_5256338612527669940[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5256338612527669940[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5256338612527669940[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5256338612527669940[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5256338612527669940[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5256338612527669940[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5256338612527669940[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5256338612527669940[54] = 0;
   out_5256338612527669940[55] = 0;
   out_5256338612527669940[56] = 0;
   out_5256338612527669940[57] = 0;
   out_5256338612527669940[58] = 0;
   out_5256338612527669940[59] = 0;
   out_5256338612527669940[60] = 0;
   out_5256338612527669940[61] = 0;
   out_5256338612527669940[62] = 0;
   out_5256338612527669940[63] = 0;
   out_5256338612527669940[64] = 0;
   out_5256338612527669940[65] = 0;
}
void h_14(double *state, double *unused, double *out_2956207272003695430) {
   out_2956207272003695430[0] = state[10];
   out_2956207272003695430[1] = state[11];
   out_2956207272003695430[2] = state[12];
}
void H_14(double *state, double *unused, double *out_258197932746709957) {
   out_258197932746709957[0] = 0;
   out_258197932746709957[1] = 0;
   out_258197932746709957[2] = 0;
   out_258197932746709957[3] = 0;
   out_258197932746709957[4] = 0;
   out_258197932746709957[5] = 0;
   out_258197932746709957[6] = 0;
   out_258197932746709957[7] = 0;
   out_258197932746709957[8] = 0;
   out_258197932746709957[9] = 0;
   out_258197932746709957[10] = 1;
   out_258197932746709957[11] = 0;
   out_258197932746709957[12] = 0;
   out_258197932746709957[13] = 0;
   out_258197932746709957[14] = 0;
   out_258197932746709957[15] = 0;
   out_258197932746709957[16] = 0;
   out_258197932746709957[17] = 0;
   out_258197932746709957[18] = 0;
   out_258197932746709957[19] = 0;
   out_258197932746709957[20] = 0;
   out_258197932746709957[21] = 0;
   out_258197932746709957[22] = 0;
   out_258197932746709957[23] = 0;
   out_258197932746709957[24] = 0;
   out_258197932746709957[25] = 0;
   out_258197932746709957[26] = 0;
   out_258197932746709957[27] = 0;
   out_258197932746709957[28] = 0;
   out_258197932746709957[29] = 0;
   out_258197932746709957[30] = 0;
   out_258197932746709957[31] = 0;
   out_258197932746709957[32] = 0;
   out_258197932746709957[33] = 1;
   out_258197932746709957[34] = 0;
   out_258197932746709957[35] = 0;
   out_258197932746709957[36] = 0;
   out_258197932746709957[37] = 0;
   out_258197932746709957[38] = 0;
   out_258197932746709957[39] = 0;
   out_258197932746709957[40] = 0;
   out_258197932746709957[41] = 0;
   out_258197932746709957[42] = 0;
   out_258197932746709957[43] = 0;
   out_258197932746709957[44] = 0;
   out_258197932746709957[45] = 0;
   out_258197932746709957[46] = 0;
   out_258197932746709957[47] = 0;
   out_258197932746709957[48] = 0;
   out_258197932746709957[49] = 0;
   out_258197932746709957[50] = 0;
   out_258197932746709957[51] = 0;
   out_258197932746709957[52] = 0;
   out_258197932746709957[53] = 0;
   out_258197932746709957[54] = 0;
   out_258197932746709957[55] = 0;
   out_258197932746709957[56] = 1;
   out_258197932746709957[57] = 0;
   out_258197932746709957[58] = 0;
   out_258197932746709957[59] = 0;
   out_258197932746709957[60] = 0;
   out_258197932746709957[61] = 0;
   out_258197932746709957[62] = 0;
   out_258197932746709957[63] = 0;
   out_258197932746709957[64] = 0;
   out_258197932746709957[65] = 0;
}
void h_33(double *state, double *unused, double *out_4690348640723019468) {
   out_4690348640723019468[0] = state[16];
   out_4690348640723019468[1] = state[17];
   out_4690348640723019468[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6017831482635164378) {
   out_6017831482635164378[0] = 0;
   out_6017831482635164378[1] = 0;
   out_6017831482635164378[2] = 0;
   out_6017831482635164378[3] = 0;
   out_6017831482635164378[4] = 0;
   out_6017831482635164378[5] = 0;
   out_6017831482635164378[6] = 0;
   out_6017831482635164378[7] = 0;
   out_6017831482635164378[8] = 0;
   out_6017831482635164378[9] = 0;
   out_6017831482635164378[10] = 0;
   out_6017831482635164378[11] = 0;
   out_6017831482635164378[12] = 0;
   out_6017831482635164378[13] = 0;
   out_6017831482635164378[14] = 0;
   out_6017831482635164378[15] = 0;
   out_6017831482635164378[16] = 1;
   out_6017831482635164378[17] = 0;
   out_6017831482635164378[18] = 0;
   out_6017831482635164378[19] = 0;
   out_6017831482635164378[20] = 0;
   out_6017831482635164378[21] = 0;
   out_6017831482635164378[22] = 0;
   out_6017831482635164378[23] = 0;
   out_6017831482635164378[24] = 0;
   out_6017831482635164378[25] = 0;
   out_6017831482635164378[26] = 0;
   out_6017831482635164378[27] = 0;
   out_6017831482635164378[28] = 0;
   out_6017831482635164378[29] = 0;
   out_6017831482635164378[30] = 0;
   out_6017831482635164378[31] = 0;
   out_6017831482635164378[32] = 0;
   out_6017831482635164378[33] = 0;
   out_6017831482635164378[34] = 0;
   out_6017831482635164378[35] = 0;
   out_6017831482635164378[36] = 0;
   out_6017831482635164378[37] = 0;
   out_6017831482635164378[38] = 0;
   out_6017831482635164378[39] = 1;
   out_6017831482635164378[40] = 0;
   out_6017831482635164378[41] = 0;
   out_6017831482635164378[42] = 0;
   out_6017831482635164378[43] = 0;
   out_6017831482635164378[44] = 0;
   out_6017831482635164378[45] = 0;
   out_6017831482635164378[46] = 0;
   out_6017831482635164378[47] = 0;
   out_6017831482635164378[48] = 0;
   out_6017831482635164378[49] = 0;
   out_6017831482635164378[50] = 0;
   out_6017831482635164378[51] = 0;
   out_6017831482635164378[52] = 0;
   out_6017831482635164378[53] = 0;
   out_6017831482635164378[54] = 0;
   out_6017831482635164378[55] = 0;
   out_6017831482635164378[56] = 0;
   out_6017831482635164378[57] = 0;
   out_6017831482635164378[58] = 0;
   out_6017831482635164378[59] = 0;
   out_6017831482635164378[60] = 0;
   out_6017831482635164378[61] = 0;
   out_6017831482635164378[62] = 1;
   out_6017831482635164378[63] = 0;
   out_6017831482635164378[64] = 0;
   out_6017831482635164378[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_9191720918565895292) {
  H(in_vec, out_9191720918565895292);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4097545666249594925) {
  err_fun(nom_x, delta_x, out_4097545666249594925);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5294404423203983721) {
  inv_err_fun(nom_x, true_x, out_5294404423203983721);
}
void live_H_mod_fun(double *state, double *out_3638656807510898365) {
  H_mod_fun(state, out_3638656807510898365);
}
void live_f_fun(double *state, double dt, double *out_4064418078486338310) {
  f_fun(state,  dt, out_4064418078486338310);
}
void live_F_fun(double *state, double dt, double *out_4074196571012395889) {
  F_fun(state,  dt, out_4074196571012395889);
}
void live_h_4(double *state, double *unused, double *out_8366072108827298312) {
  h_4(state, unused, out_8366072108827298312);
}
void live_H_4(double *state, double *unused, double *out_499387579376300602) {
  H_4(state, unused, out_499387579376300602);
}
void live_h_9(double *state, double *unused, double *out_2956207272003695430) {
  h_9(state, unused, out_2956207272003695430);
}
void live_H_9(double *state, double *unused, double *out_258197932746709957) {
  H_9(state, unused, out_258197932746709957);
}
void live_h_10(double *state, double *unused, double *out_9173627037127896632) {
  h_10(state, unused, out_9173627037127896632);
}
void live_H_10(double *state, double *unused, double *out_6757501493105471108) {
  H_10(state, unused, out_6757501493105471108);
}
void live_h_12(double *state, double *unused, double *out_9016299843067629392) {
  h_12(state, unused, out_9016299843067629392);
}
void live_H_12(double *state, double *unused, double *out_4520068828655661193) {
  H_12(state, unused, out_4520068828655661193);
}
void live_h_35(double *state, double *unused, double *out_8897869277968490229) {
  h_35(state, unused, out_8897869277968490229);
}
void live_H_35(double *state, double *unused, double *out_2867274477996306774) {
  H_35(state, unused, out_2867274477996306774);
}
void live_h_32(double *state, double *unused, double *out_2172986558537042211) {
  h_32(state, unused, out_2172986558537042211);
}
void live_H_32(double *state, double *unused, double *out_4047590025697809582) {
  H_32(state, unused, out_4047590025697809582);
}
void live_h_13(double *state, double *unused, double *out_6823959863893977632) {
  h_13(state, unused, out_6823959863893977632);
}
void live_H_13(double *state, double *unused, double *out_5256338612527669940) {
  H_13(state, unused, out_5256338612527669940);
}
void live_h_14(double *state, double *unused, double *out_2956207272003695430) {
  h_14(state, unused, out_2956207272003695430);
}
void live_H_14(double *state, double *unused, double *out_258197932746709957) {
  H_14(state, unused, out_258197932746709957);
}
void live_h_33(double *state, double *unused, double *out_4690348640723019468) {
  h_33(state, unused, out_4690348640723019468);
}
void live_H_33(double *state, double *unused, double *out_6017831482635164378) {
  H_33(state, unused, out_6017831482635164378);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
