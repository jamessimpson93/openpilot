#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2337898968706533344) {
   out_2337898968706533344[0] = 0;
   out_2337898968706533344[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2337898968706533344[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2337898968706533344[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2337898968706533344[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2337898968706533344[5] = -sin(in_vec[1]);
   out_2337898968706533344[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2337898968706533344[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2337898968706533344[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2337898968706533344[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2337898968706533344[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2337898968706533344[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2337898968706533344[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2337898968706533344[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2337898968706533344[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2337898968706533344[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2337898968706533344[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2337898968706533344[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6878075311318465643) {
   out_6878075311318465643[0] = delta_x[0] + nom_x[0];
   out_6878075311318465643[1] = delta_x[1] + nom_x[1];
   out_6878075311318465643[2] = delta_x[2] + nom_x[2];
   out_6878075311318465643[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6878075311318465643[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6878075311318465643[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6878075311318465643[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6878075311318465643[7] = delta_x[6] + nom_x[7];
   out_6878075311318465643[8] = delta_x[7] + nom_x[8];
   out_6878075311318465643[9] = delta_x[8] + nom_x[9];
   out_6878075311318465643[10] = delta_x[9] + nom_x[10];
   out_6878075311318465643[11] = delta_x[10] + nom_x[11];
   out_6878075311318465643[12] = delta_x[11] + nom_x[12];
   out_6878075311318465643[13] = delta_x[12] + nom_x[13];
   out_6878075311318465643[14] = delta_x[13] + nom_x[14];
   out_6878075311318465643[15] = delta_x[14] + nom_x[15];
   out_6878075311318465643[16] = delta_x[15] + nom_x[16];
   out_6878075311318465643[17] = delta_x[16] + nom_x[17];
   out_6878075311318465643[18] = delta_x[17] + nom_x[18];
   out_6878075311318465643[19] = delta_x[18] + nom_x[19];
   out_6878075311318465643[20] = delta_x[19] + nom_x[20];
   out_6878075311318465643[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1794092814993268924) {
   out_1794092814993268924[0] = -nom_x[0] + true_x[0];
   out_1794092814993268924[1] = -nom_x[1] + true_x[1];
   out_1794092814993268924[2] = -nom_x[2] + true_x[2];
   out_1794092814993268924[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1794092814993268924[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1794092814993268924[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1794092814993268924[6] = -nom_x[7] + true_x[7];
   out_1794092814993268924[7] = -nom_x[8] + true_x[8];
   out_1794092814993268924[8] = -nom_x[9] + true_x[9];
   out_1794092814993268924[9] = -nom_x[10] + true_x[10];
   out_1794092814993268924[10] = -nom_x[11] + true_x[11];
   out_1794092814993268924[11] = -nom_x[12] + true_x[12];
   out_1794092814993268924[12] = -nom_x[13] + true_x[13];
   out_1794092814993268924[13] = -nom_x[14] + true_x[14];
   out_1794092814993268924[14] = -nom_x[15] + true_x[15];
   out_1794092814993268924[15] = -nom_x[16] + true_x[16];
   out_1794092814993268924[16] = -nom_x[17] + true_x[17];
   out_1794092814993268924[17] = -nom_x[18] + true_x[18];
   out_1794092814993268924[18] = -nom_x[19] + true_x[19];
   out_1794092814993268924[19] = -nom_x[20] + true_x[20];
   out_1794092814993268924[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6748437875193912696) {
   out_6748437875193912696[0] = 1.0;
   out_6748437875193912696[1] = 0;
   out_6748437875193912696[2] = 0;
   out_6748437875193912696[3] = 0;
   out_6748437875193912696[4] = 0;
   out_6748437875193912696[5] = 0;
   out_6748437875193912696[6] = 0;
   out_6748437875193912696[7] = 0;
   out_6748437875193912696[8] = 0;
   out_6748437875193912696[9] = 0;
   out_6748437875193912696[10] = 0;
   out_6748437875193912696[11] = 0;
   out_6748437875193912696[12] = 0;
   out_6748437875193912696[13] = 0;
   out_6748437875193912696[14] = 0;
   out_6748437875193912696[15] = 0;
   out_6748437875193912696[16] = 0;
   out_6748437875193912696[17] = 0;
   out_6748437875193912696[18] = 0;
   out_6748437875193912696[19] = 0;
   out_6748437875193912696[20] = 0;
   out_6748437875193912696[21] = 0;
   out_6748437875193912696[22] = 1.0;
   out_6748437875193912696[23] = 0;
   out_6748437875193912696[24] = 0;
   out_6748437875193912696[25] = 0;
   out_6748437875193912696[26] = 0;
   out_6748437875193912696[27] = 0;
   out_6748437875193912696[28] = 0;
   out_6748437875193912696[29] = 0;
   out_6748437875193912696[30] = 0;
   out_6748437875193912696[31] = 0;
   out_6748437875193912696[32] = 0;
   out_6748437875193912696[33] = 0;
   out_6748437875193912696[34] = 0;
   out_6748437875193912696[35] = 0;
   out_6748437875193912696[36] = 0;
   out_6748437875193912696[37] = 0;
   out_6748437875193912696[38] = 0;
   out_6748437875193912696[39] = 0;
   out_6748437875193912696[40] = 0;
   out_6748437875193912696[41] = 0;
   out_6748437875193912696[42] = 0;
   out_6748437875193912696[43] = 0;
   out_6748437875193912696[44] = 1.0;
   out_6748437875193912696[45] = 0;
   out_6748437875193912696[46] = 0;
   out_6748437875193912696[47] = 0;
   out_6748437875193912696[48] = 0;
   out_6748437875193912696[49] = 0;
   out_6748437875193912696[50] = 0;
   out_6748437875193912696[51] = 0;
   out_6748437875193912696[52] = 0;
   out_6748437875193912696[53] = 0;
   out_6748437875193912696[54] = 0;
   out_6748437875193912696[55] = 0;
   out_6748437875193912696[56] = 0;
   out_6748437875193912696[57] = 0;
   out_6748437875193912696[58] = 0;
   out_6748437875193912696[59] = 0;
   out_6748437875193912696[60] = 0;
   out_6748437875193912696[61] = 0;
   out_6748437875193912696[62] = 0;
   out_6748437875193912696[63] = 0;
   out_6748437875193912696[64] = 0;
   out_6748437875193912696[65] = 0;
   out_6748437875193912696[66] = -0.5*state[4];
   out_6748437875193912696[67] = -0.5*state[5];
   out_6748437875193912696[68] = -0.5*state[6];
   out_6748437875193912696[69] = 0;
   out_6748437875193912696[70] = 0;
   out_6748437875193912696[71] = 0;
   out_6748437875193912696[72] = 0;
   out_6748437875193912696[73] = 0;
   out_6748437875193912696[74] = 0;
   out_6748437875193912696[75] = 0;
   out_6748437875193912696[76] = 0;
   out_6748437875193912696[77] = 0;
   out_6748437875193912696[78] = 0;
   out_6748437875193912696[79] = 0;
   out_6748437875193912696[80] = 0;
   out_6748437875193912696[81] = 0;
   out_6748437875193912696[82] = 0;
   out_6748437875193912696[83] = 0;
   out_6748437875193912696[84] = 0;
   out_6748437875193912696[85] = 0;
   out_6748437875193912696[86] = 0;
   out_6748437875193912696[87] = 0.5*state[3];
   out_6748437875193912696[88] = 0.5*state[6];
   out_6748437875193912696[89] = -0.5*state[5];
   out_6748437875193912696[90] = 0;
   out_6748437875193912696[91] = 0;
   out_6748437875193912696[92] = 0;
   out_6748437875193912696[93] = 0;
   out_6748437875193912696[94] = 0;
   out_6748437875193912696[95] = 0;
   out_6748437875193912696[96] = 0;
   out_6748437875193912696[97] = 0;
   out_6748437875193912696[98] = 0;
   out_6748437875193912696[99] = 0;
   out_6748437875193912696[100] = 0;
   out_6748437875193912696[101] = 0;
   out_6748437875193912696[102] = 0;
   out_6748437875193912696[103] = 0;
   out_6748437875193912696[104] = 0;
   out_6748437875193912696[105] = 0;
   out_6748437875193912696[106] = 0;
   out_6748437875193912696[107] = 0;
   out_6748437875193912696[108] = -0.5*state[6];
   out_6748437875193912696[109] = 0.5*state[3];
   out_6748437875193912696[110] = 0.5*state[4];
   out_6748437875193912696[111] = 0;
   out_6748437875193912696[112] = 0;
   out_6748437875193912696[113] = 0;
   out_6748437875193912696[114] = 0;
   out_6748437875193912696[115] = 0;
   out_6748437875193912696[116] = 0;
   out_6748437875193912696[117] = 0;
   out_6748437875193912696[118] = 0;
   out_6748437875193912696[119] = 0;
   out_6748437875193912696[120] = 0;
   out_6748437875193912696[121] = 0;
   out_6748437875193912696[122] = 0;
   out_6748437875193912696[123] = 0;
   out_6748437875193912696[124] = 0;
   out_6748437875193912696[125] = 0;
   out_6748437875193912696[126] = 0;
   out_6748437875193912696[127] = 0;
   out_6748437875193912696[128] = 0;
   out_6748437875193912696[129] = 0.5*state[5];
   out_6748437875193912696[130] = -0.5*state[4];
   out_6748437875193912696[131] = 0.5*state[3];
   out_6748437875193912696[132] = 0;
   out_6748437875193912696[133] = 0;
   out_6748437875193912696[134] = 0;
   out_6748437875193912696[135] = 0;
   out_6748437875193912696[136] = 0;
   out_6748437875193912696[137] = 0;
   out_6748437875193912696[138] = 0;
   out_6748437875193912696[139] = 0;
   out_6748437875193912696[140] = 0;
   out_6748437875193912696[141] = 0;
   out_6748437875193912696[142] = 0;
   out_6748437875193912696[143] = 0;
   out_6748437875193912696[144] = 0;
   out_6748437875193912696[145] = 0;
   out_6748437875193912696[146] = 0;
   out_6748437875193912696[147] = 0;
   out_6748437875193912696[148] = 0;
   out_6748437875193912696[149] = 0;
   out_6748437875193912696[150] = 0;
   out_6748437875193912696[151] = 0;
   out_6748437875193912696[152] = 0;
   out_6748437875193912696[153] = 1.0;
   out_6748437875193912696[154] = 0;
   out_6748437875193912696[155] = 0;
   out_6748437875193912696[156] = 0;
   out_6748437875193912696[157] = 0;
   out_6748437875193912696[158] = 0;
   out_6748437875193912696[159] = 0;
   out_6748437875193912696[160] = 0;
   out_6748437875193912696[161] = 0;
   out_6748437875193912696[162] = 0;
   out_6748437875193912696[163] = 0;
   out_6748437875193912696[164] = 0;
   out_6748437875193912696[165] = 0;
   out_6748437875193912696[166] = 0;
   out_6748437875193912696[167] = 0;
   out_6748437875193912696[168] = 0;
   out_6748437875193912696[169] = 0;
   out_6748437875193912696[170] = 0;
   out_6748437875193912696[171] = 0;
   out_6748437875193912696[172] = 0;
   out_6748437875193912696[173] = 0;
   out_6748437875193912696[174] = 0;
   out_6748437875193912696[175] = 1.0;
   out_6748437875193912696[176] = 0;
   out_6748437875193912696[177] = 0;
   out_6748437875193912696[178] = 0;
   out_6748437875193912696[179] = 0;
   out_6748437875193912696[180] = 0;
   out_6748437875193912696[181] = 0;
   out_6748437875193912696[182] = 0;
   out_6748437875193912696[183] = 0;
   out_6748437875193912696[184] = 0;
   out_6748437875193912696[185] = 0;
   out_6748437875193912696[186] = 0;
   out_6748437875193912696[187] = 0;
   out_6748437875193912696[188] = 0;
   out_6748437875193912696[189] = 0;
   out_6748437875193912696[190] = 0;
   out_6748437875193912696[191] = 0;
   out_6748437875193912696[192] = 0;
   out_6748437875193912696[193] = 0;
   out_6748437875193912696[194] = 0;
   out_6748437875193912696[195] = 0;
   out_6748437875193912696[196] = 0;
   out_6748437875193912696[197] = 1.0;
   out_6748437875193912696[198] = 0;
   out_6748437875193912696[199] = 0;
   out_6748437875193912696[200] = 0;
   out_6748437875193912696[201] = 0;
   out_6748437875193912696[202] = 0;
   out_6748437875193912696[203] = 0;
   out_6748437875193912696[204] = 0;
   out_6748437875193912696[205] = 0;
   out_6748437875193912696[206] = 0;
   out_6748437875193912696[207] = 0;
   out_6748437875193912696[208] = 0;
   out_6748437875193912696[209] = 0;
   out_6748437875193912696[210] = 0;
   out_6748437875193912696[211] = 0;
   out_6748437875193912696[212] = 0;
   out_6748437875193912696[213] = 0;
   out_6748437875193912696[214] = 0;
   out_6748437875193912696[215] = 0;
   out_6748437875193912696[216] = 0;
   out_6748437875193912696[217] = 0;
   out_6748437875193912696[218] = 0;
   out_6748437875193912696[219] = 1.0;
   out_6748437875193912696[220] = 0;
   out_6748437875193912696[221] = 0;
   out_6748437875193912696[222] = 0;
   out_6748437875193912696[223] = 0;
   out_6748437875193912696[224] = 0;
   out_6748437875193912696[225] = 0;
   out_6748437875193912696[226] = 0;
   out_6748437875193912696[227] = 0;
   out_6748437875193912696[228] = 0;
   out_6748437875193912696[229] = 0;
   out_6748437875193912696[230] = 0;
   out_6748437875193912696[231] = 0;
   out_6748437875193912696[232] = 0;
   out_6748437875193912696[233] = 0;
   out_6748437875193912696[234] = 0;
   out_6748437875193912696[235] = 0;
   out_6748437875193912696[236] = 0;
   out_6748437875193912696[237] = 0;
   out_6748437875193912696[238] = 0;
   out_6748437875193912696[239] = 0;
   out_6748437875193912696[240] = 0;
   out_6748437875193912696[241] = 1.0;
   out_6748437875193912696[242] = 0;
   out_6748437875193912696[243] = 0;
   out_6748437875193912696[244] = 0;
   out_6748437875193912696[245] = 0;
   out_6748437875193912696[246] = 0;
   out_6748437875193912696[247] = 0;
   out_6748437875193912696[248] = 0;
   out_6748437875193912696[249] = 0;
   out_6748437875193912696[250] = 0;
   out_6748437875193912696[251] = 0;
   out_6748437875193912696[252] = 0;
   out_6748437875193912696[253] = 0;
   out_6748437875193912696[254] = 0;
   out_6748437875193912696[255] = 0;
   out_6748437875193912696[256] = 0;
   out_6748437875193912696[257] = 0;
   out_6748437875193912696[258] = 0;
   out_6748437875193912696[259] = 0;
   out_6748437875193912696[260] = 0;
   out_6748437875193912696[261] = 0;
   out_6748437875193912696[262] = 0;
   out_6748437875193912696[263] = 1.0;
   out_6748437875193912696[264] = 0;
   out_6748437875193912696[265] = 0;
   out_6748437875193912696[266] = 0;
   out_6748437875193912696[267] = 0;
   out_6748437875193912696[268] = 0;
   out_6748437875193912696[269] = 0;
   out_6748437875193912696[270] = 0;
   out_6748437875193912696[271] = 0;
   out_6748437875193912696[272] = 0;
   out_6748437875193912696[273] = 0;
   out_6748437875193912696[274] = 0;
   out_6748437875193912696[275] = 0;
   out_6748437875193912696[276] = 0;
   out_6748437875193912696[277] = 0;
   out_6748437875193912696[278] = 0;
   out_6748437875193912696[279] = 0;
   out_6748437875193912696[280] = 0;
   out_6748437875193912696[281] = 0;
   out_6748437875193912696[282] = 0;
   out_6748437875193912696[283] = 0;
   out_6748437875193912696[284] = 0;
   out_6748437875193912696[285] = 1.0;
   out_6748437875193912696[286] = 0;
   out_6748437875193912696[287] = 0;
   out_6748437875193912696[288] = 0;
   out_6748437875193912696[289] = 0;
   out_6748437875193912696[290] = 0;
   out_6748437875193912696[291] = 0;
   out_6748437875193912696[292] = 0;
   out_6748437875193912696[293] = 0;
   out_6748437875193912696[294] = 0;
   out_6748437875193912696[295] = 0;
   out_6748437875193912696[296] = 0;
   out_6748437875193912696[297] = 0;
   out_6748437875193912696[298] = 0;
   out_6748437875193912696[299] = 0;
   out_6748437875193912696[300] = 0;
   out_6748437875193912696[301] = 0;
   out_6748437875193912696[302] = 0;
   out_6748437875193912696[303] = 0;
   out_6748437875193912696[304] = 0;
   out_6748437875193912696[305] = 0;
   out_6748437875193912696[306] = 0;
   out_6748437875193912696[307] = 1.0;
   out_6748437875193912696[308] = 0;
   out_6748437875193912696[309] = 0;
   out_6748437875193912696[310] = 0;
   out_6748437875193912696[311] = 0;
   out_6748437875193912696[312] = 0;
   out_6748437875193912696[313] = 0;
   out_6748437875193912696[314] = 0;
   out_6748437875193912696[315] = 0;
   out_6748437875193912696[316] = 0;
   out_6748437875193912696[317] = 0;
   out_6748437875193912696[318] = 0;
   out_6748437875193912696[319] = 0;
   out_6748437875193912696[320] = 0;
   out_6748437875193912696[321] = 0;
   out_6748437875193912696[322] = 0;
   out_6748437875193912696[323] = 0;
   out_6748437875193912696[324] = 0;
   out_6748437875193912696[325] = 0;
   out_6748437875193912696[326] = 0;
   out_6748437875193912696[327] = 0;
   out_6748437875193912696[328] = 0;
   out_6748437875193912696[329] = 1.0;
   out_6748437875193912696[330] = 0;
   out_6748437875193912696[331] = 0;
   out_6748437875193912696[332] = 0;
   out_6748437875193912696[333] = 0;
   out_6748437875193912696[334] = 0;
   out_6748437875193912696[335] = 0;
   out_6748437875193912696[336] = 0;
   out_6748437875193912696[337] = 0;
   out_6748437875193912696[338] = 0;
   out_6748437875193912696[339] = 0;
   out_6748437875193912696[340] = 0;
   out_6748437875193912696[341] = 0;
   out_6748437875193912696[342] = 0;
   out_6748437875193912696[343] = 0;
   out_6748437875193912696[344] = 0;
   out_6748437875193912696[345] = 0;
   out_6748437875193912696[346] = 0;
   out_6748437875193912696[347] = 0;
   out_6748437875193912696[348] = 0;
   out_6748437875193912696[349] = 0;
   out_6748437875193912696[350] = 0;
   out_6748437875193912696[351] = 1.0;
   out_6748437875193912696[352] = 0;
   out_6748437875193912696[353] = 0;
   out_6748437875193912696[354] = 0;
   out_6748437875193912696[355] = 0;
   out_6748437875193912696[356] = 0;
   out_6748437875193912696[357] = 0;
   out_6748437875193912696[358] = 0;
   out_6748437875193912696[359] = 0;
   out_6748437875193912696[360] = 0;
   out_6748437875193912696[361] = 0;
   out_6748437875193912696[362] = 0;
   out_6748437875193912696[363] = 0;
   out_6748437875193912696[364] = 0;
   out_6748437875193912696[365] = 0;
   out_6748437875193912696[366] = 0;
   out_6748437875193912696[367] = 0;
   out_6748437875193912696[368] = 0;
   out_6748437875193912696[369] = 0;
   out_6748437875193912696[370] = 0;
   out_6748437875193912696[371] = 0;
   out_6748437875193912696[372] = 0;
   out_6748437875193912696[373] = 1.0;
   out_6748437875193912696[374] = 0;
   out_6748437875193912696[375] = 0;
   out_6748437875193912696[376] = 0;
   out_6748437875193912696[377] = 0;
   out_6748437875193912696[378] = 0;
   out_6748437875193912696[379] = 0;
   out_6748437875193912696[380] = 0;
   out_6748437875193912696[381] = 0;
   out_6748437875193912696[382] = 0;
   out_6748437875193912696[383] = 0;
   out_6748437875193912696[384] = 0;
   out_6748437875193912696[385] = 0;
   out_6748437875193912696[386] = 0;
   out_6748437875193912696[387] = 0;
   out_6748437875193912696[388] = 0;
   out_6748437875193912696[389] = 0;
   out_6748437875193912696[390] = 0;
   out_6748437875193912696[391] = 0;
   out_6748437875193912696[392] = 0;
   out_6748437875193912696[393] = 0;
   out_6748437875193912696[394] = 0;
   out_6748437875193912696[395] = 1.0;
   out_6748437875193912696[396] = 0;
   out_6748437875193912696[397] = 0;
   out_6748437875193912696[398] = 0;
   out_6748437875193912696[399] = 0;
   out_6748437875193912696[400] = 0;
   out_6748437875193912696[401] = 0;
   out_6748437875193912696[402] = 0;
   out_6748437875193912696[403] = 0;
   out_6748437875193912696[404] = 0;
   out_6748437875193912696[405] = 0;
   out_6748437875193912696[406] = 0;
   out_6748437875193912696[407] = 0;
   out_6748437875193912696[408] = 0;
   out_6748437875193912696[409] = 0;
   out_6748437875193912696[410] = 0;
   out_6748437875193912696[411] = 0;
   out_6748437875193912696[412] = 0;
   out_6748437875193912696[413] = 0;
   out_6748437875193912696[414] = 0;
   out_6748437875193912696[415] = 0;
   out_6748437875193912696[416] = 0;
   out_6748437875193912696[417] = 1.0;
   out_6748437875193912696[418] = 0;
   out_6748437875193912696[419] = 0;
   out_6748437875193912696[420] = 0;
   out_6748437875193912696[421] = 0;
   out_6748437875193912696[422] = 0;
   out_6748437875193912696[423] = 0;
   out_6748437875193912696[424] = 0;
   out_6748437875193912696[425] = 0;
   out_6748437875193912696[426] = 0;
   out_6748437875193912696[427] = 0;
   out_6748437875193912696[428] = 0;
   out_6748437875193912696[429] = 0;
   out_6748437875193912696[430] = 0;
   out_6748437875193912696[431] = 0;
   out_6748437875193912696[432] = 0;
   out_6748437875193912696[433] = 0;
   out_6748437875193912696[434] = 0;
   out_6748437875193912696[435] = 0;
   out_6748437875193912696[436] = 0;
   out_6748437875193912696[437] = 0;
   out_6748437875193912696[438] = 0;
   out_6748437875193912696[439] = 1.0;
   out_6748437875193912696[440] = 0;
   out_6748437875193912696[441] = 0;
   out_6748437875193912696[442] = 0;
   out_6748437875193912696[443] = 0;
   out_6748437875193912696[444] = 0;
   out_6748437875193912696[445] = 0;
   out_6748437875193912696[446] = 0;
   out_6748437875193912696[447] = 0;
   out_6748437875193912696[448] = 0;
   out_6748437875193912696[449] = 0;
   out_6748437875193912696[450] = 0;
   out_6748437875193912696[451] = 0;
   out_6748437875193912696[452] = 0;
   out_6748437875193912696[453] = 0;
   out_6748437875193912696[454] = 0;
   out_6748437875193912696[455] = 0;
   out_6748437875193912696[456] = 0;
   out_6748437875193912696[457] = 0;
   out_6748437875193912696[458] = 0;
   out_6748437875193912696[459] = 0;
   out_6748437875193912696[460] = 0;
   out_6748437875193912696[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1742564737881391388) {
   out_1742564737881391388[0] = dt*state[7] + state[0];
   out_1742564737881391388[1] = dt*state[8] + state[1];
   out_1742564737881391388[2] = dt*state[9] + state[2];
   out_1742564737881391388[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1742564737881391388[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1742564737881391388[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1742564737881391388[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1742564737881391388[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1742564737881391388[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1742564737881391388[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1742564737881391388[10] = state[10];
   out_1742564737881391388[11] = state[11];
   out_1742564737881391388[12] = state[12];
   out_1742564737881391388[13] = state[13];
   out_1742564737881391388[14] = state[14];
   out_1742564737881391388[15] = state[15];
   out_1742564737881391388[16] = state[16];
   out_1742564737881391388[17] = state[17];
   out_1742564737881391388[18] = state[18];
   out_1742564737881391388[19] = state[19];
   out_1742564737881391388[20] = state[20];
   out_1742564737881391388[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5510140683284074867) {
   out_5510140683284074867[0] = 1;
   out_5510140683284074867[1] = 0;
   out_5510140683284074867[2] = 0;
   out_5510140683284074867[3] = 0;
   out_5510140683284074867[4] = 0;
   out_5510140683284074867[5] = 0;
   out_5510140683284074867[6] = dt;
   out_5510140683284074867[7] = 0;
   out_5510140683284074867[8] = 0;
   out_5510140683284074867[9] = 0;
   out_5510140683284074867[10] = 0;
   out_5510140683284074867[11] = 0;
   out_5510140683284074867[12] = 0;
   out_5510140683284074867[13] = 0;
   out_5510140683284074867[14] = 0;
   out_5510140683284074867[15] = 0;
   out_5510140683284074867[16] = 0;
   out_5510140683284074867[17] = 0;
   out_5510140683284074867[18] = 0;
   out_5510140683284074867[19] = 0;
   out_5510140683284074867[20] = 0;
   out_5510140683284074867[21] = 0;
   out_5510140683284074867[22] = 1;
   out_5510140683284074867[23] = 0;
   out_5510140683284074867[24] = 0;
   out_5510140683284074867[25] = 0;
   out_5510140683284074867[26] = 0;
   out_5510140683284074867[27] = 0;
   out_5510140683284074867[28] = dt;
   out_5510140683284074867[29] = 0;
   out_5510140683284074867[30] = 0;
   out_5510140683284074867[31] = 0;
   out_5510140683284074867[32] = 0;
   out_5510140683284074867[33] = 0;
   out_5510140683284074867[34] = 0;
   out_5510140683284074867[35] = 0;
   out_5510140683284074867[36] = 0;
   out_5510140683284074867[37] = 0;
   out_5510140683284074867[38] = 0;
   out_5510140683284074867[39] = 0;
   out_5510140683284074867[40] = 0;
   out_5510140683284074867[41] = 0;
   out_5510140683284074867[42] = 0;
   out_5510140683284074867[43] = 0;
   out_5510140683284074867[44] = 1;
   out_5510140683284074867[45] = 0;
   out_5510140683284074867[46] = 0;
   out_5510140683284074867[47] = 0;
   out_5510140683284074867[48] = 0;
   out_5510140683284074867[49] = 0;
   out_5510140683284074867[50] = dt;
   out_5510140683284074867[51] = 0;
   out_5510140683284074867[52] = 0;
   out_5510140683284074867[53] = 0;
   out_5510140683284074867[54] = 0;
   out_5510140683284074867[55] = 0;
   out_5510140683284074867[56] = 0;
   out_5510140683284074867[57] = 0;
   out_5510140683284074867[58] = 0;
   out_5510140683284074867[59] = 0;
   out_5510140683284074867[60] = 0;
   out_5510140683284074867[61] = 0;
   out_5510140683284074867[62] = 0;
   out_5510140683284074867[63] = 0;
   out_5510140683284074867[64] = 0;
   out_5510140683284074867[65] = 0;
   out_5510140683284074867[66] = 1;
   out_5510140683284074867[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5510140683284074867[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5510140683284074867[69] = 0;
   out_5510140683284074867[70] = 0;
   out_5510140683284074867[71] = 0;
   out_5510140683284074867[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5510140683284074867[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5510140683284074867[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5510140683284074867[75] = 0;
   out_5510140683284074867[76] = 0;
   out_5510140683284074867[77] = 0;
   out_5510140683284074867[78] = 0;
   out_5510140683284074867[79] = 0;
   out_5510140683284074867[80] = 0;
   out_5510140683284074867[81] = 0;
   out_5510140683284074867[82] = 0;
   out_5510140683284074867[83] = 0;
   out_5510140683284074867[84] = 0;
   out_5510140683284074867[85] = 0;
   out_5510140683284074867[86] = 0;
   out_5510140683284074867[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5510140683284074867[88] = 1;
   out_5510140683284074867[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5510140683284074867[90] = 0;
   out_5510140683284074867[91] = 0;
   out_5510140683284074867[92] = 0;
   out_5510140683284074867[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5510140683284074867[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5510140683284074867[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5510140683284074867[96] = 0;
   out_5510140683284074867[97] = 0;
   out_5510140683284074867[98] = 0;
   out_5510140683284074867[99] = 0;
   out_5510140683284074867[100] = 0;
   out_5510140683284074867[101] = 0;
   out_5510140683284074867[102] = 0;
   out_5510140683284074867[103] = 0;
   out_5510140683284074867[104] = 0;
   out_5510140683284074867[105] = 0;
   out_5510140683284074867[106] = 0;
   out_5510140683284074867[107] = 0;
   out_5510140683284074867[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5510140683284074867[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5510140683284074867[110] = 1;
   out_5510140683284074867[111] = 0;
   out_5510140683284074867[112] = 0;
   out_5510140683284074867[113] = 0;
   out_5510140683284074867[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5510140683284074867[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5510140683284074867[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5510140683284074867[117] = 0;
   out_5510140683284074867[118] = 0;
   out_5510140683284074867[119] = 0;
   out_5510140683284074867[120] = 0;
   out_5510140683284074867[121] = 0;
   out_5510140683284074867[122] = 0;
   out_5510140683284074867[123] = 0;
   out_5510140683284074867[124] = 0;
   out_5510140683284074867[125] = 0;
   out_5510140683284074867[126] = 0;
   out_5510140683284074867[127] = 0;
   out_5510140683284074867[128] = 0;
   out_5510140683284074867[129] = 0;
   out_5510140683284074867[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5510140683284074867[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5510140683284074867[132] = 1;
   out_5510140683284074867[133] = 0;
   out_5510140683284074867[134] = 0;
   out_5510140683284074867[135] = 0;
   out_5510140683284074867[136] = 0;
   out_5510140683284074867[137] = 0;
   out_5510140683284074867[138] = 0;
   out_5510140683284074867[139] = 0;
   out_5510140683284074867[140] = 0;
   out_5510140683284074867[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5510140683284074867[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5510140683284074867[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5510140683284074867[144] = 0;
   out_5510140683284074867[145] = 0;
   out_5510140683284074867[146] = 0;
   out_5510140683284074867[147] = 0;
   out_5510140683284074867[148] = 0;
   out_5510140683284074867[149] = 0;
   out_5510140683284074867[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5510140683284074867[151] = 0;
   out_5510140683284074867[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5510140683284074867[153] = 0;
   out_5510140683284074867[154] = 1;
   out_5510140683284074867[155] = 0;
   out_5510140683284074867[156] = 0;
   out_5510140683284074867[157] = 0;
   out_5510140683284074867[158] = 0;
   out_5510140683284074867[159] = 0;
   out_5510140683284074867[160] = 0;
   out_5510140683284074867[161] = 0;
   out_5510140683284074867[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5510140683284074867[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5510140683284074867[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5510140683284074867[165] = 0;
   out_5510140683284074867[166] = 0;
   out_5510140683284074867[167] = 0;
   out_5510140683284074867[168] = 0;
   out_5510140683284074867[169] = 0;
   out_5510140683284074867[170] = 0;
   out_5510140683284074867[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5510140683284074867[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5510140683284074867[173] = 0;
   out_5510140683284074867[174] = 0;
   out_5510140683284074867[175] = 0;
   out_5510140683284074867[176] = 1;
   out_5510140683284074867[177] = 0;
   out_5510140683284074867[178] = 0;
   out_5510140683284074867[179] = 0;
   out_5510140683284074867[180] = 0;
   out_5510140683284074867[181] = 0;
   out_5510140683284074867[182] = 0;
   out_5510140683284074867[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5510140683284074867[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5510140683284074867[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5510140683284074867[186] = 0;
   out_5510140683284074867[187] = 0;
   out_5510140683284074867[188] = 0;
   out_5510140683284074867[189] = 0;
   out_5510140683284074867[190] = 0;
   out_5510140683284074867[191] = 0;
   out_5510140683284074867[192] = 0;
   out_5510140683284074867[193] = 0;
   out_5510140683284074867[194] = 0;
   out_5510140683284074867[195] = 0;
   out_5510140683284074867[196] = 0;
   out_5510140683284074867[197] = 0;
   out_5510140683284074867[198] = 1;
   out_5510140683284074867[199] = 0;
   out_5510140683284074867[200] = 0;
   out_5510140683284074867[201] = 0;
   out_5510140683284074867[202] = 0;
   out_5510140683284074867[203] = 0;
   out_5510140683284074867[204] = 0;
   out_5510140683284074867[205] = 0;
   out_5510140683284074867[206] = 0;
   out_5510140683284074867[207] = 0;
   out_5510140683284074867[208] = 0;
   out_5510140683284074867[209] = 0;
   out_5510140683284074867[210] = 0;
   out_5510140683284074867[211] = 0;
   out_5510140683284074867[212] = 0;
   out_5510140683284074867[213] = 0;
   out_5510140683284074867[214] = 0;
   out_5510140683284074867[215] = 0;
   out_5510140683284074867[216] = 0;
   out_5510140683284074867[217] = 0;
   out_5510140683284074867[218] = 0;
   out_5510140683284074867[219] = 0;
   out_5510140683284074867[220] = 1;
   out_5510140683284074867[221] = 0;
   out_5510140683284074867[222] = 0;
   out_5510140683284074867[223] = 0;
   out_5510140683284074867[224] = 0;
   out_5510140683284074867[225] = 0;
   out_5510140683284074867[226] = 0;
   out_5510140683284074867[227] = 0;
   out_5510140683284074867[228] = 0;
   out_5510140683284074867[229] = 0;
   out_5510140683284074867[230] = 0;
   out_5510140683284074867[231] = 0;
   out_5510140683284074867[232] = 0;
   out_5510140683284074867[233] = 0;
   out_5510140683284074867[234] = 0;
   out_5510140683284074867[235] = 0;
   out_5510140683284074867[236] = 0;
   out_5510140683284074867[237] = 0;
   out_5510140683284074867[238] = 0;
   out_5510140683284074867[239] = 0;
   out_5510140683284074867[240] = 0;
   out_5510140683284074867[241] = 0;
   out_5510140683284074867[242] = 1;
   out_5510140683284074867[243] = 0;
   out_5510140683284074867[244] = 0;
   out_5510140683284074867[245] = 0;
   out_5510140683284074867[246] = 0;
   out_5510140683284074867[247] = 0;
   out_5510140683284074867[248] = 0;
   out_5510140683284074867[249] = 0;
   out_5510140683284074867[250] = 0;
   out_5510140683284074867[251] = 0;
   out_5510140683284074867[252] = 0;
   out_5510140683284074867[253] = 0;
   out_5510140683284074867[254] = 0;
   out_5510140683284074867[255] = 0;
   out_5510140683284074867[256] = 0;
   out_5510140683284074867[257] = 0;
   out_5510140683284074867[258] = 0;
   out_5510140683284074867[259] = 0;
   out_5510140683284074867[260] = 0;
   out_5510140683284074867[261] = 0;
   out_5510140683284074867[262] = 0;
   out_5510140683284074867[263] = 0;
   out_5510140683284074867[264] = 1;
   out_5510140683284074867[265] = 0;
   out_5510140683284074867[266] = 0;
   out_5510140683284074867[267] = 0;
   out_5510140683284074867[268] = 0;
   out_5510140683284074867[269] = 0;
   out_5510140683284074867[270] = 0;
   out_5510140683284074867[271] = 0;
   out_5510140683284074867[272] = 0;
   out_5510140683284074867[273] = 0;
   out_5510140683284074867[274] = 0;
   out_5510140683284074867[275] = 0;
   out_5510140683284074867[276] = 0;
   out_5510140683284074867[277] = 0;
   out_5510140683284074867[278] = 0;
   out_5510140683284074867[279] = 0;
   out_5510140683284074867[280] = 0;
   out_5510140683284074867[281] = 0;
   out_5510140683284074867[282] = 0;
   out_5510140683284074867[283] = 0;
   out_5510140683284074867[284] = 0;
   out_5510140683284074867[285] = 0;
   out_5510140683284074867[286] = 1;
   out_5510140683284074867[287] = 0;
   out_5510140683284074867[288] = 0;
   out_5510140683284074867[289] = 0;
   out_5510140683284074867[290] = 0;
   out_5510140683284074867[291] = 0;
   out_5510140683284074867[292] = 0;
   out_5510140683284074867[293] = 0;
   out_5510140683284074867[294] = 0;
   out_5510140683284074867[295] = 0;
   out_5510140683284074867[296] = 0;
   out_5510140683284074867[297] = 0;
   out_5510140683284074867[298] = 0;
   out_5510140683284074867[299] = 0;
   out_5510140683284074867[300] = 0;
   out_5510140683284074867[301] = 0;
   out_5510140683284074867[302] = 0;
   out_5510140683284074867[303] = 0;
   out_5510140683284074867[304] = 0;
   out_5510140683284074867[305] = 0;
   out_5510140683284074867[306] = 0;
   out_5510140683284074867[307] = 0;
   out_5510140683284074867[308] = 1;
   out_5510140683284074867[309] = 0;
   out_5510140683284074867[310] = 0;
   out_5510140683284074867[311] = 0;
   out_5510140683284074867[312] = 0;
   out_5510140683284074867[313] = 0;
   out_5510140683284074867[314] = 0;
   out_5510140683284074867[315] = 0;
   out_5510140683284074867[316] = 0;
   out_5510140683284074867[317] = 0;
   out_5510140683284074867[318] = 0;
   out_5510140683284074867[319] = 0;
   out_5510140683284074867[320] = 0;
   out_5510140683284074867[321] = 0;
   out_5510140683284074867[322] = 0;
   out_5510140683284074867[323] = 0;
   out_5510140683284074867[324] = 0;
   out_5510140683284074867[325] = 0;
   out_5510140683284074867[326] = 0;
   out_5510140683284074867[327] = 0;
   out_5510140683284074867[328] = 0;
   out_5510140683284074867[329] = 0;
   out_5510140683284074867[330] = 1;
   out_5510140683284074867[331] = 0;
   out_5510140683284074867[332] = 0;
   out_5510140683284074867[333] = 0;
   out_5510140683284074867[334] = 0;
   out_5510140683284074867[335] = 0;
   out_5510140683284074867[336] = 0;
   out_5510140683284074867[337] = 0;
   out_5510140683284074867[338] = 0;
   out_5510140683284074867[339] = 0;
   out_5510140683284074867[340] = 0;
   out_5510140683284074867[341] = 0;
   out_5510140683284074867[342] = 0;
   out_5510140683284074867[343] = 0;
   out_5510140683284074867[344] = 0;
   out_5510140683284074867[345] = 0;
   out_5510140683284074867[346] = 0;
   out_5510140683284074867[347] = 0;
   out_5510140683284074867[348] = 0;
   out_5510140683284074867[349] = 0;
   out_5510140683284074867[350] = 0;
   out_5510140683284074867[351] = 0;
   out_5510140683284074867[352] = 1;
   out_5510140683284074867[353] = 0;
   out_5510140683284074867[354] = 0;
   out_5510140683284074867[355] = 0;
   out_5510140683284074867[356] = 0;
   out_5510140683284074867[357] = 0;
   out_5510140683284074867[358] = 0;
   out_5510140683284074867[359] = 0;
   out_5510140683284074867[360] = 0;
   out_5510140683284074867[361] = 0;
   out_5510140683284074867[362] = 0;
   out_5510140683284074867[363] = 0;
   out_5510140683284074867[364] = 0;
   out_5510140683284074867[365] = 0;
   out_5510140683284074867[366] = 0;
   out_5510140683284074867[367] = 0;
   out_5510140683284074867[368] = 0;
   out_5510140683284074867[369] = 0;
   out_5510140683284074867[370] = 0;
   out_5510140683284074867[371] = 0;
   out_5510140683284074867[372] = 0;
   out_5510140683284074867[373] = 0;
   out_5510140683284074867[374] = 1;
   out_5510140683284074867[375] = 0;
   out_5510140683284074867[376] = 0;
   out_5510140683284074867[377] = 0;
   out_5510140683284074867[378] = 0;
   out_5510140683284074867[379] = 0;
   out_5510140683284074867[380] = 0;
   out_5510140683284074867[381] = 0;
   out_5510140683284074867[382] = 0;
   out_5510140683284074867[383] = 0;
   out_5510140683284074867[384] = 0;
   out_5510140683284074867[385] = 0;
   out_5510140683284074867[386] = 0;
   out_5510140683284074867[387] = 0;
   out_5510140683284074867[388] = 0;
   out_5510140683284074867[389] = 0;
   out_5510140683284074867[390] = 0;
   out_5510140683284074867[391] = 0;
   out_5510140683284074867[392] = 0;
   out_5510140683284074867[393] = 0;
   out_5510140683284074867[394] = 0;
   out_5510140683284074867[395] = 0;
   out_5510140683284074867[396] = 1;
   out_5510140683284074867[397] = 0;
   out_5510140683284074867[398] = 0;
   out_5510140683284074867[399] = 0;
   out_5510140683284074867[400] = 0;
   out_5510140683284074867[401] = 0;
   out_5510140683284074867[402] = 0;
   out_5510140683284074867[403] = 0;
   out_5510140683284074867[404] = 0;
   out_5510140683284074867[405] = 0;
   out_5510140683284074867[406] = 0;
   out_5510140683284074867[407] = 0;
   out_5510140683284074867[408] = 0;
   out_5510140683284074867[409] = 0;
   out_5510140683284074867[410] = 0;
   out_5510140683284074867[411] = 0;
   out_5510140683284074867[412] = 0;
   out_5510140683284074867[413] = 0;
   out_5510140683284074867[414] = 0;
   out_5510140683284074867[415] = 0;
   out_5510140683284074867[416] = 0;
   out_5510140683284074867[417] = 0;
   out_5510140683284074867[418] = 1;
   out_5510140683284074867[419] = 0;
   out_5510140683284074867[420] = 0;
   out_5510140683284074867[421] = 0;
   out_5510140683284074867[422] = 0;
   out_5510140683284074867[423] = 0;
   out_5510140683284074867[424] = 0;
   out_5510140683284074867[425] = 0;
   out_5510140683284074867[426] = 0;
   out_5510140683284074867[427] = 0;
   out_5510140683284074867[428] = 0;
   out_5510140683284074867[429] = 0;
   out_5510140683284074867[430] = 0;
   out_5510140683284074867[431] = 0;
   out_5510140683284074867[432] = 0;
   out_5510140683284074867[433] = 0;
   out_5510140683284074867[434] = 0;
   out_5510140683284074867[435] = 0;
   out_5510140683284074867[436] = 0;
   out_5510140683284074867[437] = 0;
   out_5510140683284074867[438] = 0;
   out_5510140683284074867[439] = 0;
   out_5510140683284074867[440] = 1;
}
void h_4(double *state, double *unused, double *out_3896021957130681052) {
   out_3896021957130681052[0] = state[10] + state[13];
   out_3896021957130681052[1] = state[11] + state[14];
   out_3896021957130681052[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2796592115458417611) {
   out_2796592115458417611[0] = 0;
   out_2796592115458417611[1] = 0;
   out_2796592115458417611[2] = 0;
   out_2796592115458417611[3] = 0;
   out_2796592115458417611[4] = 0;
   out_2796592115458417611[5] = 0;
   out_2796592115458417611[6] = 0;
   out_2796592115458417611[7] = 0;
   out_2796592115458417611[8] = 0;
   out_2796592115458417611[9] = 0;
   out_2796592115458417611[10] = 1;
   out_2796592115458417611[11] = 0;
   out_2796592115458417611[12] = 0;
   out_2796592115458417611[13] = 1;
   out_2796592115458417611[14] = 0;
   out_2796592115458417611[15] = 0;
   out_2796592115458417611[16] = 0;
   out_2796592115458417611[17] = 0;
   out_2796592115458417611[18] = 0;
   out_2796592115458417611[19] = 0;
   out_2796592115458417611[20] = 0;
   out_2796592115458417611[21] = 0;
   out_2796592115458417611[22] = 0;
   out_2796592115458417611[23] = 0;
   out_2796592115458417611[24] = 0;
   out_2796592115458417611[25] = 0;
   out_2796592115458417611[26] = 0;
   out_2796592115458417611[27] = 0;
   out_2796592115458417611[28] = 0;
   out_2796592115458417611[29] = 0;
   out_2796592115458417611[30] = 0;
   out_2796592115458417611[31] = 0;
   out_2796592115458417611[32] = 0;
   out_2796592115458417611[33] = 1;
   out_2796592115458417611[34] = 0;
   out_2796592115458417611[35] = 0;
   out_2796592115458417611[36] = 1;
   out_2796592115458417611[37] = 0;
   out_2796592115458417611[38] = 0;
   out_2796592115458417611[39] = 0;
   out_2796592115458417611[40] = 0;
   out_2796592115458417611[41] = 0;
   out_2796592115458417611[42] = 0;
   out_2796592115458417611[43] = 0;
   out_2796592115458417611[44] = 0;
   out_2796592115458417611[45] = 0;
   out_2796592115458417611[46] = 0;
   out_2796592115458417611[47] = 0;
   out_2796592115458417611[48] = 0;
   out_2796592115458417611[49] = 0;
   out_2796592115458417611[50] = 0;
   out_2796592115458417611[51] = 0;
   out_2796592115458417611[52] = 0;
   out_2796592115458417611[53] = 0;
   out_2796592115458417611[54] = 0;
   out_2796592115458417611[55] = 0;
   out_2796592115458417611[56] = 1;
   out_2796592115458417611[57] = 0;
   out_2796592115458417611[58] = 0;
   out_2796592115458417611[59] = 1;
   out_2796592115458417611[60] = 0;
   out_2796592115458417611[61] = 0;
   out_2796592115458417611[62] = 0;
   out_2796592115458417611[63] = 0;
   out_2796592115458417611[64] = 0;
   out_2796592115458417611[65] = 0;
}
void h_9(double *state, double *unused, double *out_3279097196838248586) {
   out_3279097196838248586[0] = state[10];
   out_3279097196838248586[1] = state[11];
   out_3279097196838248586[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8362933022986686535) {
   out_8362933022986686535[0] = 0;
   out_8362933022986686535[1] = 0;
   out_8362933022986686535[2] = 0;
   out_8362933022986686535[3] = 0;
   out_8362933022986686535[4] = 0;
   out_8362933022986686535[5] = 0;
   out_8362933022986686535[6] = 0;
   out_8362933022986686535[7] = 0;
   out_8362933022986686535[8] = 0;
   out_8362933022986686535[9] = 0;
   out_8362933022986686535[10] = 1;
   out_8362933022986686535[11] = 0;
   out_8362933022986686535[12] = 0;
   out_8362933022986686535[13] = 0;
   out_8362933022986686535[14] = 0;
   out_8362933022986686535[15] = 0;
   out_8362933022986686535[16] = 0;
   out_8362933022986686535[17] = 0;
   out_8362933022986686535[18] = 0;
   out_8362933022986686535[19] = 0;
   out_8362933022986686535[20] = 0;
   out_8362933022986686535[21] = 0;
   out_8362933022986686535[22] = 0;
   out_8362933022986686535[23] = 0;
   out_8362933022986686535[24] = 0;
   out_8362933022986686535[25] = 0;
   out_8362933022986686535[26] = 0;
   out_8362933022986686535[27] = 0;
   out_8362933022986686535[28] = 0;
   out_8362933022986686535[29] = 0;
   out_8362933022986686535[30] = 0;
   out_8362933022986686535[31] = 0;
   out_8362933022986686535[32] = 0;
   out_8362933022986686535[33] = 1;
   out_8362933022986686535[34] = 0;
   out_8362933022986686535[35] = 0;
   out_8362933022986686535[36] = 0;
   out_8362933022986686535[37] = 0;
   out_8362933022986686535[38] = 0;
   out_8362933022986686535[39] = 0;
   out_8362933022986686535[40] = 0;
   out_8362933022986686535[41] = 0;
   out_8362933022986686535[42] = 0;
   out_8362933022986686535[43] = 0;
   out_8362933022986686535[44] = 0;
   out_8362933022986686535[45] = 0;
   out_8362933022986686535[46] = 0;
   out_8362933022986686535[47] = 0;
   out_8362933022986686535[48] = 0;
   out_8362933022986686535[49] = 0;
   out_8362933022986686535[50] = 0;
   out_8362933022986686535[51] = 0;
   out_8362933022986686535[52] = 0;
   out_8362933022986686535[53] = 0;
   out_8362933022986686535[54] = 0;
   out_8362933022986686535[55] = 0;
   out_8362933022986686535[56] = 1;
   out_8362933022986686535[57] = 0;
   out_8362933022986686535[58] = 0;
   out_8362933022986686535[59] = 0;
   out_8362933022986686535[60] = 0;
   out_8362933022986686535[61] = 0;
   out_8362933022986686535[62] = 0;
   out_8362933022986686535[63] = 0;
   out_8362933022986686535[64] = 0;
   out_8362933022986686535[65] = 0;
}
void h_10(double *state, double *unused, double *out_5743771204428898197) {
   out_5743771204428898197[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5743771204428898197[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5743771204428898197[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2519184783685511941) {
   out_2519184783685511941[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2519184783685511941[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2519184783685511941[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2519184783685511941[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2519184783685511941[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2519184783685511941[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2519184783685511941[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2519184783685511941[7] = 0;
   out_2519184783685511941[8] = 0;
   out_2519184783685511941[9] = 0;
   out_2519184783685511941[10] = 0;
   out_2519184783685511941[11] = 0;
   out_2519184783685511941[12] = 0;
   out_2519184783685511941[13] = 0;
   out_2519184783685511941[14] = 0;
   out_2519184783685511941[15] = 0;
   out_2519184783685511941[16] = 1;
   out_2519184783685511941[17] = 0;
   out_2519184783685511941[18] = 0;
   out_2519184783685511941[19] = 1;
   out_2519184783685511941[20] = 0;
   out_2519184783685511941[21] = 0;
   out_2519184783685511941[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2519184783685511941[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2519184783685511941[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2519184783685511941[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2519184783685511941[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2519184783685511941[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2519184783685511941[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2519184783685511941[29] = 0;
   out_2519184783685511941[30] = 0;
   out_2519184783685511941[31] = 0;
   out_2519184783685511941[32] = 0;
   out_2519184783685511941[33] = 0;
   out_2519184783685511941[34] = 0;
   out_2519184783685511941[35] = 0;
   out_2519184783685511941[36] = 0;
   out_2519184783685511941[37] = 0;
   out_2519184783685511941[38] = 0;
   out_2519184783685511941[39] = 1;
   out_2519184783685511941[40] = 0;
   out_2519184783685511941[41] = 0;
   out_2519184783685511941[42] = 1;
   out_2519184783685511941[43] = 0;
   out_2519184783685511941[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2519184783685511941[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2519184783685511941[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2519184783685511941[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2519184783685511941[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2519184783685511941[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2519184783685511941[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2519184783685511941[51] = 0;
   out_2519184783685511941[52] = 0;
   out_2519184783685511941[53] = 0;
   out_2519184783685511941[54] = 0;
   out_2519184783685511941[55] = 0;
   out_2519184783685511941[56] = 0;
   out_2519184783685511941[57] = 0;
   out_2519184783685511941[58] = 0;
   out_2519184783685511941[59] = 0;
   out_2519184783685511941[60] = 0;
   out_2519184783685511941[61] = 0;
   out_2519184783685511941[62] = 1;
   out_2519184783685511941[63] = 0;
   out_2519184783685511941[64] = 0;
   out_2519184783685511941[65] = 1;
}
void h_12(double *state, double *unused, double *out_9145814329225030014) {
   out_9145814329225030014[0] = state[0];
   out_9145814329225030014[1] = state[1];
   out_9145814329225030014[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3584666261584315385) {
   out_3584666261584315385[0] = 1;
   out_3584666261584315385[1] = 0;
   out_3584666261584315385[2] = 0;
   out_3584666261584315385[3] = 0;
   out_3584666261584315385[4] = 0;
   out_3584666261584315385[5] = 0;
   out_3584666261584315385[6] = 0;
   out_3584666261584315385[7] = 0;
   out_3584666261584315385[8] = 0;
   out_3584666261584315385[9] = 0;
   out_3584666261584315385[10] = 0;
   out_3584666261584315385[11] = 0;
   out_3584666261584315385[12] = 0;
   out_3584666261584315385[13] = 0;
   out_3584666261584315385[14] = 0;
   out_3584666261584315385[15] = 0;
   out_3584666261584315385[16] = 0;
   out_3584666261584315385[17] = 0;
   out_3584666261584315385[18] = 0;
   out_3584666261584315385[19] = 0;
   out_3584666261584315385[20] = 0;
   out_3584666261584315385[21] = 0;
   out_3584666261584315385[22] = 0;
   out_3584666261584315385[23] = 1;
   out_3584666261584315385[24] = 0;
   out_3584666261584315385[25] = 0;
   out_3584666261584315385[26] = 0;
   out_3584666261584315385[27] = 0;
   out_3584666261584315385[28] = 0;
   out_3584666261584315385[29] = 0;
   out_3584666261584315385[30] = 0;
   out_3584666261584315385[31] = 0;
   out_3584666261584315385[32] = 0;
   out_3584666261584315385[33] = 0;
   out_3584666261584315385[34] = 0;
   out_3584666261584315385[35] = 0;
   out_3584666261584315385[36] = 0;
   out_3584666261584315385[37] = 0;
   out_3584666261584315385[38] = 0;
   out_3584666261584315385[39] = 0;
   out_3584666261584315385[40] = 0;
   out_3584666261584315385[41] = 0;
   out_3584666261584315385[42] = 0;
   out_3584666261584315385[43] = 0;
   out_3584666261584315385[44] = 0;
   out_3584666261584315385[45] = 0;
   out_3584666261584315385[46] = 1;
   out_3584666261584315385[47] = 0;
   out_3584666261584315385[48] = 0;
   out_3584666261584315385[49] = 0;
   out_3584666261584315385[50] = 0;
   out_3584666261584315385[51] = 0;
   out_3584666261584315385[52] = 0;
   out_3584666261584315385[53] = 0;
   out_3584666261584315385[54] = 0;
   out_3584666261584315385[55] = 0;
   out_3584666261584315385[56] = 0;
   out_3584666261584315385[57] = 0;
   out_3584666261584315385[58] = 0;
   out_3584666261584315385[59] = 0;
   out_3584666261584315385[60] = 0;
   out_3584666261584315385[61] = 0;
   out_3584666261584315385[62] = 0;
   out_3584666261584315385[63] = 0;
   out_3584666261584315385[64] = 0;
   out_3584666261584315385[65] = 0;
}
void h_35(double *state, double *unused, double *out_1854802132409489495) {
   out_1854802132409489495[0] = state[7];
   out_1854802132409489495[1] = state[8];
   out_1854802132409489495[2] = state[9];
}
void H_35(double *state, double *unused, double *out_839103229259301676) {
   out_839103229259301676[0] = 0;
   out_839103229259301676[1] = 0;
   out_839103229259301676[2] = 0;
   out_839103229259301676[3] = 0;
   out_839103229259301676[4] = 0;
   out_839103229259301676[5] = 0;
   out_839103229259301676[6] = 0;
   out_839103229259301676[7] = 1;
   out_839103229259301676[8] = 0;
   out_839103229259301676[9] = 0;
   out_839103229259301676[10] = 0;
   out_839103229259301676[11] = 0;
   out_839103229259301676[12] = 0;
   out_839103229259301676[13] = 0;
   out_839103229259301676[14] = 0;
   out_839103229259301676[15] = 0;
   out_839103229259301676[16] = 0;
   out_839103229259301676[17] = 0;
   out_839103229259301676[18] = 0;
   out_839103229259301676[19] = 0;
   out_839103229259301676[20] = 0;
   out_839103229259301676[21] = 0;
   out_839103229259301676[22] = 0;
   out_839103229259301676[23] = 0;
   out_839103229259301676[24] = 0;
   out_839103229259301676[25] = 0;
   out_839103229259301676[26] = 0;
   out_839103229259301676[27] = 0;
   out_839103229259301676[28] = 0;
   out_839103229259301676[29] = 0;
   out_839103229259301676[30] = 1;
   out_839103229259301676[31] = 0;
   out_839103229259301676[32] = 0;
   out_839103229259301676[33] = 0;
   out_839103229259301676[34] = 0;
   out_839103229259301676[35] = 0;
   out_839103229259301676[36] = 0;
   out_839103229259301676[37] = 0;
   out_839103229259301676[38] = 0;
   out_839103229259301676[39] = 0;
   out_839103229259301676[40] = 0;
   out_839103229259301676[41] = 0;
   out_839103229259301676[42] = 0;
   out_839103229259301676[43] = 0;
   out_839103229259301676[44] = 0;
   out_839103229259301676[45] = 0;
   out_839103229259301676[46] = 0;
   out_839103229259301676[47] = 0;
   out_839103229259301676[48] = 0;
   out_839103229259301676[49] = 0;
   out_839103229259301676[50] = 0;
   out_839103229259301676[51] = 0;
   out_839103229259301676[52] = 0;
   out_839103229259301676[53] = 1;
   out_839103229259301676[54] = 0;
   out_839103229259301676[55] = 0;
   out_839103229259301676[56] = 0;
   out_839103229259301676[57] = 0;
   out_839103229259301676[58] = 0;
   out_839103229259301676[59] = 0;
   out_839103229259301676[60] = 0;
   out_839103229259301676[61] = 0;
   out_839103229259301676[62] = 0;
   out_839103229259301676[63] = 0;
   out_839103229259301676[64] = 0;
   out_839103229259301676[65] = 0;
}
void h_32(double *state, double *unused, double *out_1289607573080015306) {
   out_1289607573080015306[0] = state[3];
   out_1289607573080015306[1] = state[4];
   out_1289607573080015306[2] = state[5];
   out_1289607573080015306[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1944554935159115917) {
   out_1944554935159115917[0] = 0;
   out_1944554935159115917[1] = 0;
   out_1944554935159115917[2] = 0;
   out_1944554935159115917[3] = 1;
   out_1944554935159115917[4] = 0;
   out_1944554935159115917[5] = 0;
   out_1944554935159115917[6] = 0;
   out_1944554935159115917[7] = 0;
   out_1944554935159115917[8] = 0;
   out_1944554935159115917[9] = 0;
   out_1944554935159115917[10] = 0;
   out_1944554935159115917[11] = 0;
   out_1944554935159115917[12] = 0;
   out_1944554935159115917[13] = 0;
   out_1944554935159115917[14] = 0;
   out_1944554935159115917[15] = 0;
   out_1944554935159115917[16] = 0;
   out_1944554935159115917[17] = 0;
   out_1944554935159115917[18] = 0;
   out_1944554935159115917[19] = 0;
   out_1944554935159115917[20] = 0;
   out_1944554935159115917[21] = 0;
   out_1944554935159115917[22] = 0;
   out_1944554935159115917[23] = 0;
   out_1944554935159115917[24] = 0;
   out_1944554935159115917[25] = 0;
   out_1944554935159115917[26] = 1;
   out_1944554935159115917[27] = 0;
   out_1944554935159115917[28] = 0;
   out_1944554935159115917[29] = 0;
   out_1944554935159115917[30] = 0;
   out_1944554935159115917[31] = 0;
   out_1944554935159115917[32] = 0;
   out_1944554935159115917[33] = 0;
   out_1944554935159115917[34] = 0;
   out_1944554935159115917[35] = 0;
   out_1944554935159115917[36] = 0;
   out_1944554935159115917[37] = 0;
   out_1944554935159115917[38] = 0;
   out_1944554935159115917[39] = 0;
   out_1944554935159115917[40] = 0;
   out_1944554935159115917[41] = 0;
   out_1944554935159115917[42] = 0;
   out_1944554935159115917[43] = 0;
   out_1944554935159115917[44] = 0;
   out_1944554935159115917[45] = 0;
   out_1944554935159115917[46] = 0;
   out_1944554935159115917[47] = 0;
   out_1944554935159115917[48] = 0;
   out_1944554935159115917[49] = 1;
   out_1944554935159115917[50] = 0;
   out_1944554935159115917[51] = 0;
   out_1944554935159115917[52] = 0;
   out_1944554935159115917[53] = 0;
   out_1944554935159115917[54] = 0;
   out_1944554935159115917[55] = 0;
   out_1944554935159115917[56] = 0;
   out_1944554935159115917[57] = 0;
   out_1944554935159115917[58] = 0;
   out_1944554935159115917[59] = 0;
   out_1944554935159115917[60] = 0;
   out_1944554935159115917[61] = 0;
   out_1944554935159115917[62] = 0;
   out_1944554935159115917[63] = 0;
   out_1944554935159115917[64] = 0;
   out_1944554935159115917[65] = 0;
   out_1944554935159115917[66] = 0;
   out_1944554935159115917[67] = 0;
   out_1944554935159115917[68] = 0;
   out_1944554935159115917[69] = 0;
   out_1944554935159115917[70] = 0;
   out_1944554935159115917[71] = 0;
   out_1944554935159115917[72] = 1;
   out_1944554935159115917[73] = 0;
   out_1944554935159115917[74] = 0;
   out_1944554935159115917[75] = 0;
   out_1944554935159115917[76] = 0;
   out_1944554935159115917[77] = 0;
   out_1944554935159115917[78] = 0;
   out_1944554935159115917[79] = 0;
   out_1944554935159115917[80] = 0;
   out_1944554935159115917[81] = 0;
   out_1944554935159115917[82] = 0;
   out_1944554935159115917[83] = 0;
   out_1944554935159115917[84] = 0;
   out_1944554935159115917[85] = 0;
   out_1944554935159115917[86] = 0;
   out_1944554935159115917[87] = 0;
}
void h_13(double *state, double *unused, double *out_5515199641584361897) {
   out_5515199641584361897[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5515199641584361897[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5515199641584361897[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4096940203060364411) {
   out_4096940203060364411[0] = 0;
   out_4096940203060364411[1] = 0;
   out_4096940203060364411[2] = 0;
   out_4096940203060364411[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4096940203060364411[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4096940203060364411[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4096940203060364411[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4096940203060364411[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4096940203060364411[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4096940203060364411[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4096940203060364411[10] = 0;
   out_4096940203060364411[11] = 0;
   out_4096940203060364411[12] = 0;
   out_4096940203060364411[13] = 0;
   out_4096940203060364411[14] = 0;
   out_4096940203060364411[15] = 0;
   out_4096940203060364411[16] = 0;
   out_4096940203060364411[17] = 0;
   out_4096940203060364411[18] = 0;
   out_4096940203060364411[19] = 0;
   out_4096940203060364411[20] = 0;
   out_4096940203060364411[21] = 0;
   out_4096940203060364411[22] = 0;
   out_4096940203060364411[23] = 0;
   out_4096940203060364411[24] = 0;
   out_4096940203060364411[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4096940203060364411[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4096940203060364411[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4096940203060364411[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4096940203060364411[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4096940203060364411[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4096940203060364411[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4096940203060364411[32] = 0;
   out_4096940203060364411[33] = 0;
   out_4096940203060364411[34] = 0;
   out_4096940203060364411[35] = 0;
   out_4096940203060364411[36] = 0;
   out_4096940203060364411[37] = 0;
   out_4096940203060364411[38] = 0;
   out_4096940203060364411[39] = 0;
   out_4096940203060364411[40] = 0;
   out_4096940203060364411[41] = 0;
   out_4096940203060364411[42] = 0;
   out_4096940203060364411[43] = 0;
   out_4096940203060364411[44] = 0;
   out_4096940203060364411[45] = 0;
   out_4096940203060364411[46] = 0;
   out_4096940203060364411[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4096940203060364411[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4096940203060364411[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4096940203060364411[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4096940203060364411[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4096940203060364411[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4096940203060364411[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4096940203060364411[54] = 0;
   out_4096940203060364411[55] = 0;
   out_4096940203060364411[56] = 0;
   out_4096940203060364411[57] = 0;
   out_4096940203060364411[58] = 0;
   out_4096940203060364411[59] = 0;
   out_4096940203060364411[60] = 0;
   out_4096940203060364411[61] = 0;
   out_4096940203060364411[62] = 0;
   out_4096940203060364411[63] = 0;
   out_4096940203060364411[64] = 0;
   out_4096940203060364411[65] = 0;
}
void h_14(double *state, double *unused, double *out_3279097196838248586) {
   out_3279097196838248586[0] = state[10];
   out_3279097196838248586[1] = state[11];
   out_3279097196838248586[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8362933022986686535) {
   out_8362933022986686535[0] = 0;
   out_8362933022986686535[1] = 0;
   out_8362933022986686535[2] = 0;
   out_8362933022986686535[3] = 0;
   out_8362933022986686535[4] = 0;
   out_8362933022986686535[5] = 0;
   out_8362933022986686535[6] = 0;
   out_8362933022986686535[7] = 0;
   out_8362933022986686535[8] = 0;
   out_8362933022986686535[9] = 0;
   out_8362933022986686535[10] = 1;
   out_8362933022986686535[11] = 0;
   out_8362933022986686535[12] = 0;
   out_8362933022986686535[13] = 0;
   out_8362933022986686535[14] = 0;
   out_8362933022986686535[15] = 0;
   out_8362933022986686535[16] = 0;
   out_8362933022986686535[17] = 0;
   out_8362933022986686535[18] = 0;
   out_8362933022986686535[19] = 0;
   out_8362933022986686535[20] = 0;
   out_8362933022986686535[21] = 0;
   out_8362933022986686535[22] = 0;
   out_8362933022986686535[23] = 0;
   out_8362933022986686535[24] = 0;
   out_8362933022986686535[25] = 0;
   out_8362933022986686535[26] = 0;
   out_8362933022986686535[27] = 0;
   out_8362933022986686535[28] = 0;
   out_8362933022986686535[29] = 0;
   out_8362933022986686535[30] = 0;
   out_8362933022986686535[31] = 0;
   out_8362933022986686535[32] = 0;
   out_8362933022986686535[33] = 1;
   out_8362933022986686535[34] = 0;
   out_8362933022986686535[35] = 0;
   out_8362933022986686535[36] = 0;
   out_8362933022986686535[37] = 0;
   out_8362933022986686535[38] = 0;
   out_8362933022986686535[39] = 0;
   out_8362933022986686535[40] = 0;
   out_8362933022986686535[41] = 0;
   out_8362933022986686535[42] = 0;
   out_8362933022986686535[43] = 0;
   out_8362933022986686535[44] = 0;
   out_8362933022986686535[45] = 0;
   out_8362933022986686535[46] = 0;
   out_8362933022986686535[47] = 0;
   out_8362933022986686535[48] = 0;
   out_8362933022986686535[49] = 0;
   out_8362933022986686535[50] = 0;
   out_8362933022986686535[51] = 0;
   out_8362933022986686535[52] = 0;
   out_8362933022986686535[53] = 0;
   out_8362933022986686535[54] = 0;
   out_8362933022986686535[55] = 0;
   out_8362933022986686535[56] = 1;
   out_8362933022986686535[57] = 0;
   out_8362933022986686535[58] = 0;
   out_8362933022986686535[59] = 0;
   out_8362933022986686535[60] = 0;
   out_8362933022986686535[61] = 0;
   out_8362933022986686535[62] = 0;
   out_8362933022986686535[63] = 0;
   out_8362933022986686535[64] = 0;
   out_8362933022986686535[65] = 0;
}
void h_33(double *state, double *unused, double *out_6887162999505427965) {
   out_6887162999505427965[0] = state[16];
   out_6887162999505427965[1] = state[17];
   out_6887162999505427965[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2311453775379555928) {
   out_2311453775379555928[0] = 0;
   out_2311453775379555928[1] = 0;
   out_2311453775379555928[2] = 0;
   out_2311453775379555928[3] = 0;
   out_2311453775379555928[4] = 0;
   out_2311453775379555928[5] = 0;
   out_2311453775379555928[6] = 0;
   out_2311453775379555928[7] = 0;
   out_2311453775379555928[8] = 0;
   out_2311453775379555928[9] = 0;
   out_2311453775379555928[10] = 0;
   out_2311453775379555928[11] = 0;
   out_2311453775379555928[12] = 0;
   out_2311453775379555928[13] = 0;
   out_2311453775379555928[14] = 0;
   out_2311453775379555928[15] = 0;
   out_2311453775379555928[16] = 1;
   out_2311453775379555928[17] = 0;
   out_2311453775379555928[18] = 0;
   out_2311453775379555928[19] = 0;
   out_2311453775379555928[20] = 0;
   out_2311453775379555928[21] = 0;
   out_2311453775379555928[22] = 0;
   out_2311453775379555928[23] = 0;
   out_2311453775379555928[24] = 0;
   out_2311453775379555928[25] = 0;
   out_2311453775379555928[26] = 0;
   out_2311453775379555928[27] = 0;
   out_2311453775379555928[28] = 0;
   out_2311453775379555928[29] = 0;
   out_2311453775379555928[30] = 0;
   out_2311453775379555928[31] = 0;
   out_2311453775379555928[32] = 0;
   out_2311453775379555928[33] = 0;
   out_2311453775379555928[34] = 0;
   out_2311453775379555928[35] = 0;
   out_2311453775379555928[36] = 0;
   out_2311453775379555928[37] = 0;
   out_2311453775379555928[38] = 0;
   out_2311453775379555928[39] = 1;
   out_2311453775379555928[40] = 0;
   out_2311453775379555928[41] = 0;
   out_2311453775379555928[42] = 0;
   out_2311453775379555928[43] = 0;
   out_2311453775379555928[44] = 0;
   out_2311453775379555928[45] = 0;
   out_2311453775379555928[46] = 0;
   out_2311453775379555928[47] = 0;
   out_2311453775379555928[48] = 0;
   out_2311453775379555928[49] = 0;
   out_2311453775379555928[50] = 0;
   out_2311453775379555928[51] = 0;
   out_2311453775379555928[52] = 0;
   out_2311453775379555928[53] = 0;
   out_2311453775379555928[54] = 0;
   out_2311453775379555928[55] = 0;
   out_2311453775379555928[56] = 0;
   out_2311453775379555928[57] = 0;
   out_2311453775379555928[58] = 0;
   out_2311453775379555928[59] = 0;
   out_2311453775379555928[60] = 0;
   out_2311453775379555928[61] = 0;
   out_2311453775379555928[62] = 1;
   out_2311453775379555928[63] = 0;
   out_2311453775379555928[64] = 0;
   out_2311453775379555928[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2337898968706533344) {
  H(in_vec, out_2337898968706533344);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6878075311318465643) {
  err_fun(nom_x, delta_x, out_6878075311318465643);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1794092814993268924) {
  inv_err_fun(nom_x, true_x, out_1794092814993268924);
}
void live_H_mod_fun(double *state, double *out_6748437875193912696) {
  H_mod_fun(state, out_6748437875193912696);
}
void live_f_fun(double *state, double dt, double *out_1742564737881391388) {
  f_fun(state,  dt, out_1742564737881391388);
}
void live_F_fun(double *state, double dt, double *out_5510140683284074867) {
  F_fun(state,  dt, out_5510140683284074867);
}
void live_h_4(double *state, double *unused, double *out_3896021957130681052) {
  h_4(state, unused, out_3896021957130681052);
}
void live_H_4(double *state, double *unused, double *out_2796592115458417611) {
  H_4(state, unused, out_2796592115458417611);
}
void live_h_9(double *state, double *unused, double *out_3279097196838248586) {
  h_9(state, unused, out_3279097196838248586);
}
void live_H_9(double *state, double *unused, double *out_8362933022986686535) {
  H_9(state, unused, out_8362933022986686535);
}
void live_h_10(double *state, double *unused, double *out_5743771204428898197) {
  h_10(state, unused, out_5743771204428898197);
}
void live_H_10(double *state, double *unused, double *out_2519184783685511941) {
  H_10(state, unused, out_2519184783685511941);
}
void live_h_12(double *state, double *unused, double *out_9145814329225030014) {
  h_12(state, unused, out_9145814329225030014);
}
void live_H_12(double *state, double *unused, double *out_3584666261584315385) {
  H_12(state, unused, out_3584666261584315385);
}
void live_h_35(double *state, double *unused, double *out_1854802132409489495) {
  h_35(state, unused, out_1854802132409489495);
}
void live_H_35(double *state, double *unused, double *out_839103229259301676) {
  H_35(state, unused, out_839103229259301676);
}
void live_h_32(double *state, double *unused, double *out_1289607573080015306) {
  h_32(state, unused, out_1289607573080015306);
}
void live_H_32(double *state, double *unused, double *out_1944554935159115917) {
  H_32(state, unused, out_1944554935159115917);
}
void live_h_13(double *state, double *unused, double *out_5515199641584361897) {
  h_13(state, unused, out_5515199641584361897);
}
void live_H_13(double *state, double *unused, double *out_4096940203060364411) {
  H_13(state, unused, out_4096940203060364411);
}
void live_h_14(double *state, double *unused, double *out_3279097196838248586) {
  h_14(state, unused, out_3279097196838248586);
}
void live_H_14(double *state, double *unused, double *out_8362933022986686535) {
  H_14(state, unused, out_8362933022986686535);
}
void live_h_33(double *state, double *unused, double *out_6887162999505427965) {
  h_33(state, unused, out_6887162999505427965);
}
void live_H_33(double *state, double *unused, double *out_2311453775379555928) {
  H_33(state, unused, out_2311453775379555928);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
