#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3808128492149288823) {
   out_3808128492149288823[0] = 0;
   out_3808128492149288823[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3808128492149288823[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3808128492149288823[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3808128492149288823[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3808128492149288823[5] = -sin(in_vec[1]);
   out_3808128492149288823[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3808128492149288823[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3808128492149288823[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3808128492149288823[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3808128492149288823[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3808128492149288823[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3808128492149288823[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3808128492149288823[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3808128492149288823[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3808128492149288823[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3808128492149288823[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3808128492149288823[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7187904047825591631) {
   out_7187904047825591631[0] = delta_x[0] + nom_x[0];
   out_7187904047825591631[1] = delta_x[1] + nom_x[1];
   out_7187904047825591631[2] = delta_x[2] + nom_x[2];
   out_7187904047825591631[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7187904047825591631[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7187904047825591631[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7187904047825591631[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7187904047825591631[7] = delta_x[6] + nom_x[7];
   out_7187904047825591631[8] = delta_x[7] + nom_x[8];
   out_7187904047825591631[9] = delta_x[8] + nom_x[9];
   out_7187904047825591631[10] = delta_x[9] + nom_x[10];
   out_7187904047825591631[11] = delta_x[10] + nom_x[11];
   out_7187904047825591631[12] = delta_x[11] + nom_x[12];
   out_7187904047825591631[13] = delta_x[12] + nom_x[13];
   out_7187904047825591631[14] = delta_x[13] + nom_x[14];
   out_7187904047825591631[15] = delta_x[14] + nom_x[15];
   out_7187904047825591631[16] = delta_x[15] + nom_x[16];
   out_7187904047825591631[17] = delta_x[16] + nom_x[17];
   out_7187904047825591631[18] = delta_x[17] + nom_x[18];
   out_7187904047825591631[19] = delta_x[18] + nom_x[19];
   out_7187904047825591631[20] = delta_x[19] + nom_x[20];
   out_7187904047825591631[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5909848640433995487) {
   out_5909848640433995487[0] = -nom_x[0] + true_x[0];
   out_5909848640433995487[1] = -nom_x[1] + true_x[1];
   out_5909848640433995487[2] = -nom_x[2] + true_x[2];
   out_5909848640433995487[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5909848640433995487[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5909848640433995487[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5909848640433995487[6] = -nom_x[7] + true_x[7];
   out_5909848640433995487[7] = -nom_x[8] + true_x[8];
   out_5909848640433995487[8] = -nom_x[9] + true_x[9];
   out_5909848640433995487[9] = -nom_x[10] + true_x[10];
   out_5909848640433995487[10] = -nom_x[11] + true_x[11];
   out_5909848640433995487[11] = -nom_x[12] + true_x[12];
   out_5909848640433995487[12] = -nom_x[13] + true_x[13];
   out_5909848640433995487[13] = -nom_x[14] + true_x[14];
   out_5909848640433995487[14] = -nom_x[15] + true_x[15];
   out_5909848640433995487[15] = -nom_x[16] + true_x[16];
   out_5909848640433995487[16] = -nom_x[17] + true_x[17];
   out_5909848640433995487[17] = -nom_x[18] + true_x[18];
   out_5909848640433995487[18] = -nom_x[19] + true_x[19];
   out_5909848640433995487[19] = -nom_x[20] + true_x[20];
   out_5909848640433995487[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6245519984707546482) {
   out_6245519984707546482[0] = 1.0;
   out_6245519984707546482[1] = 0;
   out_6245519984707546482[2] = 0;
   out_6245519984707546482[3] = 0;
   out_6245519984707546482[4] = 0;
   out_6245519984707546482[5] = 0;
   out_6245519984707546482[6] = 0;
   out_6245519984707546482[7] = 0;
   out_6245519984707546482[8] = 0;
   out_6245519984707546482[9] = 0;
   out_6245519984707546482[10] = 0;
   out_6245519984707546482[11] = 0;
   out_6245519984707546482[12] = 0;
   out_6245519984707546482[13] = 0;
   out_6245519984707546482[14] = 0;
   out_6245519984707546482[15] = 0;
   out_6245519984707546482[16] = 0;
   out_6245519984707546482[17] = 0;
   out_6245519984707546482[18] = 0;
   out_6245519984707546482[19] = 0;
   out_6245519984707546482[20] = 0;
   out_6245519984707546482[21] = 0;
   out_6245519984707546482[22] = 1.0;
   out_6245519984707546482[23] = 0;
   out_6245519984707546482[24] = 0;
   out_6245519984707546482[25] = 0;
   out_6245519984707546482[26] = 0;
   out_6245519984707546482[27] = 0;
   out_6245519984707546482[28] = 0;
   out_6245519984707546482[29] = 0;
   out_6245519984707546482[30] = 0;
   out_6245519984707546482[31] = 0;
   out_6245519984707546482[32] = 0;
   out_6245519984707546482[33] = 0;
   out_6245519984707546482[34] = 0;
   out_6245519984707546482[35] = 0;
   out_6245519984707546482[36] = 0;
   out_6245519984707546482[37] = 0;
   out_6245519984707546482[38] = 0;
   out_6245519984707546482[39] = 0;
   out_6245519984707546482[40] = 0;
   out_6245519984707546482[41] = 0;
   out_6245519984707546482[42] = 0;
   out_6245519984707546482[43] = 0;
   out_6245519984707546482[44] = 1.0;
   out_6245519984707546482[45] = 0;
   out_6245519984707546482[46] = 0;
   out_6245519984707546482[47] = 0;
   out_6245519984707546482[48] = 0;
   out_6245519984707546482[49] = 0;
   out_6245519984707546482[50] = 0;
   out_6245519984707546482[51] = 0;
   out_6245519984707546482[52] = 0;
   out_6245519984707546482[53] = 0;
   out_6245519984707546482[54] = 0;
   out_6245519984707546482[55] = 0;
   out_6245519984707546482[56] = 0;
   out_6245519984707546482[57] = 0;
   out_6245519984707546482[58] = 0;
   out_6245519984707546482[59] = 0;
   out_6245519984707546482[60] = 0;
   out_6245519984707546482[61] = 0;
   out_6245519984707546482[62] = 0;
   out_6245519984707546482[63] = 0;
   out_6245519984707546482[64] = 0;
   out_6245519984707546482[65] = 0;
   out_6245519984707546482[66] = -0.5*state[4];
   out_6245519984707546482[67] = -0.5*state[5];
   out_6245519984707546482[68] = -0.5*state[6];
   out_6245519984707546482[69] = 0;
   out_6245519984707546482[70] = 0;
   out_6245519984707546482[71] = 0;
   out_6245519984707546482[72] = 0;
   out_6245519984707546482[73] = 0;
   out_6245519984707546482[74] = 0;
   out_6245519984707546482[75] = 0;
   out_6245519984707546482[76] = 0;
   out_6245519984707546482[77] = 0;
   out_6245519984707546482[78] = 0;
   out_6245519984707546482[79] = 0;
   out_6245519984707546482[80] = 0;
   out_6245519984707546482[81] = 0;
   out_6245519984707546482[82] = 0;
   out_6245519984707546482[83] = 0;
   out_6245519984707546482[84] = 0;
   out_6245519984707546482[85] = 0;
   out_6245519984707546482[86] = 0;
   out_6245519984707546482[87] = 0.5*state[3];
   out_6245519984707546482[88] = 0.5*state[6];
   out_6245519984707546482[89] = -0.5*state[5];
   out_6245519984707546482[90] = 0;
   out_6245519984707546482[91] = 0;
   out_6245519984707546482[92] = 0;
   out_6245519984707546482[93] = 0;
   out_6245519984707546482[94] = 0;
   out_6245519984707546482[95] = 0;
   out_6245519984707546482[96] = 0;
   out_6245519984707546482[97] = 0;
   out_6245519984707546482[98] = 0;
   out_6245519984707546482[99] = 0;
   out_6245519984707546482[100] = 0;
   out_6245519984707546482[101] = 0;
   out_6245519984707546482[102] = 0;
   out_6245519984707546482[103] = 0;
   out_6245519984707546482[104] = 0;
   out_6245519984707546482[105] = 0;
   out_6245519984707546482[106] = 0;
   out_6245519984707546482[107] = 0;
   out_6245519984707546482[108] = -0.5*state[6];
   out_6245519984707546482[109] = 0.5*state[3];
   out_6245519984707546482[110] = 0.5*state[4];
   out_6245519984707546482[111] = 0;
   out_6245519984707546482[112] = 0;
   out_6245519984707546482[113] = 0;
   out_6245519984707546482[114] = 0;
   out_6245519984707546482[115] = 0;
   out_6245519984707546482[116] = 0;
   out_6245519984707546482[117] = 0;
   out_6245519984707546482[118] = 0;
   out_6245519984707546482[119] = 0;
   out_6245519984707546482[120] = 0;
   out_6245519984707546482[121] = 0;
   out_6245519984707546482[122] = 0;
   out_6245519984707546482[123] = 0;
   out_6245519984707546482[124] = 0;
   out_6245519984707546482[125] = 0;
   out_6245519984707546482[126] = 0;
   out_6245519984707546482[127] = 0;
   out_6245519984707546482[128] = 0;
   out_6245519984707546482[129] = 0.5*state[5];
   out_6245519984707546482[130] = -0.5*state[4];
   out_6245519984707546482[131] = 0.5*state[3];
   out_6245519984707546482[132] = 0;
   out_6245519984707546482[133] = 0;
   out_6245519984707546482[134] = 0;
   out_6245519984707546482[135] = 0;
   out_6245519984707546482[136] = 0;
   out_6245519984707546482[137] = 0;
   out_6245519984707546482[138] = 0;
   out_6245519984707546482[139] = 0;
   out_6245519984707546482[140] = 0;
   out_6245519984707546482[141] = 0;
   out_6245519984707546482[142] = 0;
   out_6245519984707546482[143] = 0;
   out_6245519984707546482[144] = 0;
   out_6245519984707546482[145] = 0;
   out_6245519984707546482[146] = 0;
   out_6245519984707546482[147] = 0;
   out_6245519984707546482[148] = 0;
   out_6245519984707546482[149] = 0;
   out_6245519984707546482[150] = 0;
   out_6245519984707546482[151] = 0;
   out_6245519984707546482[152] = 0;
   out_6245519984707546482[153] = 1.0;
   out_6245519984707546482[154] = 0;
   out_6245519984707546482[155] = 0;
   out_6245519984707546482[156] = 0;
   out_6245519984707546482[157] = 0;
   out_6245519984707546482[158] = 0;
   out_6245519984707546482[159] = 0;
   out_6245519984707546482[160] = 0;
   out_6245519984707546482[161] = 0;
   out_6245519984707546482[162] = 0;
   out_6245519984707546482[163] = 0;
   out_6245519984707546482[164] = 0;
   out_6245519984707546482[165] = 0;
   out_6245519984707546482[166] = 0;
   out_6245519984707546482[167] = 0;
   out_6245519984707546482[168] = 0;
   out_6245519984707546482[169] = 0;
   out_6245519984707546482[170] = 0;
   out_6245519984707546482[171] = 0;
   out_6245519984707546482[172] = 0;
   out_6245519984707546482[173] = 0;
   out_6245519984707546482[174] = 0;
   out_6245519984707546482[175] = 1.0;
   out_6245519984707546482[176] = 0;
   out_6245519984707546482[177] = 0;
   out_6245519984707546482[178] = 0;
   out_6245519984707546482[179] = 0;
   out_6245519984707546482[180] = 0;
   out_6245519984707546482[181] = 0;
   out_6245519984707546482[182] = 0;
   out_6245519984707546482[183] = 0;
   out_6245519984707546482[184] = 0;
   out_6245519984707546482[185] = 0;
   out_6245519984707546482[186] = 0;
   out_6245519984707546482[187] = 0;
   out_6245519984707546482[188] = 0;
   out_6245519984707546482[189] = 0;
   out_6245519984707546482[190] = 0;
   out_6245519984707546482[191] = 0;
   out_6245519984707546482[192] = 0;
   out_6245519984707546482[193] = 0;
   out_6245519984707546482[194] = 0;
   out_6245519984707546482[195] = 0;
   out_6245519984707546482[196] = 0;
   out_6245519984707546482[197] = 1.0;
   out_6245519984707546482[198] = 0;
   out_6245519984707546482[199] = 0;
   out_6245519984707546482[200] = 0;
   out_6245519984707546482[201] = 0;
   out_6245519984707546482[202] = 0;
   out_6245519984707546482[203] = 0;
   out_6245519984707546482[204] = 0;
   out_6245519984707546482[205] = 0;
   out_6245519984707546482[206] = 0;
   out_6245519984707546482[207] = 0;
   out_6245519984707546482[208] = 0;
   out_6245519984707546482[209] = 0;
   out_6245519984707546482[210] = 0;
   out_6245519984707546482[211] = 0;
   out_6245519984707546482[212] = 0;
   out_6245519984707546482[213] = 0;
   out_6245519984707546482[214] = 0;
   out_6245519984707546482[215] = 0;
   out_6245519984707546482[216] = 0;
   out_6245519984707546482[217] = 0;
   out_6245519984707546482[218] = 0;
   out_6245519984707546482[219] = 1.0;
   out_6245519984707546482[220] = 0;
   out_6245519984707546482[221] = 0;
   out_6245519984707546482[222] = 0;
   out_6245519984707546482[223] = 0;
   out_6245519984707546482[224] = 0;
   out_6245519984707546482[225] = 0;
   out_6245519984707546482[226] = 0;
   out_6245519984707546482[227] = 0;
   out_6245519984707546482[228] = 0;
   out_6245519984707546482[229] = 0;
   out_6245519984707546482[230] = 0;
   out_6245519984707546482[231] = 0;
   out_6245519984707546482[232] = 0;
   out_6245519984707546482[233] = 0;
   out_6245519984707546482[234] = 0;
   out_6245519984707546482[235] = 0;
   out_6245519984707546482[236] = 0;
   out_6245519984707546482[237] = 0;
   out_6245519984707546482[238] = 0;
   out_6245519984707546482[239] = 0;
   out_6245519984707546482[240] = 0;
   out_6245519984707546482[241] = 1.0;
   out_6245519984707546482[242] = 0;
   out_6245519984707546482[243] = 0;
   out_6245519984707546482[244] = 0;
   out_6245519984707546482[245] = 0;
   out_6245519984707546482[246] = 0;
   out_6245519984707546482[247] = 0;
   out_6245519984707546482[248] = 0;
   out_6245519984707546482[249] = 0;
   out_6245519984707546482[250] = 0;
   out_6245519984707546482[251] = 0;
   out_6245519984707546482[252] = 0;
   out_6245519984707546482[253] = 0;
   out_6245519984707546482[254] = 0;
   out_6245519984707546482[255] = 0;
   out_6245519984707546482[256] = 0;
   out_6245519984707546482[257] = 0;
   out_6245519984707546482[258] = 0;
   out_6245519984707546482[259] = 0;
   out_6245519984707546482[260] = 0;
   out_6245519984707546482[261] = 0;
   out_6245519984707546482[262] = 0;
   out_6245519984707546482[263] = 1.0;
   out_6245519984707546482[264] = 0;
   out_6245519984707546482[265] = 0;
   out_6245519984707546482[266] = 0;
   out_6245519984707546482[267] = 0;
   out_6245519984707546482[268] = 0;
   out_6245519984707546482[269] = 0;
   out_6245519984707546482[270] = 0;
   out_6245519984707546482[271] = 0;
   out_6245519984707546482[272] = 0;
   out_6245519984707546482[273] = 0;
   out_6245519984707546482[274] = 0;
   out_6245519984707546482[275] = 0;
   out_6245519984707546482[276] = 0;
   out_6245519984707546482[277] = 0;
   out_6245519984707546482[278] = 0;
   out_6245519984707546482[279] = 0;
   out_6245519984707546482[280] = 0;
   out_6245519984707546482[281] = 0;
   out_6245519984707546482[282] = 0;
   out_6245519984707546482[283] = 0;
   out_6245519984707546482[284] = 0;
   out_6245519984707546482[285] = 1.0;
   out_6245519984707546482[286] = 0;
   out_6245519984707546482[287] = 0;
   out_6245519984707546482[288] = 0;
   out_6245519984707546482[289] = 0;
   out_6245519984707546482[290] = 0;
   out_6245519984707546482[291] = 0;
   out_6245519984707546482[292] = 0;
   out_6245519984707546482[293] = 0;
   out_6245519984707546482[294] = 0;
   out_6245519984707546482[295] = 0;
   out_6245519984707546482[296] = 0;
   out_6245519984707546482[297] = 0;
   out_6245519984707546482[298] = 0;
   out_6245519984707546482[299] = 0;
   out_6245519984707546482[300] = 0;
   out_6245519984707546482[301] = 0;
   out_6245519984707546482[302] = 0;
   out_6245519984707546482[303] = 0;
   out_6245519984707546482[304] = 0;
   out_6245519984707546482[305] = 0;
   out_6245519984707546482[306] = 0;
   out_6245519984707546482[307] = 1.0;
   out_6245519984707546482[308] = 0;
   out_6245519984707546482[309] = 0;
   out_6245519984707546482[310] = 0;
   out_6245519984707546482[311] = 0;
   out_6245519984707546482[312] = 0;
   out_6245519984707546482[313] = 0;
   out_6245519984707546482[314] = 0;
   out_6245519984707546482[315] = 0;
   out_6245519984707546482[316] = 0;
   out_6245519984707546482[317] = 0;
   out_6245519984707546482[318] = 0;
   out_6245519984707546482[319] = 0;
   out_6245519984707546482[320] = 0;
   out_6245519984707546482[321] = 0;
   out_6245519984707546482[322] = 0;
   out_6245519984707546482[323] = 0;
   out_6245519984707546482[324] = 0;
   out_6245519984707546482[325] = 0;
   out_6245519984707546482[326] = 0;
   out_6245519984707546482[327] = 0;
   out_6245519984707546482[328] = 0;
   out_6245519984707546482[329] = 1.0;
   out_6245519984707546482[330] = 0;
   out_6245519984707546482[331] = 0;
   out_6245519984707546482[332] = 0;
   out_6245519984707546482[333] = 0;
   out_6245519984707546482[334] = 0;
   out_6245519984707546482[335] = 0;
   out_6245519984707546482[336] = 0;
   out_6245519984707546482[337] = 0;
   out_6245519984707546482[338] = 0;
   out_6245519984707546482[339] = 0;
   out_6245519984707546482[340] = 0;
   out_6245519984707546482[341] = 0;
   out_6245519984707546482[342] = 0;
   out_6245519984707546482[343] = 0;
   out_6245519984707546482[344] = 0;
   out_6245519984707546482[345] = 0;
   out_6245519984707546482[346] = 0;
   out_6245519984707546482[347] = 0;
   out_6245519984707546482[348] = 0;
   out_6245519984707546482[349] = 0;
   out_6245519984707546482[350] = 0;
   out_6245519984707546482[351] = 1.0;
   out_6245519984707546482[352] = 0;
   out_6245519984707546482[353] = 0;
   out_6245519984707546482[354] = 0;
   out_6245519984707546482[355] = 0;
   out_6245519984707546482[356] = 0;
   out_6245519984707546482[357] = 0;
   out_6245519984707546482[358] = 0;
   out_6245519984707546482[359] = 0;
   out_6245519984707546482[360] = 0;
   out_6245519984707546482[361] = 0;
   out_6245519984707546482[362] = 0;
   out_6245519984707546482[363] = 0;
   out_6245519984707546482[364] = 0;
   out_6245519984707546482[365] = 0;
   out_6245519984707546482[366] = 0;
   out_6245519984707546482[367] = 0;
   out_6245519984707546482[368] = 0;
   out_6245519984707546482[369] = 0;
   out_6245519984707546482[370] = 0;
   out_6245519984707546482[371] = 0;
   out_6245519984707546482[372] = 0;
   out_6245519984707546482[373] = 1.0;
   out_6245519984707546482[374] = 0;
   out_6245519984707546482[375] = 0;
   out_6245519984707546482[376] = 0;
   out_6245519984707546482[377] = 0;
   out_6245519984707546482[378] = 0;
   out_6245519984707546482[379] = 0;
   out_6245519984707546482[380] = 0;
   out_6245519984707546482[381] = 0;
   out_6245519984707546482[382] = 0;
   out_6245519984707546482[383] = 0;
   out_6245519984707546482[384] = 0;
   out_6245519984707546482[385] = 0;
   out_6245519984707546482[386] = 0;
   out_6245519984707546482[387] = 0;
   out_6245519984707546482[388] = 0;
   out_6245519984707546482[389] = 0;
   out_6245519984707546482[390] = 0;
   out_6245519984707546482[391] = 0;
   out_6245519984707546482[392] = 0;
   out_6245519984707546482[393] = 0;
   out_6245519984707546482[394] = 0;
   out_6245519984707546482[395] = 1.0;
   out_6245519984707546482[396] = 0;
   out_6245519984707546482[397] = 0;
   out_6245519984707546482[398] = 0;
   out_6245519984707546482[399] = 0;
   out_6245519984707546482[400] = 0;
   out_6245519984707546482[401] = 0;
   out_6245519984707546482[402] = 0;
   out_6245519984707546482[403] = 0;
   out_6245519984707546482[404] = 0;
   out_6245519984707546482[405] = 0;
   out_6245519984707546482[406] = 0;
   out_6245519984707546482[407] = 0;
   out_6245519984707546482[408] = 0;
   out_6245519984707546482[409] = 0;
   out_6245519984707546482[410] = 0;
   out_6245519984707546482[411] = 0;
   out_6245519984707546482[412] = 0;
   out_6245519984707546482[413] = 0;
   out_6245519984707546482[414] = 0;
   out_6245519984707546482[415] = 0;
   out_6245519984707546482[416] = 0;
   out_6245519984707546482[417] = 1.0;
   out_6245519984707546482[418] = 0;
   out_6245519984707546482[419] = 0;
   out_6245519984707546482[420] = 0;
   out_6245519984707546482[421] = 0;
   out_6245519984707546482[422] = 0;
   out_6245519984707546482[423] = 0;
   out_6245519984707546482[424] = 0;
   out_6245519984707546482[425] = 0;
   out_6245519984707546482[426] = 0;
   out_6245519984707546482[427] = 0;
   out_6245519984707546482[428] = 0;
   out_6245519984707546482[429] = 0;
   out_6245519984707546482[430] = 0;
   out_6245519984707546482[431] = 0;
   out_6245519984707546482[432] = 0;
   out_6245519984707546482[433] = 0;
   out_6245519984707546482[434] = 0;
   out_6245519984707546482[435] = 0;
   out_6245519984707546482[436] = 0;
   out_6245519984707546482[437] = 0;
   out_6245519984707546482[438] = 0;
   out_6245519984707546482[439] = 1.0;
   out_6245519984707546482[440] = 0;
   out_6245519984707546482[441] = 0;
   out_6245519984707546482[442] = 0;
   out_6245519984707546482[443] = 0;
   out_6245519984707546482[444] = 0;
   out_6245519984707546482[445] = 0;
   out_6245519984707546482[446] = 0;
   out_6245519984707546482[447] = 0;
   out_6245519984707546482[448] = 0;
   out_6245519984707546482[449] = 0;
   out_6245519984707546482[450] = 0;
   out_6245519984707546482[451] = 0;
   out_6245519984707546482[452] = 0;
   out_6245519984707546482[453] = 0;
   out_6245519984707546482[454] = 0;
   out_6245519984707546482[455] = 0;
   out_6245519984707546482[456] = 0;
   out_6245519984707546482[457] = 0;
   out_6245519984707546482[458] = 0;
   out_6245519984707546482[459] = 0;
   out_6245519984707546482[460] = 0;
   out_6245519984707546482[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3243602048370032302) {
   out_3243602048370032302[0] = dt*state[7] + state[0];
   out_3243602048370032302[1] = dt*state[8] + state[1];
   out_3243602048370032302[2] = dt*state[9] + state[2];
   out_3243602048370032302[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3243602048370032302[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3243602048370032302[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3243602048370032302[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3243602048370032302[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3243602048370032302[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3243602048370032302[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3243602048370032302[10] = state[10];
   out_3243602048370032302[11] = state[11];
   out_3243602048370032302[12] = state[12];
   out_3243602048370032302[13] = state[13];
   out_3243602048370032302[14] = state[14];
   out_3243602048370032302[15] = state[15];
   out_3243602048370032302[16] = state[16];
   out_3243602048370032302[17] = state[17];
   out_3243602048370032302[18] = state[18];
   out_3243602048370032302[19] = state[19];
   out_3243602048370032302[20] = state[20];
   out_3243602048370032302[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5080430979257473046) {
   out_5080430979257473046[0] = 1;
   out_5080430979257473046[1] = 0;
   out_5080430979257473046[2] = 0;
   out_5080430979257473046[3] = 0;
   out_5080430979257473046[4] = 0;
   out_5080430979257473046[5] = 0;
   out_5080430979257473046[6] = dt;
   out_5080430979257473046[7] = 0;
   out_5080430979257473046[8] = 0;
   out_5080430979257473046[9] = 0;
   out_5080430979257473046[10] = 0;
   out_5080430979257473046[11] = 0;
   out_5080430979257473046[12] = 0;
   out_5080430979257473046[13] = 0;
   out_5080430979257473046[14] = 0;
   out_5080430979257473046[15] = 0;
   out_5080430979257473046[16] = 0;
   out_5080430979257473046[17] = 0;
   out_5080430979257473046[18] = 0;
   out_5080430979257473046[19] = 0;
   out_5080430979257473046[20] = 0;
   out_5080430979257473046[21] = 0;
   out_5080430979257473046[22] = 1;
   out_5080430979257473046[23] = 0;
   out_5080430979257473046[24] = 0;
   out_5080430979257473046[25] = 0;
   out_5080430979257473046[26] = 0;
   out_5080430979257473046[27] = 0;
   out_5080430979257473046[28] = dt;
   out_5080430979257473046[29] = 0;
   out_5080430979257473046[30] = 0;
   out_5080430979257473046[31] = 0;
   out_5080430979257473046[32] = 0;
   out_5080430979257473046[33] = 0;
   out_5080430979257473046[34] = 0;
   out_5080430979257473046[35] = 0;
   out_5080430979257473046[36] = 0;
   out_5080430979257473046[37] = 0;
   out_5080430979257473046[38] = 0;
   out_5080430979257473046[39] = 0;
   out_5080430979257473046[40] = 0;
   out_5080430979257473046[41] = 0;
   out_5080430979257473046[42] = 0;
   out_5080430979257473046[43] = 0;
   out_5080430979257473046[44] = 1;
   out_5080430979257473046[45] = 0;
   out_5080430979257473046[46] = 0;
   out_5080430979257473046[47] = 0;
   out_5080430979257473046[48] = 0;
   out_5080430979257473046[49] = 0;
   out_5080430979257473046[50] = dt;
   out_5080430979257473046[51] = 0;
   out_5080430979257473046[52] = 0;
   out_5080430979257473046[53] = 0;
   out_5080430979257473046[54] = 0;
   out_5080430979257473046[55] = 0;
   out_5080430979257473046[56] = 0;
   out_5080430979257473046[57] = 0;
   out_5080430979257473046[58] = 0;
   out_5080430979257473046[59] = 0;
   out_5080430979257473046[60] = 0;
   out_5080430979257473046[61] = 0;
   out_5080430979257473046[62] = 0;
   out_5080430979257473046[63] = 0;
   out_5080430979257473046[64] = 0;
   out_5080430979257473046[65] = 0;
   out_5080430979257473046[66] = 1;
   out_5080430979257473046[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5080430979257473046[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5080430979257473046[69] = 0;
   out_5080430979257473046[70] = 0;
   out_5080430979257473046[71] = 0;
   out_5080430979257473046[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5080430979257473046[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5080430979257473046[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5080430979257473046[75] = 0;
   out_5080430979257473046[76] = 0;
   out_5080430979257473046[77] = 0;
   out_5080430979257473046[78] = 0;
   out_5080430979257473046[79] = 0;
   out_5080430979257473046[80] = 0;
   out_5080430979257473046[81] = 0;
   out_5080430979257473046[82] = 0;
   out_5080430979257473046[83] = 0;
   out_5080430979257473046[84] = 0;
   out_5080430979257473046[85] = 0;
   out_5080430979257473046[86] = 0;
   out_5080430979257473046[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5080430979257473046[88] = 1;
   out_5080430979257473046[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5080430979257473046[90] = 0;
   out_5080430979257473046[91] = 0;
   out_5080430979257473046[92] = 0;
   out_5080430979257473046[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5080430979257473046[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5080430979257473046[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5080430979257473046[96] = 0;
   out_5080430979257473046[97] = 0;
   out_5080430979257473046[98] = 0;
   out_5080430979257473046[99] = 0;
   out_5080430979257473046[100] = 0;
   out_5080430979257473046[101] = 0;
   out_5080430979257473046[102] = 0;
   out_5080430979257473046[103] = 0;
   out_5080430979257473046[104] = 0;
   out_5080430979257473046[105] = 0;
   out_5080430979257473046[106] = 0;
   out_5080430979257473046[107] = 0;
   out_5080430979257473046[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5080430979257473046[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5080430979257473046[110] = 1;
   out_5080430979257473046[111] = 0;
   out_5080430979257473046[112] = 0;
   out_5080430979257473046[113] = 0;
   out_5080430979257473046[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5080430979257473046[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5080430979257473046[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5080430979257473046[117] = 0;
   out_5080430979257473046[118] = 0;
   out_5080430979257473046[119] = 0;
   out_5080430979257473046[120] = 0;
   out_5080430979257473046[121] = 0;
   out_5080430979257473046[122] = 0;
   out_5080430979257473046[123] = 0;
   out_5080430979257473046[124] = 0;
   out_5080430979257473046[125] = 0;
   out_5080430979257473046[126] = 0;
   out_5080430979257473046[127] = 0;
   out_5080430979257473046[128] = 0;
   out_5080430979257473046[129] = 0;
   out_5080430979257473046[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5080430979257473046[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5080430979257473046[132] = 1;
   out_5080430979257473046[133] = 0;
   out_5080430979257473046[134] = 0;
   out_5080430979257473046[135] = 0;
   out_5080430979257473046[136] = 0;
   out_5080430979257473046[137] = 0;
   out_5080430979257473046[138] = 0;
   out_5080430979257473046[139] = 0;
   out_5080430979257473046[140] = 0;
   out_5080430979257473046[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5080430979257473046[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5080430979257473046[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5080430979257473046[144] = 0;
   out_5080430979257473046[145] = 0;
   out_5080430979257473046[146] = 0;
   out_5080430979257473046[147] = 0;
   out_5080430979257473046[148] = 0;
   out_5080430979257473046[149] = 0;
   out_5080430979257473046[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5080430979257473046[151] = 0;
   out_5080430979257473046[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5080430979257473046[153] = 0;
   out_5080430979257473046[154] = 1;
   out_5080430979257473046[155] = 0;
   out_5080430979257473046[156] = 0;
   out_5080430979257473046[157] = 0;
   out_5080430979257473046[158] = 0;
   out_5080430979257473046[159] = 0;
   out_5080430979257473046[160] = 0;
   out_5080430979257473046[161] = 0;
   out_5080430979257473046[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5080430979257473046[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5080430979257473046[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5080430979257473046[165] = 0;
   out_5080430979257473046[166] = 0;
   out_5080430979257473046[167] = 0;
   out_5080430979257473046[168] = 0;
   out_5080430979257473046[169] = 0;
   out_5080430979257473046[170] = 0;
   out_5080430979257473046[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5080430979257473046[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5080430979257473046[173] = 0;
   out_5080430979257473046[174] = 0;
   out_5080430979257473046[175] = 0;
   out_5080430979257473046[176] = 1;
   out_5080430979257473046[177] = 0;
   out_5080430979257473046[178] = 0;
   out_5080430979257473046[179] = 0;
   out_5080430979257473046[180] = 0;
   out_5080430979257473046[181] = 0;
   out_5080430979257473046[182] = 0;
   out_5080430979257473046[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5080430979257473046[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5080430979257473046[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5080430979257473046[186] = 0;
   out_5080430979257473046[187] = 0;
   out_5080430979257473046[188] = 0;
   out_5080430979257473046[189] = 0;
   out_5080430979257473046[190] = 0;
   out_5080430979257473046[191] = 0;
   out_5080430979257473046[192] = 0;
   out_5080430979257473046[193] = 0;
   out_5080430979257473046[194] = 0;
   out_5080430979257473046[195] = 0;
   out_5080430979257473046[196] = 0;
   out_5080430979257473046[197] = 0;
   out_5080430979257473046[198] = 1;
   out_5080430979257473046[199] = 0;
   out_5080430979257473046[200] = 0;
   out_5080430979257473046[201] = 0;
   out_5080430979257473046[202] = 0;
   out_5080430979257473046[203] = 0;
   out_5080430979257473046[204] = 0;
   out_5080430979257473046[205] = 0;
   out_5080430979257473046[206] = 0;
   out_5080430979257473046[207] = 0;
   out_5080430979257473046[208] = 0;
   out_5080430979257473046[209] = 0;
   out_5080430979257473046[210] = 0;
   out_5080430979257473046[211] = 0;
   out_5080430979257473046[212] = 0;
   out_5080430979257473046[213] = 0;
   out_5080430979257473046[214] = 0;
   out_5080430979257473046[215] = 0;
   out_5080430979257473046[216] = 0;
   out_5080430979257473046[217] = 0;
   out_5080430979257473046[218] = 0;
   out_5080430979257473046[219] = 0;
   out_5080430979257473046[220] = 1;
   out_5080430979257473046[221] = 0;
   out_5080430979257473046[222] = 0;
   out_5080430979257473046[223] = 0;
   out_5080430979257473046[224] = 0;
   out_5080430979257473046[225] = 0;
   out_5080430979257473046[226] = 0;
   out_5080430979257473046[227] = 0;
   out_5080430979257473046[228] = 0;
   out_5080430979257473046[229] = 0;
   out_5080430979257473046[230] = 0;
   out_5080430979257473046[231] = 0;
   out_5080430979257473046[232] = 0;
   out_5080430979257473046[233] = 0;
   out_5080430979257473046[234] = 0;
   out_5080430979257473046[235] = 0;
   out_5080430979257473046[236] = 0;
   out_5080430979257473046[237] = 0;
   out_5080430979257473046[238] = 0;
   out_5080430979257473046[239] = 0;
   out_5080430979257473046[240] = 0;
   out_5080430979257473046[241] = 0;
   out_5080430979257473046[242] = 1;
   out_5080430979257473046[243] = 0;
   out_5080430979257473046[244] = 0;
   out_5080430979257473046[245] = 0;
   out_5080430979257473046[246] = 0;
   out_5080430979257473046[247] = 0;
   out_5080430979257473046[248] = 0;
   out_5080430979257473046[249] = 0;
   out_5080430979257473046[250] = 0;
   out_5080430979257473046[251] = 0;
   out_5080430979257473046[252] = 0;
   out_5080430979257473046[253] = 0;
   out_5080430979257473046[254] = 0;
   out_5080430979257473046[255] = 0;
   out_5080430979257473046[256] = 0;
   out_5080430979257473046[257] = 0;
   out_5080430979257473046[258] = 0;
   out_5080430979257473046[259] = 0;
   out_5080430979257473046[260] = 0;
   out_5080430979257473046[261] = 0;
   out_5080430979257473046[262] = 0;
   out_5080430979257473046[263] = 0;
   out_5080430979257473046[264] = 1;
   out_5080430979257473046[265] = 0;
   out_5080430979257473046[266] = 0;
   out_5080430979257473046[267] = 0;
   out_5080430979257473046[268] = 0;
   out_5080430979257473046[269] = 0;
   out_5080430979257473046[270] = 0;
   out_5080430979257473046[271] = 0;
   out_5080430979257473046[272] = 0;
   out_5080430979257473046[273] = 0;
   out_5080430979257473046[274] = 0;
   out_5080430979257473046[275] = 0;
   out_5080430979257473046[276] = 0;
   out_5080430979257473046[277] = 0;
   out_5080430979257473046[278] = 0;
   out_5080430979257473046[279] = 0;
   out_5080430979257473046[280] = 0;
   out_5080430979257473046[281] = 0;
   out_5080430979257473046[282] = 0;
   out_5080430979257473046[283] = 0;
   out_5080430979257473046[284] = 0;
   out_5080430979257473046[285] = 0;
   out_5080430979257473046[286] = 1;
   out_5080430979257473046[287] = 0;
   out_5080430979257473046[288] = 0;
   out_5080430979257473046[289] = 0;
   out_5080430979257473046[290] = 0;
   out_5080430979257473046[291] = 0;
   out_5080430979257473046[292] = 0;
   out_5080430979257473046[293] = 0;
   out_5080430979257473046[294] = 0;
   out_5080430979257473046[295] = 0;
   out_5080430979257473046[296] = 0;
   out_5080430979257473046[297] = 0;
   out_5080430979257473046[298] = 0;
   out_5080430979257473046[299] = 0;
   out_5080430979257473046[300] = 0;
   out_5080430979257473046[301] = 0;
   out_5080430979257473046[302] = 0;
   out_5080430979257473046[303] = 0;
   out_5080430979257473046[304] = 0;
   out_5080430979257473046[305] = 0;
   out_5080430979257473046[306] = 0;
   out_5080430979257473046[307] = 0;
   out_5080430979257473046[308] = 1;
   out_5080430979257473046[309] = 0;
   out_5080430979257473046[310] = 0;
   out_5080430979257473046[311] = 0;
   out_5080430979257473046[312] = 0;
   out_5080430979257473046[313] = 0;
   out_5080430979257473046[314] = 0;
   out_5080430979257473046[315] = 0;
   out_5080430979257473046[316] = 0;
   out_5080430979257473046[317] = 0;
   out_5080430979257473046[318] = 0;
   out_5080430979257473046[319] = 0;
   out_5080430979257473046[320] = 0;
   out_5080430979257473046[321] = 0;
   out_5080430979257473046[322] = 0;
   out_5080430979257473046[323] = 0;
   out_5080430979257473046[324] = 0;
   out_5080430979257473046[325] = 0;
   out_5080430979257473046[326] = 0;
   out_5080430979257473046[327] = 0;
   out_5080430979257473046[328] = 0;
   out_5080430979257473046[329] = 0;
   out_5080430979257473046[330] = 1;
   out_5080430979257473046[331] = 0;
   out_5080430979257473046[332] = 0;
   out_5080430979257473046[333] = 0;
   out_5080430979257473046[334] = 0;
   out_5080430979257473046[335] = 0;
   out_5080430979257473046[336] = 0;
   out_5080430979257473046[337] = 0;
   out_5080430979257473046[338] = 0;
   out_5080430979257473046[339] = 0;
   out_5080430979257473046[340] = 0;
   out_5080430979257473046[341] = 0;
   out_5080430979257473046[342] = 0;
   out_5080430979257473046[343] = 0;
   out_5080430979257473046[344] = 0;
   out_5080430979257473046[345] = 0;
   out_5080430979257473046[346] = 0;
   out_5080430979257473046[347] = 0;
   out_5080430979257473046[348] = 0;
   out_5080430979257473046[349] = 0;
   out_5080430979257473046[350] = 0;
   out_5080430979257473046[351] = 0;
   out_5080430979257473046[352] = 1;
   out_5080430979257473046[353] = 0;
   out_5080430979257473046[354] = 0;
   out_5080430979257473046[355] = 0;
   out_5080430979257473046[356] = 0;
   out_5080430979257473046[357] = 0;
   out_5080430979257473046[358] = 0;
   out_5080430979257473046[359] = 0;
   out_5080430979257473046[360] = 0;
   out_5080430979257473046[361] = 0;
   out_5080430979257473046[362] = 0;
   out_5080430979257473046[363] = 0;
   out_5080430979257473046[364] = 0;
   out_5080430979257473046[365] = 0;
   out_5080430979257473046[366] = 0;
   out_5080430979257473046[367] = 0;
   out_5080430979257473046[368] = 0;
   out_5080430979257473046[369] = 0;
   out_5080430979257473046[370] = 0;
   out_5080430979257473046[371] = 0;
   out_5080430979257473046[372] = 0;
   out_5080430979257473046[373] = 0;
   out_5080430979257473046[374] = 1;
   out_5080430979257473046[375] = 0;
   out_5080430979257473046[376] = 0;
   out_5080430979257473046[377] = 0;
   out_5080430979257473046[378] = 0;
   out_5080430979257473046[379] = 0;
   out_5080430979257473046[380] = 0;
   out_5080430979257473046[381] = 0;
   out_5080430979257473046[382] = 0;
   out_5080430979257473046[383] = 0;
   out_5080430979257473046[384] = 0;
   out_5080430979257473046[385] = 0;
   out_5080430979257473046[386] = 0;
   out_5080430979257473046[387] = 0;
   out_5080430979257473046[388] = 0;
   out_5080430979257473046[389] = 0;
   out_5080430979257473046[390] = 0;
   out_5080430979257473046[391] = 0;
   out_5080430979257473046[392] = 0;
   out_5080430979257473046[393] = 0;
   out_5080430979257473046[394] = 0;
   out_5080430979257473046[395] = 0;
   out_5080430979257473046[396] = 1;
   out_5080430979257473046[397] = 0;
   out_5080430979257473046[398] = 0;
   out_5080430979257473046[399] = 0;
   out_5080430979257473046[400] = 0;
   out_5080430979257473046[401] = 0;
   out_5080430979257473046[402] = 0;
   out_5080430979257473046[403] = 0;
   out_5080430979257473046[404] = 0;
   out_5080430979257473046[405] = 0;
   out_5080430979257473046[406] = 0;
   out_5080430979257473046[407] = 0;
   out_5080430979257473046[408] = 0;
   out_5080430979257473046[409] = 0;
   out_5080430979257473046[410] = 0;
   out_5080430979257473046[411] = 0;
   out_5080430979257473046[412] = 0;
   out_5080430979257473046[413] = 0;
   out_5080430979257473046[414] = 0;
   out_5080430979257473046[415] = 0;
   out_5080430979257473046[416] = 0;
   out_5080430979257473046[417] = 0;
   out_5080430979257473046[418] = 1;
   out_5080430979257473046[419] = 0;
   out_5080430979257473046[420] = 0;
   out_5080430979257473046[421] = 0;
   out_5080430979257473046[422] = 0;
   out_5080430979257473046[423] = 0;
   out_5080430979257473046[424] = 0;
   out_5080430979257473046[425] = 0;
   out_5080430979257473046[426] = 0;
   out_5080430979257473046[427] = 0;
   out_5080430979257473046[428] = 0;
   out_5080430979257473046[429] = 0;
   out_5080430979257473046[430] = 0;
   out_5080430979257473046[431] = 0;
   out_5080430979257473046[432] = 0;
   out_5080430979257473046[433] = 0;
   out_5080430979257473046[434] = 0;
   out_5080430979257473046[435] = 0;
   out_5080430979257473046[436] = 0;
   out_5080430979257473046[437] = 0;
   out_5080430979257473046[438] = 0;
   out_5080430979257473046[439] = 0;
   out_5080430979257473046[440] = 1;
}
void h_4(double *state, double *unused, double *out_5465210553308981186) {
   out_5465210553308981186[0] = state[10] + state[13];
   out_5465210553308981186[1] = state[11] + state[14];
   out_5465210553308981186[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8665156220454918411) {
   out_8665156220454918411[0] = 0;
   out_8665156220454918411[1] = 0;
   out_8665156220454918411[2] = 0;
   out_8665156220454918411[3] = 0;
   out_8665156220454918411[4] = 0;
   out_8665156220454918411[5] = 0;
   out_8665156220454918411[6] = 0;
   out_8665156220454918411[7] = 0;
   out_8665156220454918411[8] = 0;
   out_8665156220454918411[9] = 0;
   out_8665156220454918411[10] = 1;
   out_8665156220454918411[11] = 0;
   out_8665156220454918411[12] = 0;
   out_8665156220454918411[13] = 1;
   out_8665156220454918411[14] = 0;
   out_8665156220454918411[15] = 0;
   out_8665156220454918411[16] = 0;
   out_8665156220454918411[17] = 0;
   out_8665156220454918411[18] = 0;
   out_8665156220454918411[19] = 0;
   out_8665156220454918411[20] = 0;
   out_8665156220454918411[21] = 0;
   out_8665156220454918411[22] = 0;
   out_8665156220454918411[23] = 0;
   out_8665156220454918411[24] = 0;
   out_8665156220454918411[25] = 0;
   out_8665156220454918411[26] = 0;
   out_8665156220454918411[27] = 0;
   out_8665156220454918411[28] = 0;
   out_8665156220454918411[29] = 0;
   out_8665156220454918411[30] = 0;
   out_8665156220454918411[31] = 0;
   out_8665156220454918411[32] = 0;
   out_8665156220454918411[33] = 1;
   out_8665156220454918411[34] = 0;
   out_8665156220454918411[35] = 0;
   out_8665156220454918411[36] = 1;
   out_8665156220454918411[37] = 0;
   out_8665156220454918411[38] = 0;
   out_8665156220454918411[39] = 0;
   out_8665156220454918411[40] = 0;
   out_8665156220454918411[41] = 0;
   out_8665156220454918411[42] = 0;
   out_8665156220454918411[43] = 0;
   out_8665156220454918411[44] = 0;
   out_8665156220454918411[45] = 0;
   out_8665156220454918411[46] = 0;
   out_8665156220454918411[47] = 0;
   out_8665156220454918411[48] = 0;
   out_8665156220454918411[49] = 0;
   out_8665156220454918411[50] = 0;
   out_8665156220454918411[51] = 0;
   out_8665156220454918411[52] = 0;
   out_8665156220454918411[53] = 0;
   out_8665156220454918411[54] = 0;
   out_8665156220454918411[55] = 0;
   out_8665156220454918411[56] = 1;
   out_8665156220454918411[57] = 0;
   out_8665156220454918411[58] = 0;
   out_8665156220454918411[59] = 1;
   out_8665156220454918411[60] = 0;
   out_8665156220454918411[61] = 0;
   out_8665156220454918411[62] = 0;
   out_8665156220454918411[63] = 0;
   out_8665156220454918411[64] = 0;
   out_8665156220454918411[65] = 0;
}
void h_9(double *state, double *unused, double *out_4580217727067371428) {
   out_4580217727067371428[0] = state[10];
   out_4580217727067371428[1] = state[11];
   out_4580217727067371428[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4507988484100140928) {
   out_4507988484100140928[0] = 0;
   out_4507988484100140928[1] = 0;
   out_4507988484100140928[2] = 0;
   out_4507988484100140928[3] = 0;
   out_4507988484100140928[4] = 0;
   out_4507988484100140928[5] = 0;
   out_4507988484100140928[6] = 0;
   out_4507988484100140928[7] = 0;
   out_4507988484100140928[8] = 0;
   out_4507988484100140928[9] = 0;
   out_4507988484100140928[10] = 1;
   out_4507988484100140928[11] = 0;
   out_4507988484100140928[12] = 0;
   out_4507988484100140928[13] = 0;
   out_4507988484100140928[14] = 0;
   out_4507988484100140928[15] = 0;
   out_4507988484100140928[16] = 0;
   out_4507988484100140928[17] = 0;
   out_4507988484100140928[18] = 0;
   out_4507988484100140928[19] = 0;
   out_4507988484100140928[20] = 0;
   out_4507988484100140928[21] = 0;
   out_4507988484100140928[22] = 0;
   out_4507988484100140928[23] = 0;
   out_4507988484100140928[24] = 0;
   out_4507988484100140928[25] = 0;
   out_4507988484100140928[26] = 0;
   out_4507988484100140928[27] = 0;
   out_4507988484100140928[28] = 0;
   out_4507988484100140928[29] = 0;
   out_4507988484100140928[30] = 0;
   out_4507988484100140928[31] = 0;
   out_4507988484100140928[32] = 0;
   out_4507988484100140928[33] = 1;
   out_4507988484100140928[34] = 0;
   out_4507988484100140928[35] = 0;
   out_4507988484100140928[36] = 0;
   out_4507988484100140928[37] = 0;
   out_4507988484100140928[38] = 0;
   out_4507988484100140928[39] = 0;
   out_4507988484100140928[40] = 0;
   out_4507988484100140928[41] = 0;
   out_4507988484100140928[42] = 0;
   out_4507988484100140928[43] = 0;
   out_4507988484100140928[44] = 0;
   out_4507988484100140928[45] = 0;
   out_4507988484100140928[46] = 0;
   out_4507988484100140928[47] = 0;
   out_4507988484100140928[48] = 0;
   out_4507988484100140928[49] = 0;
   out_4507988484100140928[50] = 0;
   out_4507988484100140928[51] = 0;
   out_4507988484100140928[52] = 0;
   out_4507988484100140928[53] = 0;
   out_4507988484100140928[54] = 0;
   out_4507988484100140928[55] = 0;
   out_4507988484100140928[56] = 1;
   out_4507988484100140928[57] = 0;
   out_4507988484100140928[58] = 0;
   out_4507988484100140928[59] = 0;
   out_4507988484100140928[60] = 0;
   out_4507988484100140928[61] = 0;
   out_4507988484100140928[62] = 0;
   out_4507988484100140928[63] = 0;
   out_4507988484100140928[64] = 0;
   out_4507988484100140928[65] = 0;
}
void h_10(double *state, double *unused, double *out_4894321095925723070) {
   out_4894321095925723070[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4894321095925723070[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4894321095925723070[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2200864402958350746) {
   out_2200864402958350746[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2200864402958350746[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2200864402958350746[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2200864402958350746[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2200864402958350746[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2200864402958350746[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2200864402958350746[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2200864402958350746[7] = 0;
   out_2200864402958350746[8] = 0;
   out_2200864402958350746[9] = 0;
   out_2200864402958350746[10] = 0;
   out_2200864402958350746[11] = 0;
   out_2200864402958350746[12] = 0;
   out_2200864402958350746[13] = 0;
   out_2200864402958350746[14] = 0;
   out_2200864402958350746[15] = 0;
   out_2200864402958350746[16] = 1;
   out_2200864402958350746[17] = 0;
   out_2200864402958350746[18] = 0;
   out_2200864402958350746[19] = 1;
   out_2200864402958350746[20] = 0;
   out_2200864402958350746[21] = 0;
   out_2200864402958350746[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2200864402958350746[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2200864402958350746[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2200864402958350746[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2200864402958350746[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2200864402958350746[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2200864402958350746[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2200864402958350746[29] = 0;
   out_2200864402958350746[30] = 0;
   out_2200864402958350746[31] = 0;
   out_2200864402958350746[32] = 0;
   out_2200864402958350746[33] = 0;
   out_2200864402958350746[34] = 0;
   out_2200864402958350746[35] = 0;
   out_2200864402958350746[36] = 0;
   out_2200864402958350746[37] = 0;
   out_2200864402958350746[38] = 0;
   out_2200864402958350746[39] = 1;
   out_2200864402958350746[40] = 0;
   out_2200864402958350746[41] = 0;
   out_2200864402958350746[42] = 1;
   out_2200864402958350746[43] = 0;
   out_2200864402958350746[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2200864402958350746[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2200864402958350746[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2200864402958350746[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2200864402958350746[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2200864402958350746[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2200864402958350746[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2200864402958350746[51] = 0;
   out_2200864402958350746[52] = 0;
   out_2200864402958350746[53] = 0;
   out_2200864402958350746[54] = 0;
   out_2200864402958350746[55] = 0;
   out_2200864402958350746[56] = 0;
   out_2200864402958350746[57] = 0;
   out_2200864402958350746[58] = 0;
   out_2200864402958350746[59] = 0;
   out_2200864402958350746[60] = 0;
   out_2200864402958350746[61] = 0;
   out_2200864402958350746[62] = 1;
   out_2200864402958350746[63] = 0;
   out_2200864402958350746[64] = 0;
   out_2200864402958350746[65] = 1;
}
void h_12(double *state, double *unused, double *out_6116745976112172927) {
   out_6116745976112172927[0] = state[0];
   out_6116745976112172927[1] = state[1];
   out_6116745976112172927[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9160488828207039538) {
   out_9160488828207039538[0] = 1;
   out_9160488828207039538[1] = 0;
   out_9160488828207039538[2] = 0;
   out_9160488828207039538[3] = 0;
   out_9160488828207039538[4] = 0;
   out_9160488828207039538[5] = 0;
   out_9160488828207039538[6] = 0;
   out_9160488828207039538[7] = 0;
   out_9160488828207039538[8] = 0;
   out_9160488828207039538[9] = 0;
   out_9160488828207039538[10] = 0;
   out_9160488828207039538[11] = 0;
   out_9160488828207039538[12] = 0;
   out_9160488828207039538[13] = 0;
   out_9160488828207039538[14] = 0;
   out_9160488828207039538[15] = 0;
   out_9160488828207039538[16] = 0;
   out_9160488828207039538[17] = 0;
   out_9160488828207039538[18] = 0;
   out_9160488828207039538[19] = 0;
   out_9160488828207039538[20] = 0;
   out_9160488828207039538[21] = 0;
   out_9160488828207039538[22] = 0;
   out_9160488828207039538[23] = 1;
   out_9160488828207039538[24] = 0;
   out_9160488828207039538[25] = 0;
   out_9160488828207039538[26] = 0;
   out_9160488828207039538[27] = 0;
   out_9160488828207039538[28] = 0;
   out_9160488828207039538[29] = 0;
   out_9160488828207039538[30] = 0;
   out_9160488828207039538[31] = 0;
   out_9160488828207039538[32] = 0;
   out_9160488828207039538[33] = 0;
   out_9160488828207039538[34] = 0;
   out_9160488828207039538[35] = 0;
   out_9160488828207039538[36] = 0;
   out_9160488828207039538[37] = 0;
   out_9160488828207039538[38] = 0;
   out_9160488828207039538[39] = 0;
   out_9160488828207039538[40] = 0;
   out_9160488828207039538[41] = 0;
   out_9160488828207039538[42] = 0;
   out_9160488828207039538[43] = 0;
   out_9160488828207039538[44] = 0;
   out_9160488828207039538[45] = 0;
   out_9160488828207039538[46] = 1;
   out_9160488828207039538[47] = 0;
   out_9160488828207039538[48] = 0;
   out_9160488828207039538[49] = 0;
   out_9160488828207039538[50] = 0;
   out_9160488828207039538[51] = 0;
   out_9160488828207039538[52] = 0;
   out_9160488828207039538[53] = 0;
   out_9160488828207039538[54] = 0;
   out_9160488828207039538[55] = 0;
   out_9160488828207039538[56] = 0;
   out_9160488828207039538[57] = 0;
   out_9160488828207039538[58] = 0;
   out_9160488828207039538[59] = 0;
   out_9160488828207039538[60] = 0;
   out_9160488828207039538[61] = 0;
   out_9160488828207039538[62] = 0;
   out_9160488828207039538[63] = 0;
   out_9160488828207039538[64] = 0;
   out_9160488828207039538[65] = 0;
}
void h_35(double *state, double *unused, double *out_5998315411013033764) {
   out_5998315411013033764[0] = state[7];
   out_5998315411013033764[1] = state[8];
   out_5998315411013033764[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6414925795882025829) {
   out_6414925795882025829[0] = 0;
   out_6414925795882025829[1] = 0;
   out_6414925795882025829[2] = 0;
   out_6414925795882025829[3] = 0;
   out_6414925795882025829[4] = 0;
   out_6414925795882025829[5] = 0;
   out_6414925795882025829[6] = 0;
   out_6414925795882025829[7] = 1;
   out_6414925795882025829[8] = 0;
   out_6414925795882025829[9] = 0;
   out_6414925795882025829[10] = 0;
   out_6414925795882025829[11] = 0;
   out_6414925795882025829[12] = 0;
   out_6414925795882025829[13] = 0;
   out_6414925795882025829[14] = 0;
   out_6414925795882025829[15] = 0;
   out_6414925795882025829[16] = 0;
   out_6414925795882025829[17] = 0;
   out_6414925795882025829[18] = 0;
   out_6414925795882025829[19] = 0;
   out_6414925795882025829[20] = 0;
   out_6414925795882025829[21] = 0;
   out_6414925795882025829[22] = 0;
   out_6414925795882025829[23] = 0;
   out_6414925795882025829[24] = 0;
   out_6414925795882025829[25] = 0;
   out_6414925795882025829[26] = 0;
   out_6414925795882025829[27] = 0;
   out_6414925795882025829[28] = 0;
   out_6414925795882025829[29] = 0;
   out_6414925795882025829[30] = 1;
   out_6414925795882025829[31] = 0;
   out_6414925795882025829[32] = 0;
   out_6414925795882025829[33] = 0;
   out_6414925795882025829[34] = 0;
   out_6414925795882025829[35] = 0;
   out_6414925795882025829[36] = 0;
   out_6414925795882025829[37] = 0;
   out_6414925795882025829[38] = 0;
   out_6414925795882025829[39] = 0;
   out_6414925795882025829[40] = 0;
   out_6414925795882025829[41] = 0;
   out_6414925795882025829[42] = 0;
   out_6414925795882025829[43] = 0;
   out_6414925795882025829[44] = 0;
   out_6414925795882025829[45] = 0;
   out_6414925795882025829[46] = 0;
   out_6414925795882025829[47] = 0;
   out_6414925795882025829[48] = 0;
   out_6414925795882025829[49] = 0;
   out_6414925795882025829[50] = 0;
   out_6414925795882025829[51] = 0;
   out_6414925795882025829[52] = 0;
   out_6414925795882025829[53] = 1;
   out_6414925795882025829[54] = 0;
   out_6414925795882025829[55] = 0;
   out_6414925795882025829[56] = 0;
   out_6414925795882025829[57] = 0;
   out_6414925795882025829[58] = 0;
   out_6414925795882025829[59] = 0;
   out_6414925795882025829[60] = 0;
   out_6414925795882025829[61] = 0;
   out_6414925795882025829[62] = 0;
   out_6414925795882025829[63] = 0;
   out_6414925795882025829[64] = 0;
   out_6414925795882025829[65] = 0;
}
void h_32(double *state, double *unused, double *out_920711856693618752) {
   out_920711856693618752[0] = state[3];
   out_920711856693618752[1] = state[4];
   out_920711856693618752[2] = state[5];
   out_920711856693618752[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3631267631463608236) {
   out_3631267631463608236[0] = 0;
   out_3631267631463608236[1] = 0;
   out_3631267631463608236[2] = 0;
   out_3631267631463608236[3] = 1;
   out_3631267631463608236[4] = 0;
   out_3631267631463608236[5] = 0;
   out_3631267631463608236[6] = 0;
   out_3631267631463608236[7] = 0;
   out_3631267631463608236[8] = 0;
   out_3631267631463608236[9] = 0;
   out_3631267631463608236[10] = 0;
   out_3631267631463608236[11] = 0;
   out_3631267631463608236[12] = 0;
   out_3631267631463608236[13] = 0;
   out_3631267631463608236[14] = 0;
   out_3631267631463608236[15] = 0;
   out_3631267631463608236[16] = 0;
   out_3631267631463608236[17] = 0;
   out_3631267631463608236[18] = 0;
   out_3631267631463608236[19] = 0;
   out_3631267631463608236[20] = 0;
   out_3631267631463608236[21] = 0;
   out_3631267631463608236[22] = 0;
   out_3631267631463608236[23] = 0;
   out_3631267631463608236[24] = 0;
   out_3631267631463608236[25] = 0;
   out_3631267631463608236[26] = 1;
   out_3631267631463608236[27] = 0;
   out_3631267631463608236[28] = 0;
   out_3631267631463608236[29] = 0;
   out_3631267631463608236[30] = 0;
   out_3631267631463608236[31] = 0;
   out_3631267631463608236[32] = 0;
   out_3631267631463608236[33] = 0;
   out_3631267631463608236[34] = 0;
   out_3631267631463608236[35] = 0;
   out_3631267631463608236[36] = 0;
   out_3631267631463608236[37] = 0;
   out_3631267631463608236[38] = 0;
   out_3631267631463608236[39] = 0;
   out_3631267631463608236[40] = 0;
   out_3631267631463608236[41] = 0;
   out_3631267631463608236[42] = 0;
   out_3631267631463608236[43] = 0;
   out_3631267631463608236[44] = 0;
   out_3631267631463608236[45] = 0;
   out_3631267631463608236[46] = 0;
   out_3631267631463608236[47] = 0;
   out_3631267631463608236[48] = 0;
   out_3631267631463608236[49] = 1;
   out_3631267631463608236[50] = 0;
   out_3631267631463608236[51] = 0;
   out_3631267631463608236[52] = 0;
   out_3631267631463608236[53] = 0;
   out_3631267631463608236[54] = 0;
   out_3631267631463608236[55] = 0;
   out_3631267631463608236[56] = 0;
   out_3631267631463608236[57] = 0;
   out_3631267631463608236[58] = 0;
   out_3631267631463608236[59] = 0;
   out_3631267631463608236[60] = 0;
   out_3631267631463608236[61] = 0;
   out_3631267631463608236[62] = 0;
   out_3631267631463608236[63] = 0;
   out_3631267631463608236[64] = 0;
   out_3631267631463608236[65] = 0;
   out_3631267631463608236[66] = 0;
   out_3631267631463608236[67] = 0;
   out_3631267631463608236[68] = 0;
   out_3631267631463608236[69] = 0;
   out_3631267631463608236[70] = 0;
   out_3631267631463608236[71] = 0;
   out_3631267631463608236[72] = 1;
   out_3631267631463608236[73] = 0;
   out_3631267631463608236[74] = 0;
   out_3631267631463608236[75] = 0;
   out_3631267631463608236[76] = 0;
   out_3631267631463608236[77] = 0;
   out_3631267631463608236[78] = 0;
   out_3631267631463608236[79] = 0;
   out_3631267631463608236[80] = 0;
   out_3631267631463608236[81] = 0;
   out_3631267631463608236[82] = 0;
   out_3631267631463608236[83] = 0;
   out_3631267631463608236[84] = 0;
   out_3631267631463608236[85] = 0;
   out_3631267631463608236[86] = 0;
   out_3631267631463608236[87] = 0;
}
void h_13(double *state, double *unused, double *out_8421617918659120550) {
   out_8421617918659120550[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8421617918659120550[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8421617918659120550[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8520443505670961767) {
   out_8520443505670961767[0] = 0;
   out_8520443505670961767[1] = 0;
   out_8520443505670961767[2] = 0;
   out_8520443505670961767[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8520443505670961767[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8520443505670961767[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8520443505670961767[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8520443505670961767[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8520443505670961767[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8520443505670961767[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8520443505670961767[10] = 0;
   out_8520443505670961767[11] = 0;
   out_8520443505670961767[12] = 0;
   out_8520443505670961767[13] = 0;
   out_8520443505670961767[14] = 0;
   out_8520443505670961767[15] = 0;
   out_8520443505670961767[16] = 0;
   out_8520443505670961767[17] = 0;
   out_8520443505670961767[18] = 0;
   out_8520443505670961767[19] = 0;
   out_8520443505670961767[20] = 0;
   out_8520443505670961767[21] = 0;
   out_8520443505670961767[22] = 0;
   out_8520443505670961767[23] = 0;
   out_8520443505670961767[24] = 0;
   out_8520443505670961767[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8520443505670961767[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8520443505670961767[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8520443505670961767[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8520443505670961767[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8520443505670961767[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8520443505670961767[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8520443505670961767[32] = 0;
   out_8520443505670961767[33] = 0;
   out_8520443505670961767[34] = 0;
   out_8520443505670961767[35] = 0;
   out_8520443505670961767[36] = 0;
   out_8520443505670961767[37] = 0;
   out_8520443505670961767[38] = 0;
   out_8520443505670961767[39] = 0;
   out_8520443505670961767[40] = 0;
   out_8520443505670961767[41] = 0;
   out_8520443505670961767[42] = 0;
   out_8520443505670961767[43] = 0;
   out_8520443505670961767[44] = 0;
   out_8520443505670961767[45] = 0;
   out_8520443505670961767[46] = 0;
   out_8520443505670961767[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8520443505670961767[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8520443505670961767[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8520443505670961767[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8520443505670961767[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8520443505670961767[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8520443505670961767[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8520443505670961767[54] = 0;
   out_8520443505670961767[55] = 0;
   out_8520443505670961767[56] = 0;
   out_8520443505670961767[57] = 0;
   out_8520443505670961767[58] = 0;
   out_8520443505670961767[59] = 0;
   out_8520443505670961767[60] = 0;
   out_8520443505670961767[61] = 0;
   out_8520443505670961767[62] = 0;
   out_8520443505670961767[63] = 0;
   out_8520443505670961767[64] = 0;
   out_8520443505670961767[65] = 0;
}
void h_14(double *state, double *unused, double *out_4580217727067371428) {
   out_4580217727067371428[0] = state[10];
   out_4580217727067371428[1] = state[11];
   out_4580217727067371428[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4507988484100140928) {
   out_4507988484100140928[0] = 0;
   out_4507988484100140928[1] = 0;
   out_4507988484100140928[2] = 0;
   out_4507988484100140928[3] = 0;
   out_4507988484100140928[4] = 0;
   out_4507988484100140928[5] = 0;
   out_4507988484100140928[6] = 0;
   out_4507988484100140928[7] = 0;
   out_4507988484100140928[8] = 0;
   out_4507988484100140928[9] = 0;
   out_4507988484100140928[10] = 1;
   out_4507988484100140928[11] = 0;
   out_4507988484100140928[12] = 0;
   out_4507988484100140928[13] = 0;
   out_4507988484100140928[14] = 0;
   out_4507988484100140928[15] = 0;
   out_4507988484100140928[16] = 0;
   out_4507988484100140928[17] = 0;
   out_4507988484100140928[18] = 0;
   out_4507988484100140928[19] = 0;
   out_4507988484100140928[20] = 0;
   out_4507988484100140928[21] = 0;
   out_4507988484100140928[22] = 0;
   out_4507988484100140928[23] = 0;
   out_4507988484100140928[24] = 0;
   out_4507988484100140928[25] = 0;
   out_4507988484100140928[26] = 0;
   out_4507988484100140928[27] = 0;
   out_4507988484100140928[28] = 0;
   out_4507988484100140928[29] = 0;
   out_4507988484100140928[30] = 0;
   out_4507988484100140928[31] = 0;
   out_4507988484100140928[32] = 0;
   out_4507988484100140928[33] = 1;
   out_4507988484100140928[34] = 0;
   out_4507988484100140928[35] = 0;
   out_4507988484100140928[36] = 0;
   out_4507988484100140928[37] = 0;
   out_4507988484100140928[38] = 0;
   out_4507988484100140928[39] = 0;
   out_4507988484100140928[40] = 0;
   out_4507988484100140928[41] = 0;
   out_4507988484100140928[42] = 0;
   out_4507988484100140928[43] = 0;
   out_4507988484100140928[44] = 0;
   out_4507988484100140928[45] = 0;
   out_4507988484100140928[46] = 0;
   out_4507988484100140928[47] = 0;
   out_4507988484100140928[48] = 0;
   out_4507988484100140928[49] = 0;
   out_4507988484100140928[50] = 0;
   out_4507988484100140928[51] = 0;
   out_4507988484100140928[52] = 0;
   out_4507988484100140928[53] = 0;
   out_4507988484100140928[54] = 0;
   out_4507988484100140928[55] = 0;
   out_4507988484100140928[56] = 1;
   out_4507988484100140928[57] = 0;
   out_4507988484100140928[58] = 0;
   out_4507988484100140928[59] = 0;
   out_4507988484100140928[60] = 0;
   out_4507988484100140928[61] = 0;
   out_4507988484100140928[62] = 0;
   out_4507988484100140928[63] = 0;
   out_4507988484100140928[64] = 0;
   out_4507988484100140928[65] = 0;
}
void h_33(double *state, double *unused, double *out_1157661319096080697) {
   out_1157661319096080697[0] = state[16];
   out_1157661319096080697[1] = state[17];
   out_1157661319096080697[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3264368791243168225) {
   out_3264368791243168225[0] = 0;
   out_3264368791243168225[1] = 0;
   out_3264368791243168225[2] = 0;
   out_3264368791243168225[3] = 0;
   out_3264368791243168225[4] = 0;
   out_3264368791243168225[5] = 0;
   out_3264368791243168225[6] = 0;
   out_3264368791243168225[7] = 0;
   out_3264368791243168225[8] = 0;
   out_3264368791243168225[9] = 0;
   out_3264368791243168225[10] = 0;
   out_3264368791243168225[11] = 0;
   out_3264368791243168225[12] = 0;
   out_3264368791243168225[13] = 0;
   out_3264368791243168225[14] = 0;
   out_3264368791243168225[15] = 0;
   out_3264368791243168225[16] = 1;
   out_3264368791243168225[17] = 0;
   out_3264368791243168225[18] = 0;
   out_3264368791243168225[19] = 0;
   out_3264368791243168225[20] = 0;
   out_3264368791243168225[21] = 0;
   out_3264368791243168225[22] = 0;
   out_3264368791243168225[23] = 0;
   out_3264368791243168225[24] = 0;
   out_3264368791243168225[25] = 0;
   out_3264368791243168225[26] = 0;
   out_3264368791243168225[27] = 0;
   out_3264368791243168225[28] = 0;
   out_3264368791243168225[29] = 0;
   out_3264368791243168225[30] = 0;
   out_3264368791243168225[31] = 0;
   out_3264368791243168225[32] = 0;
   out_3264368791243168225[33] = 0;
   out_3264368791243168225[34] = 0;
   out_3264368791243168225[35] = 0;
   out_3264368791243168225[36] = 0;
   out_3264368791243168225[37] = 0;
   out_3264368791243168225[38] = 0;
   out_3264368791243168225[39] = 1;
   out_3264368791243168225[40] = 0;
   out_3264368791243168225[41] = 0;
   out_3264368791243168225[42] = 0;
   out_3264368791243168225[43] = 0;
   out_3264368791243168225[44] = 0;
   out_3264368791243168225[45] = 0;
   out_3264368791243168225[46] = 0;
   out_3264368791243168225[47] = 0;
   out_3264368791243168225[48] = 0;
   out_3264368791243168225[49] = 0;
   out_3264368791243168225[50] = 0;
   out_3264368791243168225[51] = 0;
   out_3264368791243168225[52] = 0;
   out_3264368791243168225[53] = 0;
   out_3264368791243168225[54] = 0;
   out_3264368791243168225[55] = 0;
   out_3264368791243168225[56] = 0;
   out_3264368791243168225[57] = 0;
   out_3264368791243168225[58] = 0;
   out_3264368791243168225[59] = 0;
   out_3264368791243168225[60] = 0;
   out_3264368791243168225[61] = 0;
   out_3264368791243168225[62] = 1;
   out_3264368791243168225[63] = 0;
   out_3264368791243168225[64] = 0;
   out_3264368791243168225[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3808128492149288823) {
  H(in_vec, out_3808128492149288823);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7187904047825591631) {
  err_fun(nom_x, delta_x, out_7187904047825591631);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5909848640433995487) {
  inv_err_fun(nom_x, true_x, out_5909848640433995487);
}
void live_H_mod_fun(double *state, double *out_6245519984707546482) {
  H_mod_fun(state, out_6245519984707546482);
}
void live_f_fun(double *state, double dt, double *out_3243602048370032302) {
  f_fun(state,  dt, out_3243602048370032302);
}
void live_F_fun(double *state, double dt, double *out_5080430979257473046) {
  F_fun(state,  dt, out_5080430979257473046);
}
void live_h_4(double *state, double *unused, double *out_5465210553308981186) {
  h_4(state, unused, out_5465210553308981186);
}
void live_H_4(double *state, double *unused, double *out_8665156220454918411) {
  H_4(state, unused, out_8665156220454918411);
}
void live_h_9(double *state, double *unused, double *out_4580217727067371428) {
  h_9(state, unused, out_4580217727067371428);
}
void live_H_9(double *state, double *unused, double *out_4507988484100140928) {
  H_9(state, unused, out_4507988484100140928);
}
void live_h_10(double *state, double *unused, double *out_4894321095925723070) {
  h_10(state, unused, out_4894321095925723070);
}
void live_H_10(double *state, double *unused, double *out_2200864402958350746) {
  H_10(state, unused, out_2200864402958350746);
}
void live_h_12(double *state, double *unused, double *out_6116745976112172927) {
  h_12(state, unused, out_6116745976112172927);
}
void live_H_12(double *state, double *unused, double *out_9160488828207039538) {
  H_12(state, unused, out_9160488828207039538);
}
void live_h_35(double *state, double *unused, double *out_5998315411013033764) {
  h_35(state, unused, out_5998315411013033764);
}
void live_H_35(double *state, double *unused, double *out_6414925795882025829) {
  H_35(state, unused, out_6414925795882025829);
}
void live_h_32(double *state, double *unused, double *out_920711856693618752) {
  h_32(state, unused, out_920711856693618752);
}
void live_H_32(double *state, double *unused, double *out_3631267631463608236) {
  H_32(state, unused, out_3631267631463608236);
}
void live_h_13(double *state, double *unused, double *out_8421617918659120550) {
  h_13(state, unused, out_8421617918659120550);
}
void live_H_13(double *state, double *unused, double *out_8520443505670961767) {
  H_13(state, unused, out_8520443505670961767);
}
void live_h_14(double *state, double *unused, double *out_4580217727067371428) {
  h_14(state, unused, out_4580217727067371428);
}
void live_H_14(double *state, double *unused, double *out_4507988484100140928) {
  H_14(state, unused, out_4507988484100140928);
}
void live_h_33(double *state, double *unused, double *out_1157661319096080697) {
  h_33(state, unused, out_1157661319096080697);
}
void live_H_33(double *state, double *unused, double *out_3264368791243168225) {
  H_33(state, unused, out_3264368791243168225);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
